;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("argparse" include nil nil [24 39])
            ("re" include nil nil [40 49])
            ("functools" include nil nil [50 78])
            ("decimal" include nil nil [79 106])
            ("collections" include nil nil [107 136])
            ("anytree" include nil nil [137 158])
            ("copy" include nil nil [159 184])
            ("DEBUG" variable nil nil [186 198])
            ("debug" function (:arguments 
              ( ("string" variable nil (reparse-symbol function_parameters) [209 215]))              ) nil [199 268])
            ("parse_arguments" function nil nil [269 473])
            ("pcky" function (:arguments 
              ( ("tokens" variable nil (reparse-symbol function_parameters) [483 489])
                ("rules" variable nil (reparse-symbol function_parameters) [491 496])
                ("lexicon" variable nil (reparse-symbol function_parameters) [498 505]))              ) nil [474 4638])
            ("table_to_tree" function (:arguments 
              ( ("p" variable nil (reparse-symbol function_parameters) [4657 4658])
                ("wholetable" variable nil (reparse-symbol function_parameters) [4660 4670]))              ) nil [4639 5364])
            ("mark_spans" function (:arguments 
              ( ("tree" variable nil (reparse-symbol function_parameters) [5380 5384])
                ("tokens" variable nil (reparse-symbol function_parameters) [5386 5392]))              ) nil [5365 5841])
            ("parse_lexicon" function (:arguments 
              ( ("lexicon" variable nil (reparse-symbol function_parameters) [5860 5867]))              ) nil [5842 6132])
            ("main" function nil nil [6133 7446])
            ("parse_rules" function (:arguments 
              ( ("rules" variable nil (reparse-symbol function_parameters) [7463 7468]))              ) nil [7447 7960])
            ("binarize" function (:arguments 
              ( ("rule" variable nil (reparse-symbol function_parameters) [7974 7978])
                ("generator" variable nil (reparse-symbol function_parameters) [7980 7989])
                ("queue" variable nil (reparse-symbol function_parameters) [7991 7996]))              ) nil [7961 8798])
            ("debinarize" function (:arguments 
              ( ("tree" variable nil (reparse-symbol function_parameters) [8814 8818]))              ) nil [8799 9033])
            ("symbol_generator" function nil nil [9034 9199])
            ("deunitize" function (:arguments 
              ( ("rule" variable nil (reparse-symbol function_parameters) [9214 9218])
                ("rules" variable nil (reparse-symbol function_parameters) [9220 9225])
                ("check_queue" variable nil (reparse-symbol function_parameters) [9227 9238]))              ) nil [9200 10081])
            ("sexp_to_tree" function (:arguments 
              ( ("sexp" variable nil (reparse-symbol function_parameters) [10099 10103]))              ) nil [10082 11055])
            ("mark_sexp" function (:arguments 
              ( ("tree" variable nil (reparse-symbol function_parameters) [11070 11074])
                ("other_tree" variable nil (reparse-symbol function_parameters) [11076 11086]))              ) nil [11056 11495])
            ("score_tree" function (:arguments 
              ( ("tree" variable nil (reparse-symbol function_parameters) [11511 11515])
                ("gs" variable nil (reparse-symbol function_parameters) [11517 11519]))              ) nil [11496 12302])
            ("tree_to_sexp" function (:arguments 
              ( ("tree" variable nil (reparse-symbol function_parameters) [12320 12324]))              ) nil [12303 12542])
            ("main" code nil nil [12543 12549]))          
      :file "cky.py"
      :pointmax 12550
      :fsize 12549
      :lastmodtime '(23979 25587 889100 689000)
      :unmatched-syntax '((NAME 5721 . 5731) (IF 5753 . 5755) (ELSE 5775 . 5779) (NAME 5657 . 5666) (IF 5687 . 5689) (ELSE 5708 . 5712))))
  :file "!home!nmg!Code!Python!nlp!hw2!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
