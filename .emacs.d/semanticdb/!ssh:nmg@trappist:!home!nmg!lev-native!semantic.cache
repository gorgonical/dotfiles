;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("stdint.h" include (:system-flag t) nil [1 20])
            ("limits.h" include (:system-flag t) nil [21 40])
            ("petos.h" include (:system-flag t) nil [41 59])
            ("IRQ" variable (:constant-flag t) nil [69 72])
            ("CPU" variable (:constant-flag t) nil [83 86])
            ("CPU" variable (:constant-flag t) nil [83 86])
            ("main" function (:type "int") nil [90 200]))          
      :file "ipi.c"
      :pointmax 201
      :fsize 200
      :lastmodtime '(24664 13356)
      :unmatched-syntax nil
      :lexical-table 
        '(("CPU" . ((number "4" 87 . 88)))
          ("IRQ" . ((number "200" 73 . 76)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("linux/module.h" include (:system-flag t) nil [718 743])
            ("linux/moduleparam.h" include (:system-flag t) nil [744 774])
            ("linux/miscdevice.h" include (:system-flag t) nil [775 804])
            ("linux/mm.h" include (:system-flag t) nil [805 826])
            ("linux/mmu_context.h" include (:system-flag t) nil [827 857])
            ("linux/file.h" include (:system-flag t) nil [858 881])
            ("linux/proc_fs.h" include (:system-flag t) nil [882 908])
            ("linux/kthread.h" include (:system-flag t) nil [909 935])
            ("linux/version.h" include (:system-flag t) nil [936 962])
            ("linux/sched/task.h" include (:system-flag t) nil [1013 1042])
            ("asm/uaccess.h" include (:system-flag t) nil [1051 1075])
            ("xpmem.h" include (:system-flag t) nil [1077 1095])
            ("xpmem_private.h" include (:system-flag t) nil [1096 1122])
            ("xpmem_extended.h" include (:system-flag t) nil [1123 1150])
            ("xpmem_my_part" variable
               (:pointer 1
                :default-value "NULL"
                :type ("xpmem_partition" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [1153 1200])
            ("xpmem_proc_dir" variable
               (:pointer 1
                :default-value "NULL"
                :type ("proc_dir_entry" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [1234 1281])
            ("ns" variable
               (:default-value "1"
                :type "int")
                nil [1283 1294])
            ("module_param" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("ns" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1308 1311])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [1312 1316]))                  
                :type "int")
                nil [1295 1320])
            ("module_param" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("xpmem_follow_page" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1335 1353])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [1354 1358]))                  
                :type "int")
                nil [1322 1362])
            ("module_param" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("xpmem_debug_on" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1376 1391])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [1392 1396])
                    ("" variable (:type ("S_IRUSR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1397 1406])
                    ("" variable (:type ("S_IWUSR" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1407 1416])
                    ("" variable (:type ("S_IRGRP" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1417 1426])
                    ("" variable (:type ("S_IROTH" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1427 1435]))                  
                :type "int")
                nil [1363 1436])
            ("xpmem_open" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("inode" variable
                       (:pointer 1
                        :type ("inode" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1666 1686])
                    ("file" variable
                       (:pointer 1
                        :type ("file" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1687 1705]))                  
                :type "int")
                nil [1644 5082])
            ("xpmem_destroy_tg" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("tg" variable
                       (:pointer 1
                        :type ("xpmem_thread_group" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5283 5313]))                  
                :type "void")
                nil [5254 5559])
            ("xpmem_teardown" function
               (:arguments 
                  ( ("tg" variable
                       (:pointer 1
                        :type ("xpmem_thread_group" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5795 5825]))                  
                :type "void")
                nil [5775 6678])
            ("xpmem_flush" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("file" variable
                       (:pointer 1
                        :type ("file" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6814 6832])
                    ("owner" variable (:type ("fl_owner_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6833 6850]))                  
                :type "int")
                nil [6791 10270])
            ("xpmem_ioctl" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("file" variable
                       (:pointer 1
                        :type ("file" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [10386 10404])
                    ("cmd" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [10405 10422])
                    ("arg" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [10423 10441]))                  
                :type "long")
                nil [10362 14874])
            ("xpmem_fops" variable
               (:typemodifiers ("static")
                :default-value "{
    .owner = THIS_MODULE,
    .open = xpmem_open,
    .flush = xpmem_flush,
    .unlocked_ioctl = xpmem_ioctl,
    .mmap = xpmem_mmap,
}"
                :type ("file_operations" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [14876 15058])
            ("xpmem_dev_handle" variable
               (:typemodifiers ("static")
                :default-value "{
    .minor = MISC_DYNAMIC_MINOR,
    .name = XPMEM_MODULE_NAME,
    .fops = &xpmem_fops
}"
                :type ("miscdevice" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [15060 15196])
            ("xpmem_init" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [15260 15265]))                  
                :type ("__init" type (:type "class") nil nil))
                nil [15242 17849])
            ("xpmem_exit" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [17927 17932]))                  
                :type ("__exit" type (:type "class") nil nil))
                nil [17909 18395])
            ("MODULE_LICENSE" function
               (:prototype-flag t
                :type "int")
                nil [18449 18471])
            ("MODULE_AUTHOR" function
               (:prototype-flag t
                :type "int")
                nil [18472 18512])
            ("MODULE_INFO" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("supported" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18525 18535]))                  
                :type "int")
                nil [18513 18548])
            ("MODULE_DESCRIPTION" function
               (:prototype-flag t
                :type "int")
                nil [18549 18585])
            ("module_init" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("xpmem_init" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18598 18609]))                  
                :type "int")
                nil [18586 18610])
            ("module_exit" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("xpmem_exit" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18623 18634]))                  
                :type "int")
                nil [18611 18635]))          
      :file "xpmem_main.c"
      :pointmax 18636
      :fsize 18635
      :lastmodtime '(24282 40412)
      :unmatched-syntax '((string 18568 . 18583) (string 18536 . 18546) (string 18486 . 18510) (string 18464 . 18469) (VOID 17904 . 17908) (INT 15238 . 15241) (punctuation 1425 . 1426) (punctuation 1415 . 1416) (punctuation 1405 . 1406) (number 1359 . 1360) (number 1317 . 1318)))
    (semanticdb-table "semanticdb-table"
      :major-mode makefile-gmake-mode
      :tags 
        '( ("leviathan_home" variable (:default-value ("$(PWD)")) nil [2 27])
            ("component_paths" variable (:default-value ("LEVIATHAN_PATH=$(leviathan_home)" "XPMEM_PATH=$(leviathan_home)/xpmem" "PETLIB_PATH=$(leviathan_home)/petlib" "PALACIOS_PATH=$(leviathan_home)/palacios" "PALACIOS_LWK_PATH=$(leviathan_home)/palacios-lwk" "PISCES_PATH=$(leviathan_home)/pisces" "WHITEDB_PATH=$(leviathan_home)/whitedb-0.7.3")) nil [28 355])
            ("leviathan_components" variable (:default-value ("petlib" "xpmem" "pisces" "palacios" "kitten" "whitedb-0.7.3" "libhobbes" "hio" "lnx_inittask" "lwk_inittask" "shell")) nil [357 539])
            ("invoke" variable (:default-value ("echo" "' [Building $1]'" ";" "cd" "$(leviathan_home)/$1" "&&" "make" "$(component_paths)||" "exit")) nil [543 642])
            ("all" function (:arguments ("leviathan_components")) nil [705 731])
            ("leviathan_components" function nil nil [732 820])
            ("clean" function nil nil [821 915]))          
      :file "Makefile"
      :pointmax 916
      :fsize 915
      :lastmodtime '(24485 43579)
      :unmatched-syntax '((shell-command 643 . 704) (bol 642 . 642)))
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("hobbes_enclave.h" include (:system-flag t) nil [1 28])
            ("stdio.h" include (:system-flag t) nil [29 47])
            ("main" function (:type "int") nil [49 195]))          
      :file "test.c"
      :pointmax 196
      :fsize 195
      :lastmodtime '(24280 269)
      :unmatched-syntax nil))
  :file "!ssh:nmg@trappist:!home!nmg!lev-native!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
