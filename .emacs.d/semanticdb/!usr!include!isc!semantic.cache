;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("inttypes.h" include (:system-flag t) nil [404 425])
            ("stdbool.h" include (:system-flag t) nil [426 446])
            ("__has_feature" variable (:constant-flag t) nil [484 497])
            ("__has_extension" variable (:constant-flag t) nil [549 564])
            ("__GNUC_PREREQ__" variable (:constant-flag t) nil [680 695])
            ("memory_order" type
               (:members 
                  ( ("memory_order_relaxed" variable
                       (:constant-flag t
                        :default-value (1578 1594)
                        :type "int")
                        (reparse-symbol enumsubparts) [1555 1594])
                    ("memory_order_consume" variable
                       (:constant-flag t
                        :default-value (1620 1636)
                        :type "int")
                        (reparse-symbol enumsubparts) [1597 1636])
                    ("memory_order_acquire" variable
                       (:constant-flag t
                        :default-value (1662 1678)
                        :type "int")
                        (reparse-symbol enumsubparts) [1639 1678])
                    ("memory_order_release" variable
                       (:constant-flag t
                        :default-value (1704 1720)
                        :type "int")
                        (reparse-symbol enumsubparts) [1681 1720])
                    ("memory_order_acq_rel" variable
                       (:constant-flag t
                        :default-value (1746 1762)
                        :type "int")
                        (reparse-symbol enumsubparts) [1723 1762])
                    ("memory_order_seq_cst" variable
                       (:constant-flag t
                        :default-value (1788 1804)
                        :type "int")
                        (reparse-symbol enumsubparts) [1765 1804]))                  
                :type "enum")
                nil [1534 1807])
            ("memory_order" type
               (:typedef ("memory_order" type (:type "enum") nil nil)
                :type "typedef")
                nil [1809 1848])
            ("atomic_int_fast32_t" type
               (:typedef ("int_fast32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [1850 1891])
            ("atomic_uint_fast32_t" type
               (:typedef ("uint_fast32_t" type (:type "class") nil nil)
                :type "typedef")
                nil [1892 1935])
            ("atomic_int_fast64_t" type
               (:typedef ("int_fast64_t" type (:type "class") nil nil)
                :type "typedef")
                nil [1936 1977])
            ("atomic_uint_fast64_t" type
               (:typedef ("uint_fast64_t" type (:type "class") nil nil)
                :type "typedef")
                nil [1978 2021])
            ("atomic_bool" type
               (:typedef ("bool")
                :type "typedef")
                nil [2022 2048])
            ("atomic_init" variable (:constant-flag t) nil [3664 3675])
            ("atomic_load_explicit" variable (:constant-flag t) nil [3720 3740])
            ("atomic_store_explicit" variable (:constant-flag t) nil [3794 3815])
            ("atomic_fetch_add_explicit" variable (:constant-flag t) nil [3953 3978])
            ("atomic_fetch_sub_explicit" variable (:constant-flag t) nil [4038 4063])
            ("atomic_compare_exchange_strong_explicit" variable (:constant-flag t) nil [4130 4169])
            ("atomic_compare_exchange_weak_explicit" variable (:constant-flag t) nil [4500 4537])
            ("atomic_load" variable (:constant-flag t) nil [4669 4680])
            ("atomic_store" variable (:constant-flag t) nil [4745 4757])
            ("atomic_fetch_add" variable (:constant-flag t) nil [4833 4849])
            ("atomic_fetch_sub" variable (:constant-flag t) nil [4929 4945])
            ("atomic_compare_exchange_strong" variable (:constant-flag t) nil [5025 5055])
            ("atomic_compare_exchange_weak" variable (:constant-flag t) nil [5199 5227]))          
      :file "stdatomic.h"
      :pointmax 5361
      :fsize 5360
      :lastmodtime '(23819 7106 0 0)
      :unmatched-syntax '((symbol 398 . 402) (symbol 391 . 397) (punctuation 390 . 391))
      :lexical-table 
        '(("atomic_fetch_add_explicit" (spp-arg-list ("obj" "arg" "order") 3978 . 3995) . ((symbol "__sync_fetch_and_add" 3999 . 4019) (semantic-list "(obj, arg)" 4019 . 4029)))
          ("atomic_compare_exchange_strong" (spp-arg-list ("obj" "expected" "desired") 5055 . 5079) . ((symbol "atomic_compare_exchange_strong_explicit" 5083 . 5122) (semantic-list "(obj, expected, desired, memory_order_seq_cst, memory_order_seq_cst)" 5122 . 5190)))
          ("atomic_load" (spp-arg-list ("obj") 4680 . 4685) . ((symbol "atomic_load_explicit" 4689 . 4709) (semantic-list "(obj, memory_order_seq_cst)" 4709 . 4736)))
          ("__has_extension" (spp-arg-list ("x") 564 . 567) . ((symbol "__has_feature" 568 . 581) (semantic-list "(x)" 581 . 584)))
          ("atomic_load_explicit" (spp-arg-list ("obj" "order") 3740 . 3752) . ((symbol "__sync_fetch_and_add" 3757 . 3777) (semantic-list "(obj, 0)" 3777 . 3785)))
          ("__has_feature" (spp-arg-list ("x") 497 . 500) . ((number "0" 501 . 502)))
          ("atomic_init" (spp-arg-list ("obj" "desired") 3675 . 3689) . ((semantic-list "(*obj = desired)" 3695 . 3711)))
          ("atomic_fetch_sub_explicit" (spp-arg-list ("obj" "arg" "order") 4063 . 4080) . ((symbol "__sync_fetch_and_sub" 4084 . 4104) (semantic-list "(obj, arg, order)" 4104 . 4121)))
          ("atomic_compare_exchange_strong_explicit" (spp-arg-list ("obj" "expected" "desired" "succ" "fail") 4169 . 4205) . ((semantic-list "({									\\
		__typeof__(obj) __v;						\\
		_Bool __r;							\\
		__v = (__typeof__(obj))__sync_val_compare_and_swap(obj, 	\\
								   *(expected), \\
								   desired);	\\
		__r = ((__typeof__(obj))*(expected) == __v);            	\\
		*(expected) = __v;						\\
		__r;								\\
	})" 4209 . 4491)))
          ("atomic_fetch_add" (spp-arg-list ("obj" "arg") 4849 . 4859) . ((symbol "atomic_fetch_add_explicit" 4863 . 4888) (semantic-list "(obj, arg, memory_order_seq_cst)" 4888 . 4920)))
          ("atomic_compare_exchange_weak_explicit" (spp-arg-list ("obj" "expected" "desired" "succ" "fail") 4537 . 4573) . ((symbol "atomic_compare_exchange_strong_explicit" 4577 . 4616) (semantic-list "(obj, expected, desired, succ, fail)" 4616 . 4652)))
          ("atomic_fetch_sub" (spp-arg-list ("obj" "arg") 4945 . 4955) . ((symbol "atomic_fetch_sub_explicit" 4959 . 4984) (semantic-list "(obj, arg, memory_order_seq_cst)" 4984 . 5016)))
          ("__GNUC_PREREQ__" (spp-arg-list ("maj" "min") 695 . 705) . ((semantic-list "((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))" 728 . 788)))
          ("atomic_store_explicit" (spp-arg-list ("obj" "desired" "order") 3815 . 3836) . 
              ((DO "do" 3840 . 3842) (semantic-list "{						\\
		__sync_synchronize();			\\
		*obj = desired;				\\
		__sync_synchronize();			\\
	}" 3843 . 3933) (WHILE "while" 3934 . 3939) (semantic-list "(0)" 3940 . 3943) (punctuation ";" 3943 . 3944)))
          ("atomic_store" (spp-arg-list ("obj" "arg") 4757 . 4767) . ((symbol "atomic_store_explicit" 4771 . 4792) (semantic-list "(obj, arg, memory_order_seq_cst)" 4792 . 4824)))
          ("atomic_compare_exchange_weak" (spp-arg-list ("obj" "expected" "desired") 5227 . 5251) . ((symbol "atomic_compare_exchange_weak_explicit" 5255 . 5292) (semantic-list "(obj, expected, desired, memory_order_seq_cst, memory_order_seq_cst)" 5292 . 5360)))
          )
))
  :file "!usr!include!isc!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
