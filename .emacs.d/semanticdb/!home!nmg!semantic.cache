;; Object semanticdb-project-database-file-1d9fc1c
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-1d9fc1c"
  :tables
  (list
    (semanticdb-table "semanticdb-table-1d9fbdc"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("package-initialize" code nil nil [1 21])
            ("custom-set-variables" code nil nil [22 7878])
            ("custom-set-faces" code nil nil [7879 8491])
            ("setq" code nil nil [8492 8515])
            ("fset" code nil nil [8517 8737])
            ("fset" code nil nil [8739 8962])
            ("work-agenda-fun" function nil nil [9012 9195])
            ("home-agenda-fun" function nil nil [9197 9358])
            ("setq" code nil nil [9489 9526])
            ("setq" code nil nil [9527 9563])
            ("add-to-list" code nil nil [9564 9831])
            ("add-to-list" code nil nil [9832 10080])
            ("global-set-key" code nil nil [10082 10124])
            ("global-set-key" code nil nil [10125 10174])
            ("global-set-key" code nil nil [10175 10221])
            ("global-set-key" code nil nil [10222 10270])
            ("my-revert-buffer" function (:user-visible-flag t) nil [10271 10410])
            ("global-set-key" code nil nil [10411 10459])
            ("global-set-key" code nil nil [10460 10506])
            ("setq" code nil nil [10509 10567])
            ("add-to-list" code nil nil [10568 10611])
            ("global-set-key" code nil nil [10612 10666])
            ("global-set-key" code nil nil [10668 10806])
            ("global-set-key" code nil nil [10808 10946])
            ("add-hook" code nil nil [10969 11017])
            ("add-hook" code nil nil [11018 11070])
            ("add-hook" code nil nil [11071 11118])
            ("sp-mode-hook-keys" function nil nil [11119 11400])
            ("eval-after-load" code nil nil [11401 11457])
            ("whitespace" include nil nil [11515 11536])
            ("setq" code nil nil [11537 11599])
            ("global-whitespace-mode" code nil nil [11600 11626])
            ("setq" code nil nil [11627 11713])
            ("setq-default" code nil nil [11743 11778])
            ("add-hook" code nil nil [11815 12044])
            ("add-hook" code nil nil [12045 12103])
            ("add-hook" code nil nil [12104 12314])
            ("add-hook" code nil nil [12316 12444])
            ("menu-bar-mode" code nil nil [12446 12464])
            ("yank-pop-forwards" function (:arguments ("arg")) nil [12465 12535])
            ("global-set-key" code nil nil [12536 12584])
            ("global-set-key" code nil nil [12608 12655])
            ("projectile" include nil nil [12671 12692])
            ("projectile-global-mode" code nil nil [12693 12719])
            ("define-key" code nil nil [12721 12789])
            ("global-set-key" code nil nil [12845 12888])
            ("set-cursor-color" code nil nil [12913 12941])
            ("linum-off" include nil nil [12979 12999])
            ("ivy-mode" code nil nil [13027 13039])
            ("setq" code nil nil [13040 13072])
            ("setq" code nil nil [13073 13107])
            ("global-set-key" code nil nil [13109 13145])
            ("global-set-key" code nil nil [13146 13187])
            ("global-set-key" code nil nil [13188 13239])
            ("global-set-key" code nil nil [13240 13298])
            ("global-set-key" code nil nil [13299 13357])
            ("global-set-key" code nil nil [13358 13411])
            ("global-set-key" code nil nil [13412 13471])
            ("global-set-key" code nil nil [13473 13513])
            ("global-set-key" code nil nil [13514 13557])
            ("global-set-key" code nil nil [13558 13606])
            ("global-set-key" code nil nil [13607 13649])
            ("counsel-projectile-mode" code nil nil [13651 13676])
            ("ace-window" include nil nil [13678 13699])
            ("global-set-key" code nil nil [13701 13741])
            ("put" code nil nil [13742 13779])
            ("key-chord" include nil nil [13781 13801])
            ("key-chord-mode" code nil nil [13802 13820])
            ("key-chord-define-global" code nil nil [13821 13886])
            ("key-chord-define-global" code nil nil [13887 13947])
            ("key-chord-define-global" code nil nil [13948 13999])
            ("key-chord-define-global" code nil nil [14000 14044])
            ("key-chord-define-global" code nil nil [14045 14095])
            ("key-chord-define-global" code nil nil [14096 14143])
            ("key-chord-define-global" code nil nil [14144 14188])
            ("key-chord-define-global" code nil nil [14189 14233])
            ("key-chord-define-global" code nil nil [14234 14275])
            ("defhydra" code nil nil [14277 14447])
            ("one-buffer" function nil nil [14449 15225])
            ("alert" include nil nil [15227 15243])
            ("org-alert" include nil nil [15244 15264])
            ("setq" code nil nil [15265 15294])
            ("fset" code nil nil [15296 15339])
            ("fset" code nil nil [15341 15382])
            ("global-set-key" code nil nil [15384 15542])
            ("global-set-key" code nil nil [15543 15709])
            ("global-set-key" code nil nil [15710 15754])
            ("global-unset-key" code nil nil [15860 15892])
            ("xcscope" include nil nil [15893 15911])
            ("global-set-key" code nil nil [15912 15963])
            ("global-set-key" code nil nil [15964 16015])
            ("flymake-lua" include nil nil [16016 16038])
            ("add-hook" code nil nil [16039 16082])
            ("exec-path-from-shell-initialize" code nil nil [16083 16116])
            ("global-set-key" code nil nil [16117 16176])
            ("global-set-key" code nil nil [16177 16236])
            ("global-set-key" code nil nil [16238 16272])
            ("c-add-style" code nil nil [16273 16323])
            ("setq" code nil nil [16324 16353])
            ("global-set-key" code nil nil [16354 16429])
            ("global-set-key" code nil nil [16430 16513])
            ("global-set-key" code nil nil [16514 16581])
            ("flymake-get-tex-args" function (:arguments ("file-name")) nil [16582 16668])
            ("global-set-key" code nil nil [16669 16706])
            ("yasnippet" include nil nil [16707 16727])
            ("scroll-bar-mode" code nil nil [16728 16748])
            ("global-set-key" code nil nil [16750 16796])
            ("my-hs-hide" variable nil nil [16798 16867])
            ("my-toggle-hideshow-all" function (:user-visible-flag t) nil [16868 17058])
            ("global-set-key" code nil nil [17059 17111])
            ("global-unset-key" code nil nil [17112 17142])
            ("fset" code nil nil [17143 17484])
            ("global-set-key" code nil nil [17506 17572]))          
      :file ".emacs"
      :pointmax 17631
      :fsize 23545
      :lastmodtime '(25183 817 934082 422000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-1d9fbfc"
      :major-mode c-mode
      :tags 
        '( ("stdio.h" include (:system-flag t) nil [1 19])
            ("CART_SIZE" variable (:constant-flag t) nil [29 38])
            ("BYTES_PER_CART" variable (:constant-flag t) nil [50 64])
            ("CHUNK_SIZE_BYTES" variable (:constant-flag t) nil [110 126])
            ("barcode_t" type
               (:typedef ("char")
                :type "typedef")
                nil [132 159])
            ("cart" type
               (:members 
                  ( ("user_id" variable (:type "unsigned int") (reparse-symbol classsubparts) [187 208])
                    ("security_policy" variable (:type "unsigned int") (reparse-symbol classsubparts) [213 242])
                    ("num_items" variable (:type "unsigned int") (reparse-symbol classsubparts) [247 270])
                    ("code" variable
                       (:dereference 1
                        :type ("barcode_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [275 304]))                  
                :type "struct")
                nil [161 314])
            ("cart_t" type
               (:typedef ("cart" type (:type "struct") nil nil)
                :type "typedef")
                nil [161 314])
            ("main" function (:type "int") nil [318 397]))          
      :file "test.c"
      :pointmax 398
      :fsize 397
      :lastmodtime '(25196 33797 511745 232000)
      :unmatched-syntax nil
      :lexical-table 
        '(("CHUNK_SIZE_BYTES" . ((number "100" 127 . 130)))
          ("BYTES_PER_CART" . ((semantic-list "( sizeof(unsigned int) * CART_SIZE )" 65 . 101)))
          ("CART_SIZE" . ((number "32" 39 . 41)))
          )
))
  :file "!home!nmg!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
