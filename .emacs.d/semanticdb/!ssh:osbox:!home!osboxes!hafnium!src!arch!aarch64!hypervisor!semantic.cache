;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("hf/arch/vm.h" include nil nil [209 232])
            ("hypervisor/feature_id.h" include nil nil [234 268])
            ("arch_vm_features_set" function
               (:arguments 
                  ( ("vm" variable
                       (:pointer 1
                        :type ("vm" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [296 310]))                  
                :type "void")
                nil [270 1527]))          
      :file "vm.c"
      :pointmax 1528
      :fsize 1581
      :lastmodtime '(24956 22368)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :file "feature_id.h"
      :fsize 1262
      :lastmodtime '(24817 60635))
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("debug_el1.h" include nil nil [209 231])
            ("hf/check.h" include nil nil [233 254])
            ("hf/dlog.h" include nil nil [255 275])
            ("hf/types.h" include nil nil [276 297])
            ("msr.h" include nil nil [299 315])
            ("sysregs.h" include nil nil [316 336])
            ("EL1_DEBUG_REGISTERS_READ" variable (:constant-flag t) nil [524 548])
            ("EL1_DEBUG_REGISTERS_WRITE" variable (:constant-flag t) nil [836 861])
            ("EL1_DEBUG_REGISTERS_READ_WRITE" variable (:constant-flag t) nil [1083 1113])
            ("debug_el1_is_register_access" function
               (:arguments 
                  ( ("esr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4219 4233]))                  
                :type "bool")
                nil [4185 4438])
            ("debug_el1_process_access" function
               (:arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4612 4630])
                    ("vm_id" variable (:type ("ffa_vm_id_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4631 4649])
                    ("esr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4659 4673]))                  
                :type "bool")
                nil [4582 6403]))          
      :file "debug_el1.c"
      :pointmax 6404
      :fsize 6403
      :lastmodtime '(24840 39401)
      :unmatched-syntax nil
      :lexical-table 
        '(("EL1_DEBUG_REGISTERS_READ_WRITE" . 
              ((symbol "X" 1124 . 1125) (semantic-list "(OSDTRRX_EL1	    , 2, 0, 0,  0, 2)" 1125 . 1159) (symbol "X" 1163 . 1164) (semantic-list "(MDCCINT_EL1	    , 2, 0, 0,  2, 0)" 1164 . 1198) (symbol "X" 1202 . 1203) (semantic-list "(MDSCR_EL1	    , 2, 0, 0,  2, 2)" 1203 . 1235) (symbol "X" 1239 . 1240) (semantic-list "(OSDTRTX_EL1	    , 2, 0, 0,  3, 2)" 1240 . 1274) (symbol "X" 1278 . 1279) (semantic-list "(OSECCR_EL1	    , 2, 0, 0,  6, 2)" 1279 . 1312) (symbol "X" 1316 . 1317) (semantic-list "(DBGBVR0_EL1	    , 2, 0, 0,  0, 4)" 1317 . 1351) (symbol "X" 1355 . 1356) (semantic-list "(DBGBVR1_EL1	    , 2, 0, 0,  1, 4)" 1356 . 1390) (symbol "X" 1394 . 1395) (semantic-list "(DBGBVR2_EL1	    , 2, 0, 0,  2, 4)" 1395 . 1429) (symbol "X" 1433 . 1434) (semantic-list "(DBGBVR3_EL1	    , 2, 0, 0,  3, 4)" 1434 . 1468) (symbol "X" 1472 . 1473) (semantic-list "(DBGBVR4_EL1	    , 2, 0, 0,  4, 4)" 1473 . 1507) (symbol "X" 1511 . 1512) (semantic-list "(DBGBVR5_EL1	    , 2, 0, 0,  5, 4)" 1512 . 1546) (symbol "X" 1550 . 1551) (semantic-list "(DBGBVR6_EL1	    , 2, 0, 0,  6, 4)" 1551 . 1585) (symbol "X" 1589 . 1590) (semantic-list "(DBGBVR7_EL1	    , 2, 0, 0,  7, 4)" 1590 . 1624) (symbol "X" 1628 . 1629) (semantic-list "(DBGBVR8_EL1	    , 2, 0, 0,  8, 4)" 1629 . 1663) (symbol "X" 1667 . 1668) (semantic-list "(DBGBVR9_EL1	    , 2, 0, 0,  9, 4)" 1668 . 1702) (symbol "X" 1706 . 1707) (semantic-list "(DBGBVR10_EL1	    , 2, 0, 0, 10, 4)" 1707 . 1742) (symbol "X" 1746 . 1747) (semantic-list "(DBGBVR11_EL1	    , 2, 0, 0, 11, 4)" 1747 . 1782) (symbol "X" 1786 . 1787) (semantic-list "(DBGBVR12_EL1	    , 2, 0, 0, 12, 4)" 1787 . 1822) (symbol "X" 1826 . 1827) (semantic-list "(DBGBVR13_EL1	    , 2, 0, 0, 13, 4)" 1827 . 1862) (symbol "X" 1866 . 1867) (semantic-list "(DBGBVR14_EL1	    , 2, 0, 0, 14, 4)" 1867 . 1902) (symbol "X" 1906 . 1907) (semantic-list "(DBGBVR15_EL1	    , 2, 0, 0, 15, 4)" 1907 . 1942) (symbol "X" 1946 . 1947) (semantic-list "(DBGBCR0_EL1       , 2, 0, 0,  0, 5)" 1947 . 1983) (symbol "X" 1987 . 1988) (semantic-list "(DBGBCR1_EL1       , 2, 0, 0,  1, 5)" 1988 . 2024) (symbol "X" 2028 . 2029) (semantic-list "(DBGBCR2_EL1       , 2, 0, 0,  2, 5)" 2029 . 2065) (symbol "X" 2069 . 2070) (semantic-list "(DBGBCR3_EL1       , 2, 0, 0,  3, 5)" 2070 . 2106) (symbol "X" 2110 . 2111) (semantic-list "(DBGBCR4_EL1       , 2, 0, 0,  4, 5)" 2111 . 2147) (symbol "X" 2151 . 2152) (semantic-list "(DBGBCR5_EL1       , 2, 0, 0,  5, 5)" 2152 . 2188) (symbol "X" 2192 . 2193) (semantic-list "(DBGBCR6_EL1       , 2, 0, 0,  6, 5)" 2193 . 2229) (symbol "X" 2233 . 2234) (semantic-list "(DBGBCR7_EL1       , 2, 0, 0,  7, 5)" 2234 . 2270) (symbol "X" 2274 . 2275) (semantic-list "(DBGBCR8_EL1       , 2, 0, 0,  8, 5)" 2275 . 2311) (symbol "X" 2315 . 2316) (semantic-list "(DBGBCR9_EL1       , 2, 0, 0,  9, 5)" 2316 . 2352) (symbol "X" 2356 . 2357) (semantic-list "(DBGBCR10_EL1      , 2, 0, 0, 10, 5)" 2357 . 2393) (symbol "X" 2397 . 2398) (semantic-list "(DBGBCR11_EL1      , 2, 0, 0, 11, 5)" 2398 . 2434) (symbol "X" 2438 . 2439) (semantic-list "(DBGBCR12_EL1      , 2, 0, 0, 12, 5)" 2439 . 2475) (symbol "X" 2479 . 2480) (semantic-list "(DBGBCR13_EL1      , 2, 0, 0, 13, 5)" 2480 . 2516) (symbol "X" 2520 . 2521) (semantic-list "(DBGBCR14_EL1      , 2, 0, 0, 14, 5)" 2521 . 2557) (symbol "X" 2561 . 2562) (semantic-list "(DBGBCR15_EL1      , 2, 0, 0, 15, 5)" 2562 . 2598) (symbol "X" 2602 . 2603) (semantic-list "(DBGWVR0_EL1       , 2, 0, 0,  0, 6)" 2603 . 2639) (symbol "X" 2643 . 2644) (semantic-list "(DBGWVR1_EL1       , 2, 0, 0,  1, 6)" 2644 . 2680) (symbol "X" 2684 . 2685) (semantic-list "(DBGWVR2_EL1       , 2, 0, 0,  2, 6)" 2685 . 2721) (symbol "X" 2725 . 2726) (semantic-list "(DBGWVR3_EL1       , 2, 0, 0,  3, 6)" 2726 . 2762) (symbol "X" 2766 . 2767) (semantic-list "(DBGWVR4_EL1       , 2, 0, 0,  4, 6)" 2767 . 2803) (symbol "X" 2807 . 2808) (semantic-list "(DBGWVR5_EL1       , 2, 0, 0,  5, 6)" 2808 . 2844) (symbol "X" 2848 . 2849) (semantic-list "(DBGWVR6_EL1       , 2, 0, 0,  6, 6)" 2849 . 2885) (symbol "X" 2889 . 2890) (semantic-list "(DBGWVR7_EL1       , 2, 0, 0,  7, 6)" 2890 . 2926) (symbol "X" 2930 . 2931) (semantic-list "(DBGWVR8_EL1       , 2, 0, 0,  8, 6)" 2931 . 2967) (symbol "X" 2971 . 2972) (semantic-list "(DBGWVR9_EL1       , 2, 0, 0,  9, 6)" 2972 . 3008) (symbol "X" 3012 . 3013) (semantic-list "(DBGWVR10_EL1      , 2, 0, 0, 10, 6)" 3013 . 3049) (symbol "X" 3053 . 3054) (semantic-list "(DBGWVR11_EL1      , 2, 0, 0, 11, 6)" 3054 . 3090) (symbol "X" 3094 . 3095) (semantic-list "(DBGWVR12_EL1      , 2, 0, 0, 12, 6)" 3095 . 3131) (symbol "X" 3135 . 3136) (semantic-list "(DBGWVR13_EL1      , 2, 0, 0, 13, 6)" 3136 . 3172) (symbol "X" 3176 . 3177) (semantic-list "(DBGWVR14_EL1      , 2, 0, 0, 14, 6)" 3177 . 3213) (symbol "X" 3217 . 3218) (semantic-list "(DBGWVR15_EL1      , 2, 0, 0, 15, 6)" 3218 . 3254) (symbol "X" 3258 . 3259) (semantic-list "(DBGWCR0_EL1       , 2, 0, 0,  0, 7)" 3259 . 3295) (symbol "X" 3299 . 3300) (semantic-list "(DBGWCR1_EL1       , 2, 0, 0,  1, 7)" 3300 . 3336) (symbol "X" 3340 . 3341) (semantic-list "(DBGWCR2_EL1       , 2, 0, 0,  2, 7)" 3341 . 3377) (symbol "X" 3381 . 3382) (semantic-list "(DBGWCR3_EL1       , 2, 0, 0,  3, 7)" 3382 . 3418) (symbol "X" 3422 . 3423) (semantic-list "(DBGWCR4_EL1       , 2, 0, 0,  4, 7)" 3423 . 3459) (symbol "X" 3463 . 3464) (semantic-list "(DBGWCR5_EL1       , 2, 0, 0,  5, 7)" 3464 . 3500) (symbol "X" 3504 . 3505) (semantic-list "(DBGWCR6_EL1       , 2, 0, 0,  6, 7)" 3505 . 3541) (symbol "X" 3545 . 3546) (semantic-list "(DBGWCR7_EL1       , 2, 0, 0,  7, 7)" 3546 . 3582) (symbol "X" 3586 . 3587) (semantic-list "(DBGWCR8_EL1       , 2, 0, 0,  8, 7)" 3587 . 3623) (symbol "X" 3627 . 3628) (semantic-list "(DBGWCR9_EL1       , 2, 0, 0,  9, 7)" 3628 . 3664) (symbol "X" 3668 . 3669) (semantic-list "(DBGWCR10_EL1      , 2, 0, 0, 10, 7)" 3669 . 3705) (symbol "X" 3709 . 3710) (semantic-list "(DBGWCR11_EL1      , 2, 0, 0, 11, 7)" 3710 . 3746) (symbol "X" 3750 . 3751) (semantic-list "(DBGWCR12_EL1      , 2, 0, 0, 12, 7)" 3751 . 3787) (symbol "X" 3791 . 3792) (semantic-list "(DBGWCR13_EL1      , 2, 0, 0, 13, 7)" 3792 . 3828) (symbol "X" 3832 . 3833) (semantic-list "(DBGWCR14_EL1      , 2, 0, 0, 14, 7)" 3833 . 3869) (symbol "X" 3873 . 3874) (semantic-list "(DBGWCR15_EL1      , 2, 0, 0, 15, 7)" 3874 . 3910) (symbol "X" 3914 . 3915) (semantic-list "(OSDLR_EL1         , 2, 0, 1,  3, 4)" 3915 . 3951) (symbol "X" 3955 . 3956) (semantic-list "(DBGPRCR_EL1       , 2, 0, 1,  4, 4)" 3956 . 3992) (symbol "X" 3996 . 3997) (semantic-list "(DBGCLAIMSET_EL1   , 2, 0, 7,  8, 6)" 3997 . 4033) (symbol "X" 4037 . 4038) (semantic-list "(DBGCLAIMCLR_EL1   , 2, 0, 7,  9, 6)" 4038 . 4074)))
          ("EL1_DEBUG_REGISTERS_READ" . 
              ((symbol "X" 558 . 559) (semantic-list "(MDRAR_EL1	    , 2, 0, 1,  0, 0)" 559 . 591) (symbol "X" 595 . 596) (semantic-list "(OSLSR_EL1	    , 2, 0, 1,  1, 4)" 596 . 628) (symbol "X" 632 . 633) (semantic-list "(DBGAUTHSTATUS_EL1 , 2, 0, 7, 14, 6)" 633 . 669)))
          ("EL1_DEBUG_REGISTERS_WRITE" . ((symbol "X" 871 . 872) (semantic-list "(OSLAR_EL1	    , 2, 0, 1,  0, 4)" 872 . 904)))
          )
)
    (semanticdb-table "semanticdb-table"
      :file "debug_el1.h"
      :fsize 450
      :lastmodtime '(24817 60635))
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("stdnoreturn.h" include (:system-flag t) nil [209 233])
            ("hf/arch/barriers.h" include nil nil [235 264])
            ("hf/arch/init.h" include nil nil [265 290])
            ("hf/arch/mmu.h" include nil nil [291 315])
            ("hf/arch/plat/smc.h" include nil nil [316 345])
            ("hf/api.h" include nil nil [347 366])
            ("hf/check.h" include nil nil [367 388])
            ("hf/cpu.h" include nil nil [389 408])
            ("hf/dlog.h" include nil nil [409 429])
            ("hf/ffa.h" include nil nil [430 449])
            ("hf/ffa_internal.h" include nil nil [450 478])
            ("hf/panic.h" include nil nil [479 500])
            ("hf/plat/interrupts.h" include nil nil [501 532])
            ("hf/vm.h" include nil nil [533 551])
            ("vmapi/hf/call.h" include nil nil [553 579])
            ("debug_el1.h" include nil nil [581 603])
            ("feature_id.h" include nil nil [604 627])
            ("msr.h" include nil nil [628 644])
            ("perfmon.h" include nil nil [645 665])
            ("psci.h" include nil nil [666 683])
            ("psci_handler.h" include nil nil [684 709])
            ("smc.h" include nil nil [710 726])
            ("sysregs.h" include nil nil [727 747])
            ("HPFAR_EL2_NS" variable (:constant-flag t) nil [814 826])
            ("HPFAR_EL2_FIPA" variable (:constant-flag t) nil [917 931])
            ("GET_NEXT_PC_INC" variable (:constant-flag t) nil [1094 1109])
            ("CLIENT_ID_MASK" variable (:constant-flag t) nil [1210 1224])
            ("current" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1335 1340]))                  
                :type ("vcpu" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [1307 1388])
            ("complete_saving_state" function
               (:arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1573 1591]))                  
                :type "void")
                nil [1546 2788])
            ("begin_restoring_state" function
               (:arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2899 2917]))                  
                :type "void")
                nil [2872 3847])
            ("invalidate_vm_tlb" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3980 3985]))                  
                :type "void")
                nil [3950 4474])
            ("maybe_invalidate_tlb" function
               (:arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4895 4913]))                  
                :type "void")
                nil [4869 5397])
            ("irq_current_exception_noreturn" function
               (:arguments 
                  ( ("elr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5444 5458])
                    ("spsr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5459 5474]))                  
                :type "void")
                nil [5408 5549])
            ("fiq_current_exception_noreturn" function
               (:arguments 
                  ( ("elr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5596 5610])
                    ("spsr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5611 5626]))                  
                :type "void")
                nil [5560 5701])
            ("serr_current_exception_noreturn" function
               (:arguments 
                  ( ("elr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5749 5763])
                    ("spsr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5764 5779]))                  
                :type "void")
                nil [5712 5857])
            ("sync_current_exception_noreturn" function
               (:arguments 
                  ( ("elr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5905 5919])
                    ("spsr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5920 5935]))                  
                :type "void")
                nil [5868 6505])
            ("set_virtual_irq" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("r" variable
                       (:pointer 1
                        :type ("arch_regs" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6629 6649])
                    ("enable" variable (:type "bool") (reparse-symbol arg-sub-list) [6650 6662]))                  
                :type "void")
                nil [6601 6751])
            ("set_virtual_irq_current" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("enable" variable (:type "bool") (reparse-symbol arg-sub-list) [6851 6863]))                  
                :type "void")
                nil [6815 7029])
            ("set_virtual_fiq" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("r" variable
                       (:pointer 1
                        :type ("arch_regs" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7153 7173])
                    ("enable" variable (:type "bool") (reparse-symbol arg-sub-list) [7174 7186]))                  
                :type "void")
                nil [7125 7275])
            ("set_virtual_fiq_current" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("enable" variable (:type "bool") (reparse-symbol arg-sub-list) [7375 7387]))                  
                :type "void")
                nil [7339 7553])
            ("smc_is_blocked" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vm" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("vm" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [10168 10188])
                    ("func" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10189 10203]))                  
                :type "bool")
                nil [10141 10572])
            ("smc_forwarder" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vm" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("vm" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [10707 10727])
                    ("args" variable
                       (:pointer 1
                        :type ("ffa_value" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [10728 10751]))                  
                :type "void")
                nil [10681 11638])
            ("ffa_handler" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("args" variable
                       (:pointer 1
                        :type ("ffa_value" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12227 12250])
                    ("current" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12251 12272])
                    ("next" variable
                       (:pointer 2
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12276 12295]))                  
                :type "bool")
                nil [12203 15426])
            ("vcpu_update_virtual_interrupts" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("next" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [15539 15557]))                  
                :type "void")
                nil [15496 16355])
            ("hvc_smc_handler" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("args" variable (:type ("ffa_value" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) [16586 16608])
                    ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [16609 16627])
                    ("next" variable
                       (:pointer 2
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [16635 16654]))                  
                :type "bool")
                nil [16558 17032])
            ("smc_handler" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [17110 17128]))                  
                :type ("vcpu" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [17078 17507])
            ("OFFSET_CURRENT_SPX" variable (:constant-flag t) nil [18443 18461])
            ("OFFSET_LOWER_EL_64" variable (:constant-flag t) nil [18559 18577])
            ("OFFSET_LOWER_EL_32" variable (:constant-flag t) nil [18675 18693])
            ("get_el1_exception_handler_addr" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [18824 18848]))                  
                :type ("uintreg_t" type (:type "class") nil nil))
                nil [18776 19290])
            ("inject_el1_exception" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [19581 19599])
                    ("esr_el1_value" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19600 19624])
                    ("far_el1_value" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19630 19654]))                  
                :type "void")
                nil [19548 20544])
            ("inject_el1_data_abort_exception" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [20656 20674])
                    ("esr_el2" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20684 20702])
                    ("far_el2" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20712 20730]))                  
                :type "void")
                nil [20612 21179])
            ("inject_el1_instruction_abort_exception" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [21298 21316])
                    ("esr_el2" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21326 21344])
                    ("far_el2" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21354 21372]))                  
                :type "void")
                nil [21247 21833])
            ("inject_el1_unknown_exception" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [21945 21963])
                    ("esr_el2" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21964 21982]))                  
                :type "void")
                nil [21904 22786])
            ("hvc_handler" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [22820 22838]))                  
                :type ("vcpu" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [22788 23822])
            ("irq_lower" function
               (:pointer 1
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [23847 23852]))                  
                :type ("vcpu" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [23824 24204])
            ("fiq_lower" function
               (:pointer 1
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [24229 24234]))                  
                :type ("vcpu" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [24206 25388])
            ("serr_lower" function
               (:pointer 1
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [25423 25428]))                  
                :type ("vcpu" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [25399 25767])
            ("fault_info_init" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("esr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26134 26148])
                    ("vcpu" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [26160 26184])
                    ("mode" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26196 26210]))                  
                :type ("vcpu_fault_info" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [26088 27228])
            ("sync_lower_exception" function
               (:pointer 1
                :arguments 
                  ( ("esr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27264 27278])
                    ("far" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27279 27293]))                  
                :type ("vcpu" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [27230 29259])
            ("handle_system_register_access" function
               (:arguments 
                  ( ("esr_el2" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29428 29446]))                  
                :type "void")
                nil [29393 30393]))          
      :file "handler.c"
      :pointmax 30394
      :fsize 30393
      :lastmodtime '(24861 60643)
      :unmatched-syntax '((symbol 25390 . 25398) (symbol 5859 . 5867) (symbol 5703 . 5711) (symbol 5551 . 5559) (symbol 5399 . 5407))
      :lexical-table 
        '(("HPFAR_EL2_FIPA" . ((semantic-list "(UINT64_C(0xFFFFFFFFFF0))" 932 . 957)))
          ("OFFSET_LOWER_EL_32" . ((symbol "UINT64_C" 18694 . 18702) (semantic-list "(0x600)" 18702 . 18709)))
          ("GET_NEXT_PC_INC" (spp-arg-list ("esr") 1109 . 1114) . ((semantic-list "(GET_ESR_IL(esr) ? 4 : 2)" 1115 . 1140)))
          ("HPFAR_EL2_NS" . ((semantic-list "(UINT64_C(0x1) << 63)" 827 . 848)))
          ("CLIENT_ID_MASK" . ((symbol "UINT64_C" 1225 . 1233) (semantic-list "(0xffff)" 1233 . 1241)))
          ("OFFSET_CURRENT_SPX" . ((symbol "UINT64_C" 18462 . 18470) (semantic-list "(0x200)" 18470 . 18477)))
          ("OFFSET_LOWER_EL_64" . ((symbol "UINT64_C" 18578 . 18586) (semantic-list "(0x400)" 18586 . 18593)))
          )
)
    (semanticdb-table "semanticdb-table"
      :file "perfmon.h"
      :fsize 1426
      :lastmodtime '(24817 60635))
    (semanticdb-table "semanticdb-table"
      :file "psci_handler.h"
      :fsize 437
      :lastmodtime '(24817 60635))
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("perfmon.h" include nil nil [209 229])
            ("hf/check.h" include nil nil [231 252])
            ("hf/dlog.h" include nil nil [253 273])
            ("hf/types.h" include nil nil [274 295])
            ("msr.h" include nil nil [297 313])
            ("sysregs.h" include nil nil [314 334])
            ("PERFMON_REGISTERS_READ" variable (:constant-flag t) nil [538 560])
            ("PERFMON_REGISTERS_WRITE" variable (:constant-flag t) nil [2145 2168])
            ("PERFMON_REGISTERS_READ_WRITE" variable (:constant-flag t) nil [2420 2448])
            ("perfmon_is_register_access" function
               (:arguments 
                  ( ("esr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4461 4475]))                  
                :type "bool")
                nil [4429 5072])
            ("perfmon_process_access" function
               (:arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5253 5271])
                    ("vm_id" variable (:type ("ffa_vm_id_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5272 5290])
                    ("esr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5291 5305]))                  
                :type "bool")
                nil [5225 7087])
            ("perfmon_get_pmccfiltr_el0_init_value" function
               (:arguments 
                  ( ("vm_id" variable (:type ("ffa_vm_id_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7219 7237]))                  
                :type ("uintreg_t" type (:type "class") nil nil))
                nil [7172 7440]))          
      :file "perfmon.c"
      :pointmax 7441
      :fsize 7440
      :lastmodtime '(24861 27322)
      :unmatched-syntax nil
      :lexical-table 
        '(("PERFMON_REGISTERS_READ_WRITE" . 
              ((symbol "X" 2462 . 2463) (semantic-list "(PMINTENSET_EL1    , 3, 0,  9, 14, 1)" 2463 . 2500) (symbol "X" 2504 . 2505) (semantic-list "(PMINTENCLR_EL1    , 3, 0,  9, 14, 2)" 2505 . 2542) (symbol "X" 2546 . 2547) (semantic-list "(PMCR_EL0          , 3, 3,  9, 12, 0)" 2547 . 2584) (symbol "X" 2588 . 2589) (semantic-list "(PMCNTENSET_EL0    , 3, 3,  9, 12, 1)" 2589 . 2626) (symbol "X" 2630 . 2631) (semantic-list "(PMCNTENCLR_EL0    , 3, 3,  9, 12, 2)" 2631 . 2668) (symbol "X" 2672 . 2673) (semantic-list "(PMOVSCLR_EL0      , 3, 3,  9, 12, 3)" 2673 . 2710) (symbol "X" 2714 . 2715) (semantic-list "(PMSELR_EL0        , 3, 3,  9, 12, 5)" 2715 . 2752) (symbol "X" 2756 . 2757) (semantic-list "(PMCCNTR_EL0       , 3, 3,  9, 13, 0)" 2757 . 2794) (symbol "X" 2798 . 2799) (semantic-list "(PMXEVTYPER_EL0    , 3, 3,  9, 13, 1)" 2799 . 2836) (symbol "X" 2840 . 2841) (semantic-list "(PMXEVCNTR_EL0     , 3, 3,  9, 13, 2)" 2841 . 2878) (symbol "X" 2882 . 2883) (semantic-list "(PMUSERENR_EL0     , 3, 3,  9, 14, 0)" 2883 . 2920) (symbol "X" 2924 . 2925) (semantic-list "(PMOVSSET_EL0      , 3, 3,  9, 14, 3)" 2925 . 2962) (symbol "X" 2966 . 2967) (semantic-list "(PMEVTYPER0_EL0    , 3, 3, 14, 12, 0)" 2967 . 3004) (symbol "X" 3008 . 3009) (semantic-list "(PMEVTYPER1_EL0    , 3, 3, 14, 12, 1)" 3009 . 3046) (symbol "X" 3050 . 3051) (semantic-list "(PMEVTYPER2_EL0    , 3, 3, 14, 12, 2)" 3051 . 3088) (symbol "X" 3092 . 3093) (semantic-list "(PMEVTYPER3_EL0    , 3, 3, 14, 12, 3)" 3093 . 3130) (symbol "X" 3134 . 3135) (semantic-list "(PMEVTYPER4_EL0    , 3, 3, 14, 12, 4)" 3135 . 3172) (symbol "X" 3176 . 3177) (semantic-list "(PMEVTYPER5_EL0    , 3, 3, 14, 12, 5)" 3177 . 3214) (symbol "X" 3218 . 3219) (semantic-list "(PMEVTYPER6_EL0    , 3, 3, 14, 12, 6)" 3219 . 3256) (symbol "X" 3260 . 3261) (semantic-list "(PMEVTYPER7_EL0    , 3, 3, 14, 12, 7)" 3261 . 3298) (symbol "X" 3302 . 3303) (semantic-list "(PMEVTYPER8_EL0    , 3, 3, 14, 13, 0)" 3303 . 3340) (symbol "X" 3344 . 3345) (semantic-list "(PMEVTYPER9_EL0    , 3, 3, 14, 13, 1)" 3345 . 3382) (symbol "X" 3386 . 3387) (semantic-list "(PMEVTYPER10_EL0   , 3, 3, 14, 13, 2)" 3387 . 3424) (symbol "X" 3428 . 3429) (semantic-list "(PMEVTYPER11_EL0   , 3, 3, 14, 13, 3)" 3429 . 3466) (symbol "X" 3470 . 3471) (semantic-list "(PMEVTYPER12_EL0   , 3, 3, 14, 13, 4)" 3471 . 3508) (symbol "X" 3512 . 3513) (semantic-list "(PMEVTYPER13_EL0   , 3, 3, 14, 13, 5)" 3513 . 3550) (symbol "X" 3554 . 3555) (semantic-list "(PMEVTYPER14_EL0   , 3, 3, 14, 13, 6)" 3555 . 3592) (symbol "X" 3596 . 3597) (semantic-list "(PMEVTYPER15_EL0   , 3, 3, 14, 13, 7)" 3597 . 3634) (symbol "X" 3638 . 3639) (semantic-list "(PMEVTYPER16_EL0   , 3, 3, 14, 14, 0)" 3639 . 3676) (symbol "X" 3680 . 3681) (semantic-list "(PMEVTYPER17_EL0   , 3, 3, 14, 14, 1)" 3681 . 3718) (symbol "X" 3722 . 3723) (semantic-list "(PMEVTYPER18_EL0   , 3, 3, 14, 14, 2)" 3723 . 3760) (symbol "X" 3764 . 3765) (semantic-list "(PMEVTYPER19_EL0   , 3, 3, 14, 14, 3)" 3765 . 3802) (symbol "X" 3806 . 3807) (semantic-list "(PMEVTYPER20_EL0   , 3, 3, 14, 14, 4)" 3807 . 3844) (symbol "X" 3848 . 3849) (semantic-list "(PMEVTYPER21_EL0   , 3, 3, 14, 14, 5)" 3849 . 3886) (symbol "X" 3890 . 3891) (semantic-list "(PMEVTYPER22_EL0   , 3, 3, 14, 14, 6)" 3891 . 3928) (symbol "X" 3932 . 3933) (semantic-list "(PMEVTYPER23_EL0   , 3, 3, 14, 14, 7)" 3933 . 3970) (symbol "X" 3974 . 3975) (semantic-list "(PMEVTYPER24_EL0   , 3, 3, 14, 15, 0)" 3975 . 4012) (symbol "X" 4016 . 4017) (semantic-list "(PMEVTYPER25_EL0   , 3, 3, 14, 15, 1)" 4017 . 4054) (symbol "X" 4058 . 4059) (semantic-list "(PMEVTYPER26_EL0   , 3, 3, 14, 15, 2)" 4059 . 4096) (symbol "X" 4100 . 4101) (semantic-list "(PMEVTYPER27_EL0   , 3, 3, 14, 15, 3)" 4101 . 4138) (symbol "X" 4142 . 4143) (semantic-list "(PMEVTYPER28_EL0   , 3, 3, 14, 15, 4)" 4143 . 4180) (symbol "X" 4184 . 4185) (semantic-list "(PMEVTYPER29_EL0   , 3, 3, 14, 15, 5)" 4185 . 4222) (symbol "X" 4226 . 4227) (semantic-list "(PMEVTYPER30_EL0   , 3, 3, 14, 15, 6)" 4227 . 4264) (symbol "X" 4268 . 4269) (semantic-list "(PMCCFILTR_EL0     , 3, 3, 14, 15, 7)" 4269 . 4306)))
          ("PERFMON_REGISTERS_READ" . 
              ((symbol "X" 580 . 581) (semantic-list "(PMCEID0_EL0       , 3, 3,  9, 12, 6)" 581 . 618) (symbol "X" 622 . 623) (semantic-list "(PMCEID1_EL0       , 3, 3,  9, 12, 7)" 623 . 660) (symbol "X" 664 . 665) (semantic-list "(PMEVCNTR0_EL0     , 3, 3, 14,  8, 0)" 665 . 702) (symbol "X" 706 . 707) (semantic-list "(PMEVCNTR1_EL0     , 3, 3, 14,  8, 1)" 707 . 744) (symbol "X" 748 . 749) (semantic-list "(PMEVCNTR2_EL0     , 3, 3, 14,  8, 2)" 749 . 786) (symbol "X" 790 . 791) (semantic-list "(PMEVCNTR3_EL0     , 3, 3, 14,  8, 3)" 791 . 828) (symbol "X" 832 . 833) (semantic-list "(PMEVCNTR4_EL0     , 3, 3, 14,  8, 4)" 833 . 870) (symbol "X" 874 . 875) (semantic-list "(PMEVCNTR5_EL0     , 3, 3, 14,  8, 5)" 875 . 912) (symbol "X" 916 . 917) (semantic-list "(PMEVCNTR6_EL0     , 3, 3, 14,  8, 6)" 917 . 954) (symbol "X" 958 . 959) (semantic-list "(PMEVCNTR7_EL0     , 3, 3, 14,  8, 7)" 959 . 996) (symbol "X" 1000 . 1001) (semantic-list "(PMEVCNTR8_EL0     , 3, 3, 14,  9, 0)" 1001 . 1038) (symbol "X" 1042 . 1043) (semantic-list "(PMEVCNTR9_EL0     , 3, 3, 14,  9, 1)" 1043 . 1080) (symbol "X" 1084 . 1085) (semantic-list "(PMEVCNTR10_EL0    , 3, 3, 14,  9, 2)" 1085 . 1122) (symbol "X" 1126 . 1127) (semantic-list "(PMEVCNTR11_EL0    , 3, 3, 14,  9, 3)" 1127 . 1164) (symbol "X" 1168 . 1169) (semantic-list "(PMEVCNTR12_EL0    , 3, 3, 14,  9, 4)" 1169 . 1206) (symbol "X" 1210 . 1211) (semantic-list "(PMEVCNTR13_EL0    , 3, 3, 14,  9, 5)" 1211 . 1248) (symbol "X" 1252 . 1253) (semantic-list "(PMEVCNTR14_EL0    , 3, 3, 14,  9, 6)" 1253 . 1290) (symbol "X" 1294 . 1295) (semantic-list "(PMEVCNTR15_EL0    , 3, 3, 14,  9, 7)" 1295 . 1332) (symbol "X" 1336 . 1337) (semantic-list "(PMEVCNTR16_EL0    , 3, 3, 14, 10, 0)" 1337 . 1374) (symbol "X" 1378 . 1379) (semantic-list "(PMEVCNTR17_EL0    , 3, 3, 14, 10, 1)" 1379 . 1416) (symbol "X" 1420 . 1421) (semantic-list "(PMEVCNTR18_EL0    , 3, 3, 14, 10, 2)" 1421 . 1458) (symbol "X" 1462 . 1463) (semantic-list "(PMEVCNTR19_EL0    , 3, 3, 14, 10, 3)" 1463 . 1500) (symbol "X" 1504 . 1505) (semantic-list "(PMEVCNTR20_EL0    , 3, 3, 14, 10, 4)" 1505 . 1542) (symbol "X" 1546 . 1547) (semantic-list "(PMEVCNTR21_EL0    , 3, 3, 14, 10, 5)" 1547 . 1584) (symbol "X" 1588 . 1589) (semantic-list "(PMEVCNTR22_EL0    , 3, 3, 14, 10, 6)" 1589 . 1626) (symbol "X" 1630 . 1631) (semantic-list "(PMEVCNTR23_EL0    , 3, 3, 14, 10, 7)" 1631 . 1668) (symbol "X" 1672 . 1673) (semantic-list "(PMEVCNTR24_EL0    , 3, 3, 14, 11, 0)" 1673 . 1710) (symbol "X" 1714 . 1715) (semantic-list "(PMEVCNTR25_EL0    , 3, 3, 14, 11, 1)" 1715 . 1752) (symbol "X" 1756 . 1757) (semantic-list "(PMEVCNTR26_EL0    , 3, 3, 14, 11, 2)" 1757 . 1794) (symbol "X" 1798 . 1799) (semantic-list "(PMEVCNTR27_EL0    , 3, 3, 14, 11, 3)" 1799 . 1836) (symbol "X" 1840 . 1841) (semantic-list "(PMEVCNTR28_EL0    , 3, 3, 14, 11, 4)" 1841 . 1878) (symbol "X" 1882 . 1883) (semantic-list "(PMEVCNTR29_EL0    , 3, 3, 14, 11, 5)" 1883 . 1920) (symbol "X" 1924 . 1925) (semantic-list "(PMEVCNTR30_EL0    , 3, 3, 14, 11, 6)" 1925 . 1962)))
          ("PERFMON_REGISTERS_WRITE" . ((symbol "X" 2187 . 2188) (semantic-list "(PMSWINC_EL0       , 3, 3,  9, 12, 4)" 2188 . 2225)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("hf/arch/cpu.h" include nil nil [209 233])
            ("stdbool.h" include (:system-flag t) nil [235 255])
            ("stddef.h" include (:system-flag t) nil [256 275])
            ("stdint.h" include (:system-flag t) nil [276 295])
            ("hf/arch/plat/psci.h" include nil nil [297 327])
            ("hf/addr.h" include nil nil [329 349])
            ("hf/ffa.h" include nil nil [350 369])
            ("hf/std.h" include nil nil [370 389])
            ("hf/vm.h" include nil nil [390 408])
            ("feature_id.h" include nil nil [410 433])
            ("msr.h" include nil nil [434 450])
            ("perfmon.h" include nil nil [451 471])
            ("sysregs.h" include nil nil [472 492])
            ("ID_AA64MMFR1_EL1_LO" variable (:constant-flag t) nil [629 648])
            ("lor_disable" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [694 699]))                  
                :type "void")
                nil [670 902])
            ("gic_regs_reset" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("r" variable
                       (:pointer 1
                        :type ("arch_regs" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [931 951])
                    ("is_primary" variable (:type "bool") (reparse-symbol arg-sub-list) [952 968]))                  
                :type "void")
                nil [904 1467])
            ("arch_regs_reset" function
               (:arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1490 1508]))                  
                :type "void")
                nil [1469 3554])
            ("arch_regs_set_pc_arg" function
               (:arguments 
                  ( ("r" variable
                       (:pointer 1
                        :type ("arch_regs" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3582 3602])
                    ("pc" variable (:type ("ipaddr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3603 3615])
                    ("arg" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3616 3630]))                  
                :type "void")
                nil [3556 3673])
            ("arch_regs_set_retval" function
               (:arguments 
                  ( ("r" variable
                       (:pointer 1
                        :type ("arch_regs" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3701 3721])
                    ("v" variable (:type ("ffa_value" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) [3722 3741]))                  
                :type "void")
                nil [3675 3897])
            ("arch_regs_get_args" function
               (:arguments 
                  ( ("regs" variable
                       (:pointer 1
                        :type ("arch_regs" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3935 3958]))                  
                :type ("ffa_value" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [3899 4170])
            ("arch_cpu_init" function
               (:arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("cpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4191 4205])
                    ("entry_point" variable (:type ("ipaddr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4206 4227]))                  
                :type "void")
                nil [4172 4563]))          
      :file "cpu.c"
      :pointmax 4564
      :fsize 4671
      :lastmodtime '(24960 51560)
      :unmatched-syntax nil
      :lexical-table 
        '(("ID_AA64MMFR1_EL1_LO" . ((semantic-list "(UINT64_C(1) << 16)" 649 . 668)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("psci_handler.h" include nil nil [209 234])
            ("stdint.h" include (:system-flag t) nil [236 255])
            ("hf/arch/plat/psci.h" include nil nil [257 287])
            ("hf/arch/types.h" include nil nil [288 314])
            ("hf/api.h" include nil nil [316 335])
            ("hf/cpu.h" include nil nil [336 355])
            ("hf/dlog.h" include nil nil [356 376])
            ("hf/ffa.h" include nil nil [377 396])
            ("hf/panic.h" include nil nil [397 418])
            ("hf/vm.h" include nil nil [419 437])
            ("psci.h" include nil nil [439 456])
            ("cpu_entry" function
               (:prototype-flag t
                :arguments 
                  ( ("c" variable
                       (:pointer 1
                        :type ("cpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [473 487]))                  
                :type "void")
                nil [458 488])
            ("psci_primary_vm_handler" function
               (:arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [810 828])
                    ("func" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [829 843])
                    ("arg0" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [844 859])
                    ("arg1" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [868 883])
                    ("arg2" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [884 899])
                    ("ret" variable
                       (:pointer 1
                        :type ("uintreg_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [900 915]))                  
                :type "bool")
                nil [781 4732])
            ("vcpu_id_to_index" function
               (:arguments 
                  ( ("vcpu_id" variable (:type ("cpu_id_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4867 4884]))                  
                :type ("ffa_vcpu_index_t" type (:type "class") nil nil))
                nil [4833 4968])
            ("psci_secondary_vm_handler" function
               (:arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5297 5315])
                    ("func" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5316 5330])
                    ("arg0" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5331 5346])
                    ("arg1" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5357 5372])
                    ("arg2" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5373 5388])
                    ("ret" variable
                       (:pointer 1
                        :type ("uintreg_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5389 5404])
                    ("next" variable
                       (:pointer 2
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5415 5434]))                  
                :type "bool")
                nil [5266 8853])
            ("psci_handler" function
               (:arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [9092 9110])
                    ("func" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9111 9125])
                    ("arg0" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9126 9141])
                    ("arg1" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9146 9161])
                    ("arg2" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9162 9177])
                    ("ret" variable
                       (:pointer 1
                        :type ("uintreg_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9178 9193])
                    ("next" variable
                       (:pointer 2
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [9198 9217]))                  
                :type "bool")
                nil [9074 9465]))          
      :file "psci_handler.c"
      :pointmax 9466
      :fsize 9245
      :lastmodtime '(24861 60664)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("feature_id.h" include nil nil [209 232])
            ("hf/check.h" include nil nil [234 255])
            ("hf/dlog.h" include nil nil [256 276])
            ("hf/types.h" include nil nil [277 298])
            ("hf/vm.h" include nil nil [299 317])
            ("msr.h" include nil nil [319 335])
            ("sysregs.h" include nil nil [336 356])
            ("FEATURE_ID_REGISTERS_READ" variable (:constant-flag t) nil [575 600])
            ("" type
               (:members 
                  ( ("ID_PFR0_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_PFR1_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_DFR0_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_AFR0_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_MMFR0_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_MMFR1_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_MMFR2_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_MMFR3_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_ISAR0_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_ISAR1_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_ISAR2_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_ISAR3_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_ISAR4_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_ISAR5_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_MMFR4_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("MVFR0_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("MVFR1_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("MVFR2_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_AA64PFR0_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_AA64PFR1_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_AA64DFR0_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_AA64DFR1_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_AA64AFR0_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_AA64AFR1_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_AA64ISAR0_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_AA64ISAR1_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_AA64MMFR0_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_AA64MMFR1_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015])
                    ("ID_AA64MMFR2_EL1_ENC" variable
                       (:constant-flag t
                        :default-value (1990 2015)
                        :type "int")
                        (reparse-symbol enumsubparts) [1990 2015]))                  
                :type "enum")
                nil [1874 2027])
            ("feature_id_is_register_access" function
               (:arguments 
                  ( ("esr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2161 2175]))                  
                :type "bool")
                nil [2126 2449])
            ("ID_AA64MMFR1_EL1_SPEC_SEI" variable (:constant-flag t) nil [2517 2542])
            ("ID_AA64MMFR1_EL1_LO" variable (:constant-flag t) nil [2618 2637])
            ("ID_AA64PFR0_EL1_RAS" variable (:constant-flag t) nil [2703 2722])
            ("ID_AA64DFR0_EL1_TRACE_FILT" variable (:constant-flag t) nil [2801 2827])
            ("ID_AA64DFR0_EL1_DOUBLE_LOCK" variable (:constant-flag t) nil [2898 2925])
            ("ID_AA64DFR0_EL1_PMS_VER" variable (:constant-flag t) nil [3009 3032])
            ("ID_AA64DFR0_EL1_PMU_VER" variable (:constant-flag t) nil [3115 3138])
            ("ID_AA64DFR0_EL1_TRACE_VER" variable (:constant-flag t) nil [3254 3279])
            ("ID_AA64DFR0_EL1_DEBUG_VER" variable (:constant-flag t) nil [3349 3374])
            ("ID_AA64ISAR1_EL1_GPI" variable (:constant-flag t) nil [3513 3533])
            ("ID_AA64ISAR1_EL1_GPA" variable (:constant-flag t) nil [3673 3693])
            ("ID_AA64ISAR1_EL1_API" variable (:constant-flag t) nil [3833 3853])
            ("ID_AA64ISAR1_EL1_APA" variable (:constant-flag t) nil [3987 4007])
            ("feature_set_traps" function
               (:arguments 
                  ( ("vm" variable
                       (:pointer 1
                        :type ("vm" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4054 4068])
                    ("regs" variable
                       (:pointer 1
                        :type ("arch_regs" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4069 4092]))                  
                :type "void")
                nil [4031 6449])
            ("feature_id_process_access" function
               (:arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6619 6637])
                    ("esr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6638 6652]))                  
                :type "bool")
                nil [6588 8398]))          
      :file "feature_id.c"
      :pointmax 8399
      :fsize 8398
      :lastmodtime '(24867 58159)
      :unmatched-syntax nil
      :lexical-table 
        '(("ID_AA64PFR0_EL1_RAS" . ((semantic-list "(UINT64_C(0xf) << 28)" 2723 . 2744)))
          ("ID_AA64MMFR1_EL1_SPEC_SEI" . ((semantic-list "(UINT64_C(0xf) << 24)" 2543 . 2564)))
          ("ID_AA64DFR0_EL1_TRACE_FILT" . ((semantic-list "(UINT64_C(0xf) << 40)" 2828 . 2849)))
          ("ID_AA64ISAR1_EL1_API" . ((semantic-list "(UINT64_C(0xf) << 8)" 3854 . 3874)))
          ("ID_AA64DFR0_EL1_PMU_VER" . ((semantic-list "(UINT64_C(0xf) << 8)" 3139 . 3159)))
          ("ID_AA64DFR0_EL1_DEBUG_VER" . ((semantic-list "(UINT64_C(0xf))" 3375 . 3390)))
          ("ID_AA64ISAR1_EL1_GPI" . ((semantic-list "(UINT64_C(0xf) << 28)" 3534 . 3555)))
          ("ID_AA64DFR0_EL1_TRACE_VER" . ((semantic-list "(UINT64_C(0xf) << 4)" 3280 . 3300)))
          ("ID_AA64ISAR1_EL1_APA" . ((semantic-list "(UINT64_C(0xf) << 24)" 4008 . 4029)))
          ("ID_AA64MMFR1_EL1_LO" . ((semantic-list "(UINT64_C(0xf) << 24)" 2638 . 2659)))
          ("ID_AA64ISAR1_EL1_GPA" . ((semantic-list "(UINT64_C(0xf) << 24)" 3694 . 3715)))
          ("FEATURE_ID_REGISTERS_READ" . 
              ((symbol "X" 617 . 618) (semantic-list "(ID_PFR0_EL1       , 3, 0,  0,  1, 0)" 618 . 655) (symbol "X" 659 . 660) (semantic-list "(ID_PFR1_EL1       , 3, 0,  0,  1, 1)" 660 . 697) (symbol "X" 701 . 702) (semantic-list "(ID_DFR0_EL1       , 3, 0,  0,  1, 2)" 702 . 739) (symbol "X" 743 . 744) (semantic-list "(ID_AFR0_EL1       , 3, 0,  0,  1, 3)" 744 . 781) (symbol "X" 785 . 786) (semantic-list "(ID_MMFR0_EL1      , 3, 0,  0,  1, 4)" 786 . 823) (symbol "X" 827 . 828) (semantic-list "(ID_MMFR1_EL1      , 3, 0,  0,  1, 5)" 828 . 865) (symbol "X" 869 . 870) (semantic-list "(ID_MMFR2_EL1      , 3, 0,  0,  1, 6)" 870 . 907) (symbol "X" 911 . 912) (semantic-list "(ID_MMFR3_EL1      , 3, 0,  0,  1, 7)" 912 . 949) (symbol "X" 953 . 954) (semantic-list "(ID_ISAR0_EL1      , 3, 0,  0,  2, 0)" 954 . 991) (symbol "X" 995 . 996) (semantic-list "(ID_ISAR1_EL1      , 3, 0,  0,  2, 1)" 996 . 1033) (symbol "X" 1037 . 1038) (semantic-list "(ID_ISAR2_EL1      , 3, 0,  0,  2, 2)" 1038 . 1075) (symbol "X" 1079 . 1080) (semantic-list "(ID_ISAR3_EL1      , 3, 0,  0,  2, 3)" 1080 . 1117) (symbol "X" 1121 . 1122) (semantic-list "(ID_ISAR4_EL1      , 3, 0,  0,  2, 4)" 1122 . 1159) (symbol "X" 1163 . 1164) (semantic-list "(ID_ISAR5_EL1      , 3, 0,  0,  2, 5)" 1164 . 1201) (symbol "X" 1205 . 1206) (semantic-list "(ID_MMFR4_EL1      , 3, 0,  0,  2, 6)" 1206 . 1243) (symbol "X" 1250 . 1251) (semantic-list "(MVFR0_EL1         , 3, 0,  0,  3, 0)" 1251 . 1288) (symbol "X" 1292 . 1293) (semantic-list "(MVFR1_EL1         , 3, 0,  0,  3, 1)" 1293 . 1330) (symbol "X" 1334 . 1335) (semantic-list "(MVFR2_EL1         , 3, 0,  0,  3, 2)" 1335 . 1372) (symbol "X" 1379 . 1380) (semantic-list "(ID_AA64PFR0_EL1   , 3, 0,  0,  4, 0)" 1380 . 1417) (symbol "X" 1421 . 1422) (semantic-list "(ID_AA64PFR1_EL1   , 3, 0,  0,  4, 1)" 1422 . 1459) (symbol "X" 1466 . 1467) (semantic-list "(ID_AA64DFR0_EL1   , 3, 0,  0,  5, 0)" 1467 . 1504) (symbol "X" 1508 . 1509) (semantic-list "(ID_AA64DFR1_EL1   , 3, 0,  0,  5, 1)" 1509 . 1546) (symbol "X" 1553 . 1554) (semantic-list "(ID_AA64AFR0_EL1   , 3, 0,  0,  5, 4)" 1554 . 1591) (symbol "X" 1595 . 1596) (semantic-list "(ID_AA64AFR1_EL1   , 3, 0,  0,  5, 5)" 1596 . 1633) (symbol "X" 1640 . 1641) (semantic-list "(ID_AA64ISAR0_EL1  , 3, 0,  0,  6, 0)" 1641 . 1678) (symbol "X" 1682 . 1683) (semantic-list "(ID_AA64ISAR1_EL1  , 3, 0,  0,  6, 1)" 1683 . 1720) (symbol "X" 1727 . 1728) (semantic-list "(ID_AA64MMFR0_EL1  , 3, 0,  0,  7, 0)" 1728 . 1765) (symbol "X" 1769 . 1770) (semantic-list "(ID_AA64MMFR1_EL1  , 3, 0,  0,  7, 1)" 1770 . 1807) (symbol "X" 1811 . 1812) (semantic-list "(ID_AA64MMFR2_EL1  , 3, 0,  0,  7, 2)" 1812 . 1849)))
          ("ID_AA64DFR0_EL1_PMS_VER" . ((semantic-list "(UINT64_C(0xf) << 32)" 3033 . 3054)))
          ("ID_AA64DFR0_EL1_DOUBLE_LOCK" . ((semantic-list "(UINT64_C(0xf) << 36)" 2926 . 2947)))
          )
))
  :file "!ssh:osbox:!home!osboxes!hafnium!src!arch!aarch64!hypervisor!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
