;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("common.h" include (:system-flag t) nil [281 300])
            ("cpu_func.h" include (:system-flag t) nil [301 322])
            ("mmc.h" include (:system-flag t) nil [323 339])
            ("i2c.h" include (:system-flag t) nil [340 356])
            ("serial.h" include (:system-flag t) nil [357 376])
            ("spl.h" include (:system-flag t) nil [377 393])
            ("asm/gpio.h" include (:system-flag t) nil [394 415])
            ("asm/io.h" include (:system-flag t) nil [416 435])
            ("asm/arch/clock.h" include (:system-flag t) nil [436 463])
            ("asm/arch/gpio.h" include (:system-flag t) nil [464 490])
            ("asm/arch/spl.h" include (:system-flag t) nil [491 516])
            ("asm/arch/sys_proto.h" include (:system-flag t) nil [517 548])
            ("asm/arch/timer.h" include (:system-flag t) nil [549 576])
            ("asm/arch/tzpc.h" include (:system-flag t) nil [577 603])
            ("asm/arch/mmc.h" include (:system-flag t) nil [604 629])
            ("linux/compiler.h" include (:system-flag t) nil [631 658])
            ("fel_stash" type
               (:members 
                  ( ("sp" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [680 692])
                    ("lr" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [694 706])
                    ("cpsr" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [708 722])
                    ("sctlr" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [724 739])
                    ("vbar" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [741 755])
                    ("cr" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [757 769]))                  
                :type "struct")
                nil [660 772])
            ("fel_stash" variable (:type ("fel_stash" type
                 (:prototype t
                  :type "struct")
                  nil nil)) nil [774 835])
            ("gpio_init" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1361 1366]))                  
                :type "int")
                nil [1340 5621])
            ("s_init" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6021 6026]))                  
                :type "void")
                nil [6009 7686])
            ("SUNXI_INVALID_BOOT_SOURCE" variable (:constant-flag t) nil [7696 7721])
            ("sunxi_get_boot_source" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [7759 7764]))                  
                :type "int")
                nil [7726 7888])
            ("sunxi_get_boot_device" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8023 8028]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [7992 9291])
            ("reset_cpu" function
               (:arguments 
                  ( ("addr" variable (:type ("ulong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10201 10212]))                  
                :type "void")
                nil [10186 11248])
            ("enable_caches" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [11334 11339]))                  
                :type "void")
                nil [11315 11422]))          
      :file "board.c"
      :pointmax 11430
      :fsize 11429
      :lastmodtime '(24846 307)
      :unmatched-syntax nil
      :lexical-table 
        '(("SUNXI_INVALID_BOOT_SOURCE" . ((punctuation "-" 7722 . 7723) (number "1" 7723 . 7724)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("common.h" include (:system-flag t) nil [116 135])
            ("spl.h" include (:system-flag t) nil [136 152])
            ("asm/gpio.h" include (:system-flag t) nil [153 174])
            ("asm/io.h" include (:system-flag t) nil [175 194])
            ("linux/libfdt.h" include (:system-flag t) nil [195 220])
            ("SUN4I_SPI0_CCTL" variable (:constant-flag t) nil [1437 1452])
            ("SUN4I_SPI0_CTL" variable (:constant-flag t) nil [1493 1507])
            ("SUN4I_SPI0_RX" variable (:constant-flag t) nil [1549 1562])
            ("SUN4I_SPI0_TX" variable (:constant-flag t) nil [1605 1618])
            ("SUN4I_SPI0_FIFO_STA" variable (:constant-flag t) nil [1661 1680])
            ("SUN4I_SPI0_BC" variable (:constant-flag t) nil [1717 1730])
            ("SUN4I_SPI0_TC" variable (:constant-flag t) nil [1773 1786])
            ("SUN4I_CTL_ENABLE" variable (:constant-flag t) nil [1830 1846])
            ("SUN4I_CTL_MASTER" variable (:constant-flag t) nil [1873 1889])
            ("SUN4I_CTL_TF_RST" variable (:constant-flag t) nil [1916 1932])
            ("SUN4I_CTL_RF_RST" variable (:constant-flag t) nil [1959 1975])
            ("SUN4I_CTL_XCH" variable (:constant-flag t) nil [2002 2015])
            ("SUN6I_SPI0_CCTL" variable (:constant-flag t) nil [2288 2303])
            ("SUN6I_SPI0_GCR" variable (:constant-flag t) nil [2344 2358])
            ("SUN6I_SPI0_TCR" variable (:constant-flag t) nil [2400 2414])
            ("SUN6I_SPI0_FIFO_STA" variable (:constant-flag t) nil [2456 2475])
            ("SUN6I_SPI0_MBC" variable (:constant-flag t) nil [2512 2526])
            ("SUN6I_SPI0_MTC" variable (:constant-flag t) nil [2568 2582])
            ("SUN6I_SPI0_BCC" variable (:constant-flag t) nil [2624 2638])
            ("SUN6I_SPI0_TXD" variable (:constant-flag t) nil [2680 2694])
            ("SUN6I_SPI0_RXD" variable (:constant-flag t) nil [2737 2751])
            ("SUN6I_CTL_ENABLE" variable (:constant-flag t) nil [2795 2811])
            ("SUN6I_CTL_MASTER" variable (:constant-flag t) nil [2838 2854])
            ("SUN6I_CTL_SRST" variable (:constant-flag t) nil [2881 2895])
            ("SUN6I_TCR_XCH" variable (:constant-flag t) nil [2925 2938])
            ("CCM_AHB_GATING0" variable (:constant-flag t) nil [3051 3066])
            ("CCM_SPI0_CLK" variable (:constant-flag t) nil [3107 3119])
            ("SUN6I_BUS_SOFT_RST_REG0" variable (:constant-flag t) nil [3163 3186])
            ("AHB_RESET_SPI0_SHIFT" variable (:constant-flag t) nil [3221 3241])
            ("AHB_GATE_OFFSET_SPI0" variable (:constant-flag t) nil [3260 3280])
            ("SPI0_CLK_DIV_BY_2" variable (:constant-flag t) nil [3300 3317])
            ("SPI0_CLK_DIV_BY_4" variable (:constant-flag t) nil [3343 3360])
            ("spi0_pinmux_setup" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pin_function" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [3634 3660]))                  
                :type "void")
                nil [3604 3965])
            ("spi0_enable_clock" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [4069 4074]))                  
                :type "void")
                nil [4039 4999])
            ("spi0_disable_clock" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [5032 5037]))                  
                :type "void")
                nil [5001 5581])
            ("spi0_init" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [5605 5610]))                  
                :type "void")
                nil [5583 5788])
            ("spi0_deinit" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [5814 5819]))                  
                :type "void")
                nil [5790 6075])
            ("SPI_READ_MAX_SIZE" variable (:constant-flag t) nil [6166 6183])
            ("sunxi_spi0_read_data" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("buf" variable
                       (:pointer 1
                        :type ("u8" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6266 6274])
                    ("addr" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6275 6284])
                    ("bufsize" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6285 6297])
                    ("spi_ctl_reg" variable (:type ("ulong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6303 6321])
                    ("spi_ctl_xch_bitmask" variable (:type ("ulong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6327 6353])
                    ("spi_fifo_reg" variable (:type ("ulong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6359 6378])
                    ("spi_tx_reg" variable (:type ("ulong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6384 6401])
                    ("spi_rx_reg" variable (:type ("ulong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6407 6424])
                    ("spi_bc_reg" variable (:type ("ulong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6430 6447])
                    ("spi_tc_reg" variable (:type ("ulong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6453 6470])
                    ("spi_bcc_reg" variable (:type ("ulong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6476 6494]))                  
                :type "void")
                nil [6233 7292])
            ("spi0_read_data" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("buf" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [7321 7331])
                    ("addr" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7332 7341])
                    ("len" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7342 7350]))                  
                :type "void")
                nil [7294 8127])
            ("spi_load_read" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("load" variable
                       (:pointer 1
                        :type ("spl_load_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [8156 8183])
                    ("sector" variable (:type ("ulong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8184 8197])
                    ("count" variable (:type ("ulong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8204 8216])
                    ("buf" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [8217 8227]))                  
                :type ("ulong" type (:type "class") nil nil))
                nil [8129 8284])
            ("spl_spi_load_image" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("spl_image" variable
                       (:pointer 1
                        :type ("spl_image_info" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [8397 8430])
                    ("bootdev" variable
                       (:pointer 1
                        :type ("spl_boot_device" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [8440 8472]))                  
                :type "int")
                nil [8367 9236])
            ("SPL_LOAD_IMAGE_METHOD" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("BOOT_DEVICE_SPI" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9349 9365])
                    ("" variable (:type ("spl_spi_load_image" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9366 9385]))                  
                :type "int")
                nil [9311 9386]))          
      :file "spl_spi_sunxi.c"
      :pointmax 9387
      :fsize 9386
      :lastmodtime '(24846 307)
      :unmatched-syntax '((number 9346 . 9347) (string 9333 . 9344))
      :lexical-table 
        '(("SUN4I_CTL_TF_RST" . ((symbol "BIT" 1944 . 1947) (semantic-list "(8)" 1947 . 1950)))
          ("SUN6I_SPI0_CCTL" . ((semantic-list "(0x01C68000 + 0x24)" 2316 . 2335)))
          ("SUN6I_SPI0_BCC" . ((semantic-list "(0x01C68000 + 0x38)" 2652 . 2671)))
          ("SUN6I_SPI0_RXD" . ((semantic-list "(0x01C68000 + 0x300)" 2765 . 2785)))
          ("SUN6I_BUS_SOFT_RST_REG0" . ((semantic-list "(0x01C20000 + 0x2C0)" 3191 . 3211)))
          ("SUN4I_SPI0_BC" . ((semantic-list "(0x01C05000 + 0x20)" 1745 . 1764)))
          ("SUN4I_CTL_MASTER" . ((symbol "BIT" 1901 . 1904) (semantic-list "(1)" 1904 . 1907)))
          ("AHB_RESET_SPI0_SHIFT" . ((number "20" 3249 . 3251)))
          ("CCM_AHB_GATING0" . ((semantic-list "(0x01C20000 + 0x60)" 3079 . 3098)))
          ("SUN4I_SPI0_TC" . ((semantic-list "(0x01C05000 + 0x24)" 1801 . 1820)))
          ("SUN6I_CTL_MASTER" . ((symbol "BIT" 2866 . 2869) (semantic-list "(1)" 2869 . 2872)))
          ("SUN4I_CTL_ENABLE" . ((symbol "BIT" 1858 . 1861) (semantic-list "(0)" 1861 . 1864)))
          ("SPI0_CLK_DIV_BY_2" . ((number "0x1000" 3328 . 3334)))
          ("SUN4I_SPI0_RX" . ((semantic-list "(0x01C05000 + 0x00)" 1577 . 1596)))
          ("SUN6I_SPI0_MBC" . ((semantic-list "(0x01C68000 + 0x30)" 2540 . 2559)))
          ("SUN6I_SPI0_TXD" . ((semantic-list "(0x01C68000 + 0x200)" 2708 . 2728)))
          ("CCM_SPI0_CLK" . ((semantic-list "(0x01C20000 + 0xA0)" 3135 . 3154)))
          ("SUN6I_CTL_ENABLE" . ((symbol "BIT" 2823 . 2826) (semantic-list "(0)" 2826 . 2829)))
          ("SPI0_CLK_DIV_BY_4" . ((number "0x1001" 3371 . 3377)))
          ("SUN6I_SPI0_MTC" . ((semantic-list "(0x01C68000 + 0x34)" 2596 . 2615)))
          ("AHB_GATE_OFFSET_SPI0" . ((number "20" 3288 . 3290)))
          ("SUN4I_SPI0_CCTL" . ((semantic-list "(0x01C05000 + 0x1C)" 1465 . 1484)))
          ("SUN4I_CTL_RF_RST" . ((symbol "BIT" 1987 . 1990) (semantic-list "(9)" 1990 . 1993)))
          ("SUN6I_SPI0_GCR" . ((semantic-list "(0x01C68000 + 0x04)" 2372 . 2391)))
          ("SUN6I_SPI0_TCR" . ((semantic-list "(0x01C68000 + 0x08)" 2428 . 2447)))
          ("SUN4I_SPI0_FIFO_STA" . ((semantic-list "(0x01C05000 + 0x28)" 1689 . 1708)))
          ("SUN4I_CTL_XCH" . ((symbol "BIT" 2030 . 2033) (semantic-list "(10)" 2033 . 2037)))
          ("SUN6I_CTL_SRST" . ((symbol "BIT" 2909 . 2912) (semantic-list "(31)" 2912 . 2916)))
          ("SUN6I_TCR_XCH" . ((symbol "BIT" 2953 . 2956) (semantic-list "(31)" 2956 . 2960)))
          ("SUN4I_SPI0_CTL" . ((semantic-list "(0x01C05000 + 0x08)" 1521 . 1540)))
          ("SUN4I_SPI0_TX" . ((semantic-list "(0x01C05000 + 0x04)" 1633 . 1652)))
          ("SUN6I_SPI0_FIFO_STA" . ((semantic-list "(0x01C68000 + 0x1C)" 2484 . 2503)))
          ("SPI_READ_MAX_SIZE" . ((number "60" 6184 . 6186)))
          )
))
  :file "!ssh:osbox:!home!osboxes!u-boot!arch!arm!mach-sunxi!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
