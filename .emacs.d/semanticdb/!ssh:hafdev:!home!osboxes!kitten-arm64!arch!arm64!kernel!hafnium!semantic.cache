;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("lwk/spinlock.h" include (:system-flag t) nil [1 26])
            ("lwk/task.h" include (:system-flag t) nil [27 48])
            ("lwk/sched.h" include (:system-flag t) nil [49 71])
            ("arch/hafnium/call.h" include (:system-flag t) nil [74 104])
            ("arch/hafnium/ffa.h" include (:system-flag t) nil [105 134])
            ("arch/hafnium/types.h" include (:system-flag t) nil [135 166])
            ("arch/hafnium/vm_ids.h" include (:system-flag t) nil [167 199])
            ("transport.h" include nil nil [201 223])
            ("hf.h" include nil nil [224 239])
            ("FIRST_SECONDARY_VM_ID" variable (:constant-flag t) nil [250 271])
            ("hf_vms" variable
               (:pointer 1
                :default-value "NULL"
                :type ("hf_vm" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [277 308])
            ("hf_vm_count" variable (:type ("ffa_vm_count_t" type (:type "class") nil nil)) nil [309 338])
            ("hf_call" function
               (:arguments 
                  ( ("arg0" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [357 371])
                    ("arg1" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [374 388])
                    ("arg2" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [391 405])
                    ("arg3" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [408 422]))                  
                :type ("int64_t" type (:type "class") nil nil))
                nil [340 813])
            ("ffa_call" function
               (:arguments 
                  ( ("args" variable (:type ("ffa_value" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) [841 863]))                  
                :type ("ffa_value" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [815 1622])
            ("hf_vcpu_sleep" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("hf_vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1651 1673]))                  
                :type "void")
                nil [1624 2093])
            ("hf_vm_from_id" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("vm_id" variable (:type ("ffa_vm_id_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2131 2149]))                  
                :type ("hf_vm" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [2095 2371])
            ("hf_vcpu_wake_up" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("hf_vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2401 2423]))                  
                :type "int")
                nil [2373 2624])
            ("hf_vcpu_timer_expired" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("timer" variable
                       (:pointer 1
                        :type ("hrtimer" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2661 2684]))                  
                :type "void")
                nil [2626 2842])
            ("hf_handle_wake_up_request" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vm_id" variable (:type ("ffa_vm_id_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2883 2906])
                    ("vcpu" variable (:type ("ffa_vcpu_index_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2919 2941]))                  
                :type "void")
                nil [2844 3504])
            ("hf_vcpu_thread" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("data" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [3533 3545]))                  
                :type "int")
                nil [3506 6290])
            ("hf_launch_vm" function
               (:arguments 
                  ( ("vm_id" variable (:type ("ffa_vm_id_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6311 6329]))                  
                :type "int")
                nil [6293 7737]))          
      :file "hf.c"
      :pointmax 7740
      :fsize 7739
      :lastmodtime '(24988 17060)
      :unmatched-syntax nil
      :lexical-table 
        '(("FIRST_SECONDARY_VM_ID" . ((semantic-list "(1)" 272 . 275)))
          )
)
    (semanticdb-table "semanticdb-table"
      :file "transport.h"
      :fsize 830
      :lastmodtime '(24988 17060))
    (semanticdb-table "semanticdb-table"
      :file "hf.h"
      :fsize 694
      :lastmodtime '(24988 17060)))
  :file "!ssh:hafdev:!home!osboxes!kitten-arm64!arch!arm64!kernel!hafnium!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
