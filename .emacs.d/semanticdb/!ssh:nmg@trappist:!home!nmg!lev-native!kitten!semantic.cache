;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode makefile-gmake-mode
      :tags 
        '( ("VERSION" variable (:default-value ("1")) nil [1 13])
            ("PATCHLEVEL" variable (:default-value ("3")) nil [13 28])
            ("SUBLEVEL" variable (:default-value ("0")) nil [28 41])
            ("EXTRAVERSION" variable (:default-value ("Kitten")) nil [41 63])
            ("NAME" variable (:default-value ("Kitten")) nil [63 75])
            ("MAKEFLAGS" variable (:default-value ("--no-print-directory")) nil [358 392])
            ("PHONY" variable (:default-value ("_all")) nil [2894 2908])
            ("_all" function nil nil [2908 2914])
            ("saved-output" variable (:default-value ("$(KBUILD_OUTPUT)")) nil [3066 3099])
            ("KBUILD_OUTPUT" variable (:default-value ("$(shell cd $(KBUILD_OUTPUT) && /bin/pwd)")) nil [3099 3157])
            ("PHONY" variable (:default-value ("$(MAKECMDGOALS)")) nil [3249 3274])
            ("_all" function nil nil [3275 3458])
            ("$(filter-out _all,$(MAKECMDGOALS))" function nil nil [3275 3458])
            ("skip-makefile" variable (:default-value ("1")) nil [3506 3525])
            ("PHONY" variable (:default-value ("all")) nil [3799 3812])
            ("_all" function (:arguments ("all")) nil [3837 3847])
            ("_all" function (:arguments ("modules")) nil [3852 3866])
            ("srctree" variable (:default-value ("$(if $(KBUILD_SRC),$(KBUILD_SRC),$(CURDIR))")) nil [3873 3929])
            ("TOPDIR" variable (:default-value ("$(srctree)")) nil [3929 3951])
            ("objtree" variable (:default-value ("$(CURDIR)")) nil [4001 4023])
            ("src" variable (:default-value ("$(srctree)")) nil [4023 4042])
            ("obj" variable (:default-value ("$(objtree)")) nil [4042 4061])
            ("VPATH" variable (:default-value ("$(srctree)$(if $(KBUILD_EXTMOD),:$(KBUILD_EXTMOD))")) nil [4062 4123])
            ("SUBARCH" variable (:default-value ("$(shell uname -m | sed -e s/i.86/i386/ -e s/sun4u/sparc64/ \\
				  -e s/arm.*/arm/ -e s/sa110/arm/ \\
				  -e s/s390x/s390/ -e s/parisc64/parisc/ \\
				  -e s/ppc.*/powerpc/ -e s/mips.*/mips/ )")) nil [4499 4704])
            ("UTS_MACHINE" variable (:default-value ("$(ARCH)")) nil [5687 5710])
            ("SRCARCH" variable (:default-value ("$(ARCH)")) nil [5710 5730])
            ("CONFIG_SHELL" variable (:default-value ("$(shell if [ -x \"$$BASH\" ]; then echo $$BASH; \\
	  else if [ -x /bin/bash ]; then echo /bin/bash; \\
	  else echo sh; fi ; fi)")) nil [5842 5984])
            ("HOSTCC" variable (:default-value ("gcc")) nil [5985 6000])
            ("HOSTCXX" variable (:default-value ("g++")) nil [6000 6016])
            ("HOSTCFLAGS" variable (:default-value ("-Wall" "-Wstrict-prototypes" "-O0" "-fomit-frame-pointer" "-Wno-unused" "-Wno-format-security" "-U_FORTIFY_SOURCE" "-mno-red-zone")) nil [6016 6150])
            ("HOSTCXXFLAGS" variable (:default-value ("-O0")) nil [6150 6169])
            ("KBUILD_MODULES" variable nil nil [6256 6274])
            ("KBUILD_BUILTIN" variable (:default-value ("1")) nil [6274 6294])
            ("MAKEFLAGS" variable (:default-value ("--include-dir=$(srctree)")) nil [8257 8295])
            ("$(srctree)/scripts/Kbuild.include" include nil nil [8331 8374])
            ("AS" variable (:default-value ("$(CROSS_COMPILE)as")) nil [8508 8533])
            ("LD" variable (:default-value ("$(CROSS_COMPILE)ld")) nil [8533 8558])
            ("CC" variable (:default-value ("$(CROSS_COMPILE)gcc")) nil [8558 8584])
            ("CPP" variable (:default-value ("$(CC)" "-E")) nil [8584 8600])
            ("AR" variable (:default-value ("$(CROSS_COMPILE)ar")) nil [8600 8625])
            ("NM" variable (:default-value ("$(CROSS_COMPILE)nm")) nil [8625 8650])
            ("STRIP" variable (:default-value ("$(CROSS_COMPILE)strip")) nil [8650 8681])
            ("OBJCOPY" variable (:default-value ("$(CROSS_COMPILE)objcopy")) nil [8681 8716])
            ("OBJDUMP" variable (:default-value ("$(CROSS_COMPILE)objdump")) nil [8716 8751])
            ("AWK" variable (:default-value ("awk")) nil [8751 8762])
            ("GENKSYMS" variable (:default-value ("scripts/genksyms/genksyms")) nil [8762 8799])
            ("DEPMOD" variable (:default-value ("/sbin/depmod")) nil [8799 8822])
            ("KALLSYMS" variable (:default-value ("scripts/kallsyms")) nil [8822 8850])
            ("PERL" variable (:default-value ("perl")) nil [8850 8863])
            ("CHECK" variable (:default-value ("sparse")) nil [8863 8879])
            ("CHECKFLAGS" variable (:default-value ("-D__lwk__" "-Dlwk" "-D__STDC__" "-Dunix" "-D__unix__" "-Wbitwise" "$(CF)")) nil [8880 8959])
            ("MODFLAGS" variable (:default-value ("-DMODULE")) nil [8959 8979])
            ("CFLAGS_MODULE" variable (:default-value ("$(MODFLAGS)")) nil [8979 9009])
            ("AFLAGS_MODULE" variable (:default-value ("$(MODFLAGS)")) nil [9009 9039])
            ("LDFLAGS_MODULE" variable (:default-value ("-r")) nil [9039 9060])
            ("CFLAGS_KERNEL" variable nil nil [9060 9076])
            ("AFLAGS_KERNEL" variable nil nil [9076 9092])
            ("LINUX_INCLUDE" variable (:default-value ("-Iofed/include")) nil [9092 9125])
            ("LWKINCLUDE" variable (:default-value ("-Iinclude" "$(LINUX_INCLUDE)" "$(if $(KBUILD_SRC),-Iinclude2 -I$(srctree)/include)" "-include" "include/lwk/autoconf.h")) nil [9237 9386])
            ("CPPFLAGS" variable (:default-value ("-D__KERNEL__" "$(LWKINCLUDE)" "-D__LWK__")) nil [9387 9443])
            ("CFLAGS" variable (:default-value ("-g" "-std=gnu99" "-Wall" "-Wundef" "-Wstrict-prototypes" "-Wno-trigraphs" "-fno-strict-aliasing" "-fno-strict-overflow" "-fno-common" "-fno-pie")) nil [9444 9596])
            ("CFLAGS" variable (:default-value ("-fno-stack-protector")) nil [9646 9678])
            ("CFLAGS" variable (:default-value ("-fgnu89-inline")) nil [9731 9757])
            ("AFLAGS" variable (:default-value ("-D__ASSEMBLY__")) nil [9764 9790])
            ("KERNELRELEASE" variable (:default-value ("$(shell cat .kernelrelease 2> /dev/null)")) nil [9847 9904])
            ("KERNELVERSION" variable (:default-value ("$(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION)")) nil [9904 9972])
            ("MODVERDIR" function (:arguments ("=" "$(if $(KBUILD_EXTMOD),$(firstword $(KBUILD_EXTMOD))/).tmp_versions")) nil [10530 10617])
            ("export" function (:arguments ("=" "$(if $(KBUILD_EXTMOD),$(firstword $(KBUILD_EXTMOD))/).tmp_versions")) nil [10530 10617])
            ("RCS_FIND_IGNORE" variable (:default-value ("\\( -name SCCS -o -name BitKeeper -o -name .svn -o -name CVS -o -name .pc -o -name .hg -o -name .git \\)" "-prune" "-o")) nil [10660 10792])
            ("RCS_TAR_IGNORE" function (:arguments ("=" "--exclude" "SCCS" "--exclude" "BitKeeper" "--exclude" ".svn" "--exclude" "CVS" "--exclude" ".pc" "--exclude" ".hg" "--exclude" ".git")) nil [10792 10924])
            ("export" function (:arguments ("=" "--exclude" "SCCS" "--exclude" "BitKeeper" "--exclude" ".svn" "--exclude" "CVS" "--exclude" ".pc" "--exclude" ".hg" "--exclude" ".git")) nil [10792 10924])
            ("PHONY" variable (:default-value ("scripts_basic")) nil [11095 11118])
            ("scripts_basic" function nil nil [11118 11169])
            ("scripts/basic/%" function (:arguments ("scripts_basic" ";")) nil [11236 11269])
            ("PHONY" variable (:default-value ("outputmakefile")) nil [11270 11294])
            ("outputmakefile" function nil nil [11459 11475])
            ("no-dot-config-targets" variable (:default-value ("clean" "mrproper" "distclean" "cscope" "TAGS" "tags" "help" "%docs" "check%")) nil [12043 12134])
            ("config-targets" variable (:default-value ("0")) nil [12135 12155])
            ("mixed-targets" variable (:default-value ("0")) nil [12155 12175])
            ("dot-config" variable (:default-value ("1")) nil [12175 12195])
            ("%" function (:arguments ("FORCE")) nil [12823 12875])
            ("$(srctree)/arch/$(SRCARCH)/Makefile" include nil nil [13272 13316])
            ("config" function (:arguments ("scripts_basic" "outputmakefile" "FORCE")) nil [13341 13505])
            ("%config" function (:arguments ("scripts_basic" "outputmakefile" "FORCE")) nil [13506 13671])
            ("PHONY" variable (:default-value ("scripts")) nil [14047 14064])
            ("scripts" function (:arguments ("scripts_basic" "include/config/MARKER")) nil [14064 14136])
            ("scripts_basic" function (:arguments ("include/lwk/autoconf.h")) nil [14137 14175])
            ("drivers-y" variable (:default-value ("drivers/")) nil [14237 14259])
            ("net-y" variable (:default-value ("net/")) nil [14259 14274])
            ("block-y" variable (:default-value ("block/")) nil [14274 14300])
            ("libs-y" variable (:default-value ("lib/")) nil [14300 14316])
            ("ofed-y" variable (:default-value ("ofed/")) nil [14336 14361])
            (".config" include nil nil [14581 14597])
            (".kconfig.d" function (:arguments (";")) nil [14764 14786])
            (".config" function (:arguments (";")) nil [14764 14786])
            ("include/lwk/autoconf.h" function (:arguments (".kconfig.d" ".config")) nil [15038 15159])
            ("include/lwk/autoconf.h" function (:arguments (";")) nil [15216 15242])
            ("DEFAULT_EXTRA_TARGETS" variable (:default-value ("vmlwk.bin" "vmlwk.asm" "init_task")) nil [15249 15301])
            ("all" function (:arguments ("vmlwk" "$(DEFAULT_EXTRA_TARGETS)")) nil [15525 15561])
            ("CFLAGS" variable (:default-value ("-Os")) nil [15596 15611])
            ("CFLAGS" variable (:default-value ("-O2")) nil [15616 15631])
            ("CFLAGS" variable (:default-value ("-fno-omit-frame-pointer" "$(call cc-option,-fno-optimize-sibling-calls,)")) nil [15665 15747])
            ("CFLAGS" variable (:default-value ("-fomit-frame-pointer")) nil [15752 15784])
            ("CFLAGS" variable (:default-value ("-fasynchronous-unwind-tables")) nil [15816 15856])
            ("CFLAGS" variable (:default-value ("-g")) nil [15887 15901])
            ("$(srctree)/arch/$(SRCARCH)/Makefile" include nil nil [15909 15953])
            ("NOSTDINC_FLAGS" variable (:default-value ("-nostdinc" "-isystem" "$(shell $(CC) -print-file-name=include)")) nil [16031 16108])
            ("CHECKFLAGS" variable (:default-value ("$(NOSTDINC_FLAGS)")) nil [16108 16144])
            ("CFLAGS" variable (:default-value ("$(call cc-option,-Wno-pointer-sign,)")) nil [16194 16241])
            ("MODLIB" variable (:default-value ("$(INSTALL_MOD_PATH)/lib/modules/$(KERNELRELEASE)")) nil [16882 16940])
            ("core-y" variable (:default-value ("kernel/" "modules/")) nil [17035 17063])
            ("vmlwk-dirs" variable (:default-value ("$(patsubst %/,%,$(filter %/, $(init-y) $(init-m) \\
		     $(core-y) $(core-m) $(drivers-y) $(drivers-m) \\
		     $(ofed-y) $(ofed-m)\\
		     $(net-y) $(net-m) $(block-y) $(block-m) $(libs-y) $(libs-m)))")) nil [17064 17281])
            ("vmlwk-alldirs" variable (:default-value ("$(sort $(vmlwk-dirs) $(patsubst %/,%,$(filter %/, \\
		     $(init-n) $(init-) \\
		     $(core-n) $(core-) $(drivers-n) $(drivers-) \\
		     $(ofed-n) $(ofed-) \\
		     $(net-n)  $(net-) $(block-n) $(block-)  $(libs-n)    $(libs-))))")) nil [17282 17532])
            ("init-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(init-y))")) nil [17533 17584])
            ("core-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(core-y))")) nil [17584 17635])
            ("drivers-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(drivers-y))")) nil [17635 17691])
            ("net-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(net-y))")) nil [17691 17740])
            ("block-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(block-y))")) nil [17740 17800])
            ("libs-y1" variable (:default-value ("$(patsubst %/, %/lib.a, $(libs-y))")) nil [17800 17847])
            ("libs-y2" variable (:default-value ("$(patsubst %/, %/built-in.o, $(libs-y))")) nil [17847 17899])
            ("libs-y" variable (:default-value ("$(libs-y1)" "$(libs-y2)")) nil [17899 17932])
            ("ofed-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(ofed-y))")) nil [17986 18045])
            ("v3vee-objs" variable nil nil [19158 19172])
            ("v3vee-objs" variable (:default-value ("$(CONFIG_PALACIOS_PATH)/libv3vee.a")) nil [19195 19244])
            ("v3vee" function (:arguments ("FORCE")) nil [19251 19264])
            ("vmlwk-init" variable (:default-value ("$(head-y)" "$(init-y)")) nil [19326 19360])
            ("vmlwk-main" variable (:default-value ("$(core-y)" "$(libs-y)" "$(drivers-y)" "$(net-y)" "$(block-y)" "$(ofed-y)")) nil [19360 19437])
            ("vmlwk-all" variable (:default-value ("$(vmlwk-init)" "$(vmlwk-main)")) nil [19437 19479])
            ("vmlwk-lds" variable (:default-value ("arch/$(SRCARCH)/kernel/vmlwk.lds")) nil [19479 19526])
            ("quiet_cmd_vmlwk_version" variable (:default-value ("GEN" ".version")) nil [19979 20022])
            ("quiet_cmd_sysmap" variable (:default-value ("SYSMAP")) nil [20315 20342])
            ("last_kallsyms" variable (:default-value ("3")) nil [22158 22177])
            ("last_kallsyms" variable (:default-value ("2")) nil [22182 22201])
            ("kallsyms.o" variable (:default-value (".tmp_kallsyms$(last_kallsyms).o")) nil [22208 22254])
            ("cmd_ksym_ld" variable (:default-value ("$(cmd_vmlwk__)")) nil [22816 22845])
            ("quiet_cmd_kallsyms" variable (:default-value ("KSYM" "$@")) nil [23024 23056])
            (".tmp_kallsyms2.o" function (:arguments ("%.o:" "%.S" "scripts" "FORCE")) nil [23175 23281])
            (".tmp_kallsyms1.o" function (:arguments ("%.o:" "%.S" "scripts" "FORCE")) nil [23175 23281])
            (".tmp_kallsyms%.S" function (:arguments (".tmp_vmlwk%" "$(KALLSYMS)")) nil [23282 23346])
            (".tmp_vmlwk1" function (:arguments ("$(vmlwk-lds)" "$(vmlwk-all)" "FORCE")) nil [23419 23497])
            (".tmp_vmlwk2" function (:arguments ("$(vmlwk-lds)" "$(vmlwk-all)" ".tmp_kallsyms1.o" "FORCE")) nil [23498 23588])
            (".tmp_vmlwk3" function (:arguments ("$(vmlwk-lds)" "$(vmlwk-all)" ".tmp_kallsyms2.o" "FORCE")) nil [23589 23679])
            ("$(KALLSYMS)" function (:arguments ("scripts" ";")) nil [23738 23761])
            ("debug_kallsyms" function (:arguments (".tmp_map$(last_kallsyms)")) nil [23823 23864])
            (".tmp_map%" function (:arguments (".tmp_vmlwk%" "FORCE")) nil [23865 23979])
            (".tmp_map3" function (:arguments (".tmp_map2")) nil [23980 24001])
            (".tmp_map2" function (:arguments (".tmp_map1")) nil [24002 24023])
            ("vmlwk" function (:arguments ("$(vmlwk-lds)" "$(vmlwk-init)" "$(vmlwk-main)" "v3vee" "$(kallsyms.o)" "FORCE")) nil [24105 24236])
            ("vmlwk.bin" function (:arguments ("vmlwk")) nil [24406 24528])
            ("vmlwk.bin" function (:arguments ("vmlwk")) nil [24533 24578])
            ("vmlwk.asm" function (:arguments ("vmlwk")) nil [24585 24636])
            ("$(vmlwk-lds)" function (:arguments ("$(vmlwk-dirs)" ";")) nil [24728 24794])
            ("$(sort $(vmlwk-init) $(vmlwk-main))" function (:arguments ("$(vmlwk-dirs)" ";")) nil [24728 24794])
            ("PHONY" variable (:default-value ("$(vmlwk-dirs)")) nil [25077 25100])
            ("$(vmlwk-dirs)" function (:arguments ("prepare" "scripts")) nil [25100 25156])
            ("nullstring" variable nil nil [25524 25538])
            ("space" variable (:default-value ("$(nullstring)")) nil [25538 25580])
            ("___localver" variable (:default-value ("$(objtree)/localversion*" "$(srctree)/localversion*")) nil [25581 25645])
            ("__localver" variable (:default-value ("$(sort $(wildcard $(___localver)))")) nil [25645 25694])
            ("_localver" variable (:default-value ("$(foreach f, $(__localver), $(if $(findstring ~, $(f)),,$(f)))")) nil [25731 25806])
            ("localver" variable (:default-value ("$(subst $(space),, \\
	   $(shell cat /dev/null $(_localver)) \\
	   $(patsubst \"%\",%,$(CONFIG_LOCALVERSION)))")) nil [25807 25927])
            ("localver-full" variable (:default-value ("$(localver)$(localver-auto)")) nil [26462 26506])
            ("kernelrelease" variable (:default-value ("$(KERNELVERSION)$(localver-full)")) nil [26559 26608])
            (".kernelrelease" function (:arguments ("FORCE")) nil [26608 26676])
            ("PHONY" variable (:default-value ("prepare" "archprepare" "prepare0" "prepare1" "prepare2" "prepare3")) nil [27023 27088])
            ("PHONY" variable (:default-value ("prepare-all")) nil [27151 27172])
            ("prepare3" function (:arguments (".kernelrelease")) nil [27409 27434])
            ("prepare2" function (:arguments ("prepare3" "outputmakefile")) nil [28008 28042])
            ("prepare1" function (:arguments ("prepare2" "include/lwk/version.h" "include/arch" "linux/include/asm" "include/config/MARKER")) nil [28043 28158])
            ("archprepare" function (:arguments ("prepare1" "scripts_basic")) nil [28245 28281])
            ("prepare0" function (:arguments ("archprepare" "FORCE")) nil [28282 28334])
            ("prepare-all" function (:arguments ("prepare0")) nil [28357 28387])
            ("prepare" function (:arguments ("prepare0")) nil [28357 28387])
            ("include/arch" function (:arguments ("FORCE")) nil [28649 29528])
            ("linux/include/asm" function (:arguments ("FORCE")) nil [29529 30437])
            ("include/config/MARKER" function (:arguments ("scripts/basic/split-include" "include/lwk/autoconf.h")) nil [30485 30700])
            ("uts_len" variable (:default-value ("64")) nil [30938 30952])
            ("include/lwk/version.h" function (:arguments ("$(srctree)/Makefile" ".config" ".kernelrelease" "FORCE")) nil [31373 31472])
            ("PHONY" variable (:default-value ("depend" "dep")) nil [31552 31572])
            ("dep" function nil nil [31572 31634])
            ("depend" function nil nil [31572 31634])
            ("INSTALL_HDR_PATH" variable (:default-value ("$(MODLIB)/abi")) nil [31730 31761])
            ("PHONY" variable (:default-value ("headers_install")) nil [31786 31811])
            ("headers_install" function (:arguments ("include/lwk/version.h")) nil [31811 31989])
            ("PHONY" variable (:default-value ("headers_check")) nil [31990 32013])
            ("headers_check" function (:arguments ("headers_install")) nil [32013 32127])
            ("CLEAN_DIRS" variable (:default-value ("$(MODVERDIR)")) nil [32472 32500])
            ("CLEAN_FILES" variable (:default-value ("vmlwk" "System.map" "vmlwk.bin" "vmlwk.asm" ".tmp_kallsyms*" ".tmp_version" ".tmp_vmlwk*" ".tmp_System.map")) nil [32500 32626])
            ("MRPROPER_DIRS" variable (:default-value ("include/config" "include2")) nil [32678 32720])
            ("MRPROPER_FILES" variable (:default-value (".config" ".config.old" "include/arch" "linux/include/asm" ".version" ".old_version" "include/lwk/autoconf.h" "include/lwk/version.h" ".kernelrelease" "Module.symvers" "tags" "TAGS" "cscope*")) nil [32720 32930])
            ("clean" function (:arguments ("rm-dirs" ":=" "$(CLEAN_DIRS)")) nil [32999 33032])
            ("clean" function (:arguments ("rm-files" ":=" "$(CLEAN_FILES)")) nil [33032 33066])
            ("clean-dirs" variable (:default-value ("$(addprefix _clean_,$(srctree) $(vmlwk-alldirs))")) nil [33066 33134])
            ("PHONY" variable (:default-value ("$(clean-dirs)" "clean" "archclean")) nil [33135 33174])
            ("$(clean-dirs)" function nil nil [33174 33237])
            ("clean" function (:arguments ("archclean" "$(clean-dirs)")) nil [33238 33560])
            ("mrproper" function (:arguments ("rm-dirs" ":=" "$(wildcard $(MRPROPER_DIRS))")) nil [33622 33673])
            ("mrproper" function (:arguments ("rm-files" ":=" "$(wildcard $(MRPROPER_FILES))")) nil [33673 33725])
            ("mrproper-dirs" variable (:default-value ("$(addprefix _mrproper_, scripts)")) nil [33802 33857])
            ("PHONY" variable (:default-value ("$(mrproper-dirs)" "mrproper" "archmrproper")) nil [33858 33906])
            ("$(mrproper-dirs)" function nil nil [33906 33975])
            ("mrproper" function (:arguments ("clean" "archmrproper" "$(mrproper-dirs)")) nil [33976 34063])
            ("PHONY" variable (:default-value ("distclean")) nil [34078 34097])
            ("distclean" function (:arguments ("mrproper")) nil [34098 34386])
            ("package-dir" variable (:default-value ("$(srctree)/scripts/package")) nil [34556 34598])
            ("%pkg" function (:arguments ("FORCE")) nil [34599 34651])
            ("rpm" function (:arguments ("FORCE")) nil [34651 34702])
            ("boards" variable (:default-value ("$(wildcard $(srctree)/arch/$(SRCARCH)/configs/*_defconfig)")) nil [34833 34902])
            ("boards" variable (:default-value ("$(notdir $(boards))")) nil [34902 34932])
            ("help" function nil nil [34933 36645])
            ("%docs" function (:arguments ("scripts_basic" "FORCE")) nil [37209 37283])
            ("KBUILD_MODULES" variable (:default-value ("1")) nil [38066 38086])
            ("PHONY" variable (:default-value ("crmodverdir")) nil [38086 38107])
            ("crmodverdir" function nil nil [38107 38173])
            ("module-dirs" variable (:default-value ("$(addprefix _module_,$(KBUILD_EXTMOD))")) nil [38174 38228])
            ("PHONY" variable (:default-value ("$(module-dirs)" "modules")) nil [38228 38260])
            ("$(module-dirs)" function (:arguments ("crmodverdir")) nil [38260 38337])
            ("modules" function (:arguments ("$(module-dirs)")) nil [38338 38401])
            ("PHONY" variable (:default-value ("modules_install")) nil [38459 38484])
            ("modules_install" function (:arguments ("_emodinst_" "_emodinst_post")) nil [38484 38527])
            ("install-dir" variable (:default-value ("$(if $(INSTALL_MOD_DIR),$(INSTALL_MOD_DIR),extra)")) nil [38528 38593])
            ("PHONY" variable (:default-value ("_emodinst_")) nil [38593 38613])
            ("_emodinst_" function nil nil [38613 38720])
            ("quiet_cmd_depmod" variable (:default-value ("DEPMOD" "$(KERNELRELEASE)")) nil [38786 38830])
            ("PHONY" variable (:default-value ("_emodinst_post")) nil [39145 39169])
            ("_emodinst_post" function (:arguments ("_emodinst_")) nil [39169 39216])
            ("clean-dirs" variable (:default-value ("$(addprefix _clean_,$(KBUILD_EXTMOD))")) nil [39217 39269])
            ("PHONY" variable (:default-value ("$(clean-dirs)" "clean")) nil [39270 39299])
            ("$(clean-dirs)" function nil nil [39299 39362])
            ("clean" function (:arguments ("rm-dirs" ":=" "$(MODVERDIR)")) nil [39363 39394])
            ("clean" function (:arguments ("$(clean-dirs)")) nil [39394 39629])
            ("help" function nil nil [39630 39952])
            ("PHONY" variable (:default-value ("prepare" "scripts")) nil [39966 39991])
            ("prepare" function (:arguments (";")) nil [39991 40002])
            ("scripts" function (:arguments (";")) nil [40002 40013])
            ("__srctree" variable nil nil [40396 40408])
            ("__srctree" variable (:default-value ("$(srctree)/")) nil [40413 40437])
            ("ALLINCLUDE_ARCHS" variable (:default-value ("$(ARCH)" "$(SUBARCH)")) nil [40489 40528])
            ("ALLINCLUDE_ARCHS" variable (:default-value ("$(ARCH)")) nil [40533 40561])
            ("ALLINCLUDE_ARCHS" variable (:default-value ("$(ALLSOURCE_ARCHS)")) nil [40665 40704])
            ("ALLSOURCE_ARCHS" variable (:default-value ("$(ARCH)")) nil [40711 40738])
            ("quiet_cmd_cscope-file" variable (:default-value ("FILELST" "cscope.files")) nil [41886 41931])
            ("quiet_cmd_cscope" variable (:default-value ("MAKE" "cscope.out")) nil [42008 42046])
            ("cscope" function (:arguments ("FORCE")) nil [42076 42135])
            ("quiet_cmd_TAGS" variable (:default-value ("MAKE" "$@")) nil [42136 42163])
            ("TAGS" function (:arguments ("FORCE")) nil [42537 42567])
            ("quiet_cmd_tags" variable (:default-value ("MAKE" "$@")) nil [42569 42596])
            ("tags" function (:arguments ("FORCE")) nil [42970 43000])
            ("includecheck" function nil nil [43131 43262])
            ("versioncheck" function nil nil [43263 43393])
            ("namespacecheck" function nil nil [43394 43451])
            ("PHONY" variable (:default-value ("checkstack")) nil [43520 43540])
            ("checkstack" function nil nil [43540 43650])
            ("kernelrelease" function nil nil [43651 43798])
            ("kernelversion" function nil nil [43798 43837])
            ("%.s" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [44493 44585])
            ("%.i" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [44585 44677])
            ("%.o" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [44677 44769])
            ("%.lst" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [44769 44863])
            ("%.s" function (:arguments ("%.S" "prepare" "scripts" "FORCE")) nil [44863 44955])
            ("%.o" function (:arguments ("%.S" "prepare" "scripts" "FORCE")) nil [44955 45047])
            ("/" function (:arguments ("prepare" "scripts" "FORCE")) nil [45058 45162])
            ("%/" function (:arguments ("prepare" "scripts" "FORCE")) nil [45162 45267])
            ("%.ko" function (:arguments ("prepare" "scripts" "FORCE")) nil [45267 45444])
            ("quiet_cmd_rmdirs" variable (:default-value ("$(if $(wildcard $(rm-dirs)),CLEAN   $(wildcard $(rm-dirs)))")) nil [45572 45651])
            ("quiet_cmd_rmfiles" variable (:default-value ("$(if $(wildcard $(rm-files)),CLEAN   $(wildcard $(rm-files)))")) nil [45689 45771])
            ("a_flags" variable (:default-value ("-Wp,-MD,$(depfile)" "$(AFLAGS)" "$(AFLAGS_KERNEL)" "$(NOSTDINC_FLAGS)" "$(CPPFLAGS)" "$(modkern_aflags)" "$(EXTRA_AFLAGS)" "$(AFLAGS_$(*F).o)")) nil [45811 45959])
            ("quiet_cmd_as_o_S" variable (:default-value ("AS" "$@")) nil [45960 45990])
            ("cmd_as_o_S" variable (:default-value ("$(CC)" "$(a_flags)" "-c" "-o" "$@" "$<")) nil [45990 46038])
            ("targets" variable (:default-value ("$(wildcard $(sort $(targets)))")) nil [46071 46113])
            ("cmd_files" variable (:default-value ("$(wildcard .*.cmd $(foreach f,$(targets),$(dir $(f)).$(notdir $(f)).cmd))")) nil [46113 46200])
            ("clean" variable (:default-value ("-f" "$(if $(KBUILD_SRC),$(srctree)/)scripts/Makefile.clean" "obj")) nil [46418 46488])
            ("init_task" function (:arguments ("O:=$(if $O,$O,$(objtree))")) nil [46579 46621])
            ("user" function (:arguments ("O:=$(if $O,$O,$(objtree))")) nil [46579 46621])
            ("user" function (:arguments ("FORCE")) nil [46675 46813])
            ("init_task" function (:arguments ("user" "FORCE")) nil [46870 46942])
            ("PHONY" variable (:default-value ("FORCE")) nil [46943 46958])
            ("FORCE" function nil nil [46958 46965]))          
      :file "Makefile"
      :pointmax 47126
      :fsize 47125
      :lastmodtime '(24664 9727)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :file ".config"
      :fsize 2185
      :lastmodtime '(24663 56693)))
  :file "!ssh:nmg@trappist:!home!nmg!lev-native!kitten!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
