;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode makefile-gmake-mode
      :tags 
        '( ("VERSION" variable (:default-value ("1")) nil [1 13])
            ("PATCHLEVEL" variable (:default-value ("1")) nil [13 28])
            ("SUBLEVEL" variable (:default-value ("0")) nil [28 41])
            ("EXTRAVERSION" variable (:default-value ("Palacios")) nil [41 65])
            ("NAME" variable (:default-value ("Palacios")) nil [65 79])
            ("MAKEFLAGS" variable (:default-value ("--no-print-directory")) nil [362 396])
            ("PHONY" variable (:default-value ("_all")) nil [2901 2915])
            ("_all" function nil nil [2915 2921])
            ("saved-output" variable (:default-value ("$(KBUILD_OUTPUT)")) nil [3073 3106])
            ("KBUILD_OUTPUT" variable (:default-value ("$(shell cd $(KBUILD_OUTPUT) && /bin/pwd)")) nil [3106 3164])
            ("PHONY" variable (:default-value ("$(MAKECMDGOALS)")) nil [3256 3281])
            ("_all" function nil nil [3282 3465])
            ("$(filter-out _all,$(MAKECMDGOALS))" function nil nil [3282 3465])
            ("skip-makefile" variable (:default-value ("1")) nil [3513 3532])
            ("PHONY" variable (:default-value ("all")) nil [3806 3819])
            ("_all" function (:arguments ("all")) nil [3820 3830])
            ("srctree" variable (:default-value ("$(if $(KBUILD_SRC),$(KBUILD_SRC),$(CURDIR))")) nil [3832 3888])
            ("TOPDIR" variable (:default-value ("$(srctree)")) nil [3888 3910])
            ("objtree" variable (:default-value ("$(CURDIR)")) nil [3960 3982])
            ("src" variable (:default-value ("$(srctree)")) nil [3982 4001])
            ("obj" variable (:default-value ("$(objtree)")) nil [4001 4020])
            ("VPATH" variable (:default-value ("$(srctree)$(if $(KBUILD_EXTMOD),:$(KBUILD_EXTMOD))")) nil [4021 4082])
            ("SUBARCH" variable (:default-value ("$(shell uname -m | sed -e s/i.86/i386/  )")) nil [4458 4511])
            ("UTS_MACHINE" variable (:default-value ("$(ARCH)")) nil [5494 5517])
            ("CONFIG_SHELL" variable (:default-value ("$(shell if [ -x \"$$BASH\" ]; then echo $$BASH; \\
	  else if [ -x /bin/bash ]; then echo /bin/bash; \\
	  else echo sh; fi ; fi)")) nil [5541 5683])
            ("HOSTCC" variable (:default-value ("gcc")) nil [5684 5699])
            ("HOSTCXX" variable (:default-value ("g++")) nil [5699 5715])
            ("HOSTCFLAGS" variable (:default-value ("-Wall" "-Wstrict-prototypes" "-fomit-frame-pointer" "-Wno-unused" "-Wno-format-security" "-U_FORTIFY_SOURCE")) nil [5715 5832])
            ("HOSTCXXFLAGS" variable (:default-value ("-O")) nil [5832 5850])
            ("KBUILD_MODULES" variable nil nil [5937 5955])
            ("KBUILD_BUILTIN" variable (:default-value ("1")) nil [5955 5975])
            ("MAKEFLAGS" variable (:default-value ("--include-dir=$(srctree)")) nil [7938 7976])
            ("$(srctree)/scripts/Kbuild.include" include nil nil [8012 8055])
            ("AS" variable (:default-value ("$(CROSS_COMPILE)as")) nil [8189 8214])
            ("LD" variable (:default-value ("$(CROSS_COMPILE)ld")) nil [8214 8239])
            ("CC" variable (:default-value ("$(CROSS_COMPILE)gcc")) nil [8239 8265])
            ("CPP" variable (:default-value ("$(CC)" "-E")) nil [8265 8281])
            ("AR" variable (:default-value ("$(CROSS_COMPILE)ar")) nil [8281 8306])
            ("NM" variable (:default-value ("$(CROSS_COMPILE)nm")) nil [8306 8331])
            ("STRIP" variable (:default-value ("$(CROSS_COMPILE)strip")) nil [8331 8362])
            ("OBJCOPY" variable (:default-value ("$(CROSS_COMPILE)objcopy")) nil [8362 8397])
            ("OBJDUMP" variable (:default-value ("$(CROSS_COMPILE)objdump")) nil [8397 8432])
            ("AWK" variable (:default-value ("awk")) nil [8432 8443])
            ("GENKSYMS" variable (:default-value ("scripts/genksyms/genksyms")) nil [8443 8480])
            ("DEPMOD" variable (:default-value ("/sbin/depmod")) nil [8480 8503])
            ("KALLSYMS" variable (:default-value ("scripts/kallsyms")) nil [8503 8531])
            ("PERL" variable (:default-value ("perl")) nil [8531 8544])
            ("CHECK" variable (:default-value ("sparse")) nil [8544 8560])
            ("CFLAGS_KERNEL" variable nil nil [8562 8578])
            ("AFLAGS_KERNEL" variable nil nil [8578 8594])
            ("V3_INCLUDE" variable (:default-value ("-Ipalacios/include" "$(if $(KBUILD_SRC),-I$(srctree)/palacios/include)" "-include" "palacios/include/autoconf.h")) nil [8706 8859])
            ("V3_CPPFLAGS" variable (:default-value ("$(V3_INCLUDE)" "-D__V3VEE__")) nil [8860 8908])
            ("V3_CFLAGS" variable (:default-value ("-fno-stack-protector" "-W" "-Wall" "-Werror" "-mno-red-zone" "-fno-common" "-Wno-format-truncation" "$(call cc-option, -Wno-implicit-fallthrough,)" "$(call cc-option, -Wno-unused-but-set-variable,)" "-fno-strict-aliasing" "$(call cc-option, -Wno-unused-parameter,)" "-O2" "-fno-pie")) nil [8909 9213])
            ("V3_LDFLAGS" variable (:default-value ("--whole-archive")) nil [9234 9273])
            ("V3_CFLAGS" variable (:default-value ("-fgnu89-inline")) nil [9320 9349])
            ("V3_AFLAGS" variable nil nil [9356 9371])
            ("MODVERDIR" function (:arguments ("=" "$(if $(KBUILD_EXTMOD),$(firstword $(KBUILD_EXTMOD))/).tmp_versions")) nil [10063 10150])
            ("export" function (:arguments ("=" "$(if $(KBUILD_EXTMOD),$(firstword $(KBUILD_EXTMOD))/).tmp_versions")) nil [10063 10150])
            ("RCS_FIND_IGNORE" variable (:default-value ("\\( -name SCCS -o -name BitKeeper -o -name .svn -o -name CVS -o -name .pc -o -name .hg -o -name .git \\)" "-prune" "-o")) nil [10193 10325])
            ("RCS_TAR_IGNORE" function (:arguments ("=" "--exclude" "SCCS" "--exclude" "BitKeeper" "--exclude" ".svn" "--exclude" "CVS" "--exclude" ".pc" "--exclude" ".hg" "--exclude" ".git")) nil [10325 10457])
            ("export" function (:arguments ("=" "--exclude" "SCCS" "--exclude" "BitKeeper" "--exclude" ".svn" "--exclude" "CVS" "--exclude" ".pc" "--exclude" ".hg" "--exclude" ".git")) nil [10325 10457])
            ("PHONY" variable (:default-value ("scripts_basic")) nil [10628 10651])
            ("scripts_basic" function nil nil [10651 10702])
            ("scripts/basic/%" function (:arguments ("scripts_basic" ";")) nil [10769 10802])
            ("PHONY" variable (:default-value ("outputmakefile")) nil [10803 10827])
            ("outputmakefile" function nil nil [10992 11008])
            ("no-dot-config-targets" variable (:default-value ("clean" "mrproper" "distclean" "cscope" "TAGS" "tags" "help" "%docs" "check%")) nil [11576 11667])
            ("config-targets" variable (:default-value ("0")) nil [11668 11688])
            ("mixed-targets" variable (:default-value ("0")) nil [11688 11708])
            ("dot-config" variable (:default-value ("1")) nil [11708 11728])
            ("%" function (:arguments ("FORCE")) nil [12342 12394])
            ("$(srctree)/Makefile.$(ARCH)" include nil nil [12791 12827])
            ("%config" function (:arguments ("scripts_basic" "outputmakefile" "FORCE")) nil [12852 12975])
            ("PHONY" variable (:default-value ("scripts")) nil [13384 13401])
            ("scripts" function (:arguments ("scripts_basic" "palacios/include/autoconf.h")) nil [13401 13479])
            ("scripts_basic" function (:arguments ("palacios/include/autoconf.h")) nil [13480 13523])
            ("core-y" variable (:default-value ("palacios/src/palacios/")) nil [13644 13686])
            ("libs-y" variable (:default-value ("palacios/lib/$(ARCH)/")) nil [13686 13719])
            ("devices-y" variable (:default-value ("palacios/src/devices/")) nil [13719 13760])
            ("interfaces-y" variable (:default-value ("palacios/src/interfaces/")) nil [13760 13804])
            ("extensions-y" variable (:default-value ("palacios/src/extensions/")) nil [13804 13848])
            ("vnet-y" variable (:default-value ("palacios/src/vnet/")) nil [13848 13886])
            ("modules-y" variable (:default-value ("modules/")) nil [13886 13914])
            (".config" include nil nil [14097 14113])
            (".kconfig.d" function (:arguments (";")) nil [14280 14302])
            (".config" function (:arguments (";")) nil [14280 14302])
            ("palacios/include/autoconf.h" function (:arguments (".config")) nil [14559 14752])
            ("palacios/include/autoconf.h" function (:arguments (";")) nil [14810 14841])
            ("DEFAULT_EXTRA_TARGETS" variable (:default-value ("linux_module")) nil [14871 14906])
            ("DEFAULT_EXTRA_TARGETS" variable (:default-value ("kitten_module")) nil [14934 14970])
            ("DEFAULT_EXTRA_TARGETS" variable nil nil [14975 14998])
            ("DEFAULT_EXTRA_TARGETS" variable (:default-value ("user")) nil [15033 15063])
            ("all" function (:arguments ("palacios" "$(DEFAULT_EXTRA_TARGETS)")) nil [15297 15336])
            ("V3_CFLAGS" variable (:default-value ("-mcmodel=kernel")) nil [15360 15399])
            ("V3_CFLAGS" variable (:default-value ("-fPIC")) nil [15404 15432])
            ("V3_CFLAGS" variable (:default-value ("-fno-omit-frame-pointer" "$(call cc-option,-fno-optimize-sibling-calls,)")) nil [15469 15554])
            ("V3_CFLAGS" variable (:default-value ("-fomit-frame-pointer")) nil [15559 15594])
            ("V3_CFLAGS" variable (:default-value ("-fasynchronous-unwind-tables")) nil [15630 15673])
            ("V3_CFLAGS" variable (:default-value ("-g")) nil [15707 15724])
            ("$(srctree)/Makefile.$(ARCH)" include nil nil [15732 15768])
            ("NOSTDINC_FLAGS" variable nil nil [15846 15864])
            ("V3_CFLAGS" variable (:default-value ("$(call cc-option,-Wno-pointer-sign,)")) nil [15915 15965])
            ("palacios-dirs" variable (:default-value ("$(patsubst %/,%,$(filter %/,  \\
		     $(core-y) $(devices-y) $(interfaces-y) $(extensions-y) $(vnet-y) $(libs-y)) $(modules-y))")) nil [16404 16550])
            ("palacios-cleandirs" variable (:default-value ("$(sort $(palacios-dirs) $(patsubst %/,%,$(filter %/, \\
		     	$(core-n) $(core-) $(devices-n) $(devices-) \\
			$(interfaces-n) $(interfaces-) $(extensions-n) $(extensions-) $(vnet-n) $(vnet-) $(modules-n) $(modules-))))")) nil [16718 16961])
            ("core-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(core-y))")) nil [16964 17015])
            ("devices-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(devices-y))")) nil [17015 17071])
            ("interfaces-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(interfaces-y))")) nil [17071 17136])
            ("extensions-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(extensions-y))")) nil [17136 17201])
            ("libs-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(libs-y))")) nil [17201 17252])
            ("vnet-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(vnet-y))")) nil [17252 17311])
            ("modules-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(modules-y))")) nil [17311 17373])
            ("palacios" variable (:default-value ("$(core-y)" "$(devices-y)" "$(interfaces-y)" "$(extensions-y)" "$(vnet-y)" "$(libs-y)" "$(modules-y)")) nil [18035 18135])
            ("quiet_cmd_palacios_version" variable (:default-value ("GEN" ".version")) nil [18349 18395])
            ("libv3vee.a" function (:arguments ("$(palacios)")) nil [19096 19156])
            ("palacios" function (:arguments ("libv3vee.a")) nil [19157 19178])
            ("user/libv3vee_user.a" function (:arguments ("user/*.c" "user/*.h")) nil [19180 19238])
            ("user" function (:arguments ("user/libv3vee_user.a")) nil [19239 19266])
            ("linux_module/v3vee.ko" function (:arguments ("linux_module/*.c" "linux_module/*.h" "libv3vee.a")) nil [19268 19397])
            ("linux_module" function (:arguments ("linux_module/v3vee.ko")) nil [19399 19436])
            ("kitten_module/v3vee.ko" function (:arguments ("kitten_module/*.c" "kitten_module/*.h" "libv3vee.a")) nil [19438 19536])
            ("kitten_module" function (:arguments ("kitten_module/v3vee.ko")) nil [19537 19575])
            ("palacios.asm" function (:arguments ("palacios")) nil [19577 19634])
            ("$(sort  $(palacios))" function (:arguments ("$(palacios-dirs)" ";")) nil [19726 19768])
            ("PHONY" variable (:default-value ("$(palacios-dirs)")) nil [20054 20080])
            ("$(palacios-dirs)" function (:arguments ("prepare" "scripts")) nil [20080 20139])
            ("PHONY" variable (:default-value ("prepare" "archprepare" "prepare0" "prepare1" "prepare2" "prepare3")) nil [20489 20554])
            ("PHONY" variable (:default-value ("prepare-all")) nil [20617 20638])
            ("prepare3" function nil nil [20806 20817])
            ("prepare2" function (:arguments ("prepare3" "outputmakefile")) nil [21135 21169])
            ("prepare1" function (:arguments ("prepare2" "palacios/include/autoconf.h")) nil [21170 21217])
            ("archprepare" function (:arguments ("prepare1" "scripts_basic")) nil [21218 21254])
            ("prepare0" function (:arguments ("archprepare" "FORCE")) nil [21255 21307])
            ("prepare-all" function (:arguments ("prepare0")) nil [21330 21360])
            ("prepare" function (:arguments ("prepare0")) nil [21330 21360])
            ("PHONY" variable (:default-value ("depend" "dep")) nil [21710 21730])
            ("dep" function nil nil [21730 21792])
            ("depend" function nil nil [21730 21792])
            ("CLEAN_DIRS" variable (:default-value ("$(MODVERDIR)")) nil [22139 22167])
            ("CLEAN_FILES" variable (:default-value ("v3vee.asm" ".tmp_version" ".tmp_palacios*")) nil [22167 22240])
            ("MRPROPER_DIRS" variable (:default-value ("palacios/include/config")) nil [22292 22335])
            ("MRPROPER_FILES" variable (:default-value (".config" ".config.old" ".version" ".old_version" "palacios/include/autoconf.h" "tags" "TAGS" "cscope*")) nil [22335 22469])
            ("clean" function (:arguments ("rm-dirs" ":=" "$(CLEAN_DIRS)")) nil [22600 22633])
            ("clean" function (:arguments ("rm-files" ":=" "$(CLEAN_FILES)")) nil [22633 22667])
            ("clean-dirs" variable (:default-value ("$(addprefix _clean_,$(srctree) $(palacios-cleandirs))")) nil [22667 22740])
            ("PHONY" variable (:default-value ("$(clean-dirs)" "clean" "archclean")) nil [22741 22780])
            ("$(clean-dirs)" function nil nil [22780 22843])
            ("clean" function (:arguments ("archclean" "$(clean-dirs)")) nil [22845 23128])
            ("mrproper" function (:arguments ("rm-dirs" ":=" "$(wildcard $(MRPROPER_DIRS))")) nil [23190 23241])
            ("mrproper" function (:arguments ("rm-files" ":=" "$(wildcard $(MRPROPER_FILES))")) nil [23241 23293])
            ("mrproper-dirs" variable (:default-value ("$(addprefix _mrproper_, scripts)")) nil [23370 23425])
            ("PHONY" variable (:default-value ("$(mrproper-dirs)" "mrproper" "archmrproper")) nil [23426 23474])
            ("$(mrproper-dirs)" function nil nil [23474 23543])
            ("mrproper" function (:arguments ("clean" "archmrproper" "$(mrproper-dirs)")) nil [23544 23631])
            ("PHONY" variable (:default-value ("distclean")) nil [23646 23665])
            ("distclean" function (:arguments ("mrproper")) nil [23666 23954])
            ("package-dir" variable (:default-value ("$(srctree)/scripts/package")) nil [24124 24166])
            ("%pkg" function (:arguments ("FORCE")) nil [24167 24219])
            ("rpm" function (:arguments ("FORCE")) nil [24219 24270])
            ("help" function nil nil [24402 25989])
            ("%docs" function (:arguments ("scripts_basic" "FORCE")) nil [26093 26167])
            ("__srctree" variable nil nil [26529 26541])
            ("__srctree" variable (:default-value ("$(srctree)/")) nil [26546 26570])
            ("ALLINCLUDE_ARCHS" variable (:default-value ("$(ARCH)" "$(SUBARCH)")) nil [26622 26661])
            ("ALLINCLUDE_ARCHS" variable (:default-value ("$(ARCH)")) nil [26666 26694])
            ("ALLINCLUDE_ARCHS" variable (:default-value ("$(ALLSOURCE_ARCHS)")) nil [26798 26837])
            ("ALLSOURCE_ARCHS" variable (:default-value ("$(ARCH)")) nil [26844 26871])
            ("quiet_cmd_cscope-file" variable (:default-value ("FILELST" "cscope.files")) nil [27018 27063])
            ("quiet_cmd_cscope" variable (:default-value ("MAKE" "cscope.out")) nil [27140 27178])
            ("cscope" function (:arguments ("FORCE")) nil [27208 27267])
            ("quiet_cmd_TAGS" variable (:default-value ("MAKE" "$@")) nil [27268 27295])
            ("TAGS" function (:arguments ("FORCE")) nil [27669 27699])
            ("quiet_cmd_tags" variable (:default-value ("MAKE" "$@")) nil [27701 27728])
            ("tags" function (:arguments ("FORCE")) nil [28102 28132])
            ("build-dir" variable (:default-value ("$(patsubst %/,%,$(dir $@))")) nil [28678 28718])
            ("target-dir" variable (:default-value ("$(dir $@)")) nil [28718 28741])
            ("%.s" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [28743 28835])
            ("%.i" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [28835 28927])
            ("%.o" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [28927 29019])
            ("%.lst" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [29019 29113])
            ("%.s" function (:arguments ("%.S" "prepare" "scripts" "FORCE")) nil [29113 29205])
            ("%.o" function (:arguments ("%.S" "prepare" "scripts" "FORCE")) nil [29205 29297])
            ("%/" function (:arguments ("prepare" "scripts" "FORCE")) nil [29308 29416])
            ("%.ko" function (:arguments ("prepare" "scripts" "FORCE")) nil [29416 29596])
            ("quiet_cmd_rmdirs" variable (:default-value ("$(if $(wildcard $(rm-dirs)),CLEAN   $(wildcard $(rm-dirs)))")) nil [29724 29803])
            ("quiet_cmd_rmfiles" variable (:default-value ("$(if $(wildcard $(rm-files)),CLEAN   $(wildcard $(rm-files)))")) nil [29841 29923])
            ("a_flags" variable (:default-value ("-Wp,-MD,$(depfile)" "$(V3_AFLAGS)" "$(AFLAGS_KERNEL)" "$(NOSTDINC_FLAGS)" "$(V3_CPPFLAGS)" "$(modkern_aflags)" "$(EXTRA_AFLAGS)" "$(AFLAGS_$(*F).o)")) nil [29963 30117])
            ("quiet_cmd_as_o_S" variable (:default-value ("AS" "$@")) nil [30118 30148])
            ("cmd_as_o_S" variable (:default-value ("$(CC)" "$(a_flags)" "-c" "-o" "$@" "$<")) nil [30148 30196])
            ("targets" variable (:default-value ("$(wildcard $(sort $(targets)))")) nil [30229 30271])
            ("cmd_files" variable (:default-value ("$(wildcard .*.cmd $(foreach f,$(targets),$(dir $(f)).$(notdir $(f)).cmd))")) nil [30271 30358])
            ("clean" variable (:default-value ("-f" "$(if $(KBUILD_SRC),$(srctree)/)scripts/Makefile.clean" "obj")) nil [30576 30646])
            ("PHONY" variable (:default-value ("FORCE")) nil [30980 30995])
            ("FORCE" function nil nil [30995 31002]))          
      :file "Makefile"
      :pointmax 31163
      :fsize 31162
      :lastmodtime '(24594 7839)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :file ".config"
      :fsize 4872
      :lastmodtime '(24594 7818))
    (semanticdb-table "semanticdb-table"
      :major-mode makefile-gmake-mode
      :tags 
        '( ("VERSION" variable (:default-value ("1")) nil [1 13])
            ("PATCHLEVEL" variable (:default-value ("1")) nil [13 28])
            ("SUBLEVEL" variable (:default-value ("0")) nil [28 41])
            ("EXTRAVERSION" variable (:default-value ("Palacios")) nil [41 65])
            ("NAME" variable (:default-value ("Palacios")) nil [65 79])
            ("MAKEFLAGS" variable (:default-value ("--no-print-directory")) nil [362 396])
            ("PHONY" variable (:default-value ("_all")) nil [2901 2915])
            ("_all" function nil nil [2915 2921])
            ("saved-output" variable (:default-value ("$(KBUILD_OUTPUT)")) nil [3073 3106])
            ("KBUILD_OUTPUT" variable (:default-value ("$(shell cd $(KBUILD_OUTPUT) && /bin/pwd)")) nil [3106 3164])
            ("PHONY" variable (:default-value ("$(MAKECMDGOALS)")) nil [3256 3281])
            ("_all" function nil nil [3282 3465])
            ("$(filter-out _all,$(MAKECMDGOALS))" function nil nil [3282 3465])
            ("skip-makefile" variable (:default-value ("1")) nil [3513 3532])
            ("PHONY" variable (:default-value ("all")) nil [3806 3819])
            ("_all" function (:arguments ("all")) nil [3820 3830])
            ("srctree" variable (:default-value ("$(if $(KBUILD_SRC),$(KBUILD_SRC),$(CURDIR))")) nil [3832 3888])
            ("TOPDIR" variable (:default-value ("$(srctree)")) nil [3888 3910])
            ("objtree" variable (:default-value ("$(CURDIR)")) nil [3960 3982])
            ("src" variable (:default-value ("$(srctree)")) nil [3982 4001])
            ("obj" variable (:default-value ("$(objtree)")) nil [4001 4020])
            ("VPATH" variable (:default-value ("$(srctree)$(if $(KBUILD_EXTMOD),:$(KBUILD_EXTMOD))")) nil [4021 4082])
            ("SUBARCH" variable (:default-value ("$(shell uname -m | sed -e s/i.86/i386/  )")) nil [4458 4511])
            ("UTS_MACHINE" variable (:default-value ("$(ARCH)")) nil [5494 5517])
            ("CONFIG_SHELL" variable (:default-value ("$(shell if [ -x \"$$BASH\" ]; then echo $$BASH; \\
	  else if [ -x /bin/bash ]; then echo /bin/bash; \\
	  else echo sh; fi ; fi)")) nil [5541 5683])
            ("HOSTCC" variable (:default-value ("gcc")) nil [5684 5699])
            ("HOSTCXX" variable (:default-value ("g++")) nil [5699 5715])
            ("HOSTCFLAGS" variable (:default-value ("-Wall" "-Wstrict-prototypes" "-fomit-frame-pointer" "-Wno-unused" "-Wno-format-security" "-U_FORTIFY_SOURCE")) nil [5715 5832])
            ("HOSTCXXFLAGS" variable (:default-value ("-O")) nil [5832 5850])
            ("KBUILD_MODULES" variable nil nil [5937 5955])
            ("KBUILD_BUILTIN" variable (:default-value ("1")) nil [5955 5975])
            ("MAKEFLAGS" variable (:default-value ("--include-dir=$(srctree)")) nil [7938 7976])
            ("$(srctree)/scripts/Kbuild.include" include nil nil [8012 8055])
            ("AS" variable (:default-value ("$(CROSS_COMPILE)as")) nil [8189 8214])
            ("LD" variable (:default-value ("$(CROSS_COMPILE)ld")) nil [8214 8239])
            ("CC" variable (:default-value ("$(CROSS_COMPILE)gcc")) nil [8239 8265])
            ("CPP" variable (:default-value ("$(CC)" "-E")) nil [8265 8281])
            ("AR" variable (:default-value ("$(CROSS_COMPILE)ar")) nil [8281 8306])
            ("NM" variable (:default-value ("$(CROSS_COMPILE)nm")) nil [8306 8331])
            ("STRIP" variable (:default-value ("$(CROSS_COMPILE)strip")) nil [8331 8362])
            ("OBJCOPY" variable (:default-value ("$(CROSS_COMPILE)objcopy")) nil [8362 8397])
            ("OBJDUMP" variable (:default-value ("$(CROSS_COMPILE)objdump")) nil [8397 8432])
            ("AWK" variable (:default-value ("awk")) nil [8432 8443])
            ("GENKSYMS" variable (:default-value ("scripts/genksyms/genksyms")) nil [8443 8480])
            ("DEPMOD" variable (:default-value ("/sbin/depmod")) nil [8480 8503])
            ("KALLSYMS" variable (:default-value ("scripts/kallsyms")) nil [8503 8531])
            ("PERL" variable (:default-value ("perl")) nil [8531 8544])
            ("CHECK" variable (:default-value ("sparse")) nil [8544 8560])
            ("CFLAGS_KERNEL" variable nil nil [8562 8578])
            ("AFLAGS_KERNEL" variable nil nil [8578 8594])
            ("V3_INCLUDE" variable (:default-value ("-Ipalacios/include" "$(if $(KBUILD_SRC),-I$(srctree)/palacios/include)" "-include" "palacios/include/autoconf.h")) nil [8706 8859])
            ("V3_CPPFLAGS" variable (:default-value ("$(V3_INCLUDE)" "-D__V3VEE__")) nil [8860 8908])
            ("V3_CFLAGS" variable (:default-value ("-fno-stack-protector" "-W" "-Wall" "-Werror" "-mno-red-zone" "-fno-common" "-Wno-format-truncation" "$(call cc-option, -Wno-implicit-fallthrough,)" "$(call cc-option, -Wno-unused-but-set-variable,)" "-fno-strict-aliasing" "$(call cc-option, -Wno-unused-parameter,)" "-O2" "-fno-pie")) nil [8909 9213])
            ("V3_LDFLAGS" variable (:default-value ("--whole-archive")) nil [9234 9273])
            ("V3_CFLAGS" variable (:default-value ("-fgnu89-inline")) nil [9320 9349])
            ("V3_AFLAGS" variable nil nil [9356 9371])
            ("MODVERDIR" function (:arguments ("=" "$(if $(KBUILD_EXTMOD),$(firstword $(KBUILD_EXTMOD))/).tmp_versions")) nil [10063 10150])
            ("export" function (:arguments ("=" "$(if $(KBUILD_EXTMOD),$(firstword $(KBUILD_EXTMOD))/).tmp_versions")) nil [10063 10150])
            ("RCS_FIND_IGNORE" variable (:default-value ("\\( -name SCCS -o -name BitKeeper -o -name .svn -o -name CVS -o -name .pc -o -name .hg -o -name .git \\)" "-prune" "-o")) nil [10193 10325])
            ("RCS_TAR_IGNORE" function (:arguments ("=" "--exclude" "SCCS" "--exclude" "BitKeeper" "--exclude" ".svn" "--exclude" "CVS" "--exclude" ".pc" "--exclude" ".hg" "--exclude" ".git")) nil [10325 10457])
            ("export" function (:arguments ("=" "--exclude" "SCCS" "--exclude" "BitKeeper" "--exclude" ".svn" "--exclude" "CVS" "--exclude" ".pc" "--exclude" ".hg" "--exclude" ".git")) nil [10325 10457])
            ("PHONY" variable (:default-value ("scripts_basic")) nil [10628 10651])
            ("scripts_basic" function nil nil [10651 10702])
            ("scripts/basic/%" function (:arguments ("scripts_basic" ";")) nil [10769 10802])
            ("PHONY" variable (:default-value ("outputmakefile")) nil [10803 10827])
            ("outputmakefile" function nil nil [10992 11008])
            ("no-dot-config-targets" variable (:default-value ("clean" "mrproper" "distclean" "cscope" "TAGS" "tags" "help" "%docs" "check%")) nil [11576 11667])
            ("config-targets" variable (:default-value ("0")) nil [11668 11688])
            ("mixed-targets" variable (:default-value ("0")) nil [11688 11708])
            ("dot-config" variable (:default-value ("1")) nil [11708 11728])
            ("%" function (:arguments ("FORCE")) nil [12342 12394])
            ("$(srctree)/Makefile.$(ARCH)" include nil nil [12791 12827])
            ("%config" function (:arguments ("scripts_basic" "outputmakefile" "FORCE")) nil [12852 12975])
            ("PHONY" variable (:default-value ("scripts")) nil [13384 13401])
            ("scripts" function (:arguments ("scripts_basic" "palacios/include/autoconf.h")) nil [13401 13479])
            ("scripts_basic" function (:arguments ("palacios/include/autoconf.h")) nil [13480 13523])
            ("core-y" variable (:default-value ("palacios/src/palacios/")) nil [13644 13686])
            ("libs-y" variable (:default-value ("palacios/lib/$(ARCH)/")) nil [13686 13719])
            ("devices-y" variable (:default-value ("palacios/src/devices/")) nil [13719 13760])
            ("interfaces-y" variable (:default-value ("palacios/src/interfaces/")) nil [13760 13804])
            ("extensions-y" variable (:default-value ("palacios/src/extensions/")) nil [13804 13848])
            ("vnet-y" variable (:default-value ("palacios/src/vnet/")) nil [13848 13886])
            ("modules-y" variable (:default-value ("modules/")) nil [13886 13914])
            (".config" include nil nil [14097 14113])
            (".kconfig.d" function (:arguments (";")) nil [14280 14302])
            (".config" function (:arguments (";")) nil [14280 14302])
            ("palacios/include/autoconf.h" function (:arguments (".config")) nil [14559 14752])
            ("palacios/include/autoconf.h" function (:arguments (";")) nil [14810 14841])
            ("DEFAULT_EXTRA_TARGETS" variable (:default-value ("linux_module")) nil [14871 14906])
            ("DEFAULT_EXTRA_TARGETS" variable (:default-value ("kitten_module")) nil [14934 14970])
            ("DEFAULT_EXTRA_TARGETS" variable nil nil [14975 14998])
            ("DEFAULT_EXTRA_TARGETS" variable (:default-value ("user")) nil [15033 15063])
            ("all" function (:arguments ("palacios" "$(DEFAULT_EXTRA_TARGETS)")) nil [15297 15336])
            ("V3_CFLAGS" variable (:default-value ("-mcmodel=kernel")) nil [15360 15399])
            ("V3_CFLAGS" variable (:default-value ("-fPIC")) nil [15404 15432])
            ("V3_CFLAGS" variable (:default-value ("-fno-omit-frame-pointer" "$(call cc-option,-fno-optimize-sibling-calls,)")) nil [15469 15554])
            ("V3_CFLAGS" variable (:default-value ("-fomit-frame-pointer")) nil [15559 15594])
            ("V3_CFLAGS" variable (:default-value ("-fasynchronous-unwind-tables")) nil [15630 15673])
            ("V3_CFLAGS" variable (:default-value ("-g")) nil [15707 15724])
            ("$(srctree)/Makefile.$(ARCH)" include nil nil [15732 15768])
            ("NOSTDINC_FLAGS" variable nil nil [15846 15864])
            ("V3_CFLAGS" variable (:default-value ("$(call cc-option,-Wno-pointer-sign,)")) nil [15915 15965])
            ("palacios-dirs" variable (:default-value ("$(patsubst %/,%,$(filter %/,  \\
		     $(core-y) $(devices-y) $(interfaces-y) $(extensions-y) $(vnet-y) $(libs-y)) $(modules-y))")) nil [16404 16550])
            ("palacios-cleandirs" variable (:default-value ("$(sort $(palacios-dirs) $(patsubst %/,%,$(filter %/, \\
		     	$(core-n) $(core-) $(devices-n) $(devices-) \\
			$(interfaces-n) $(interfaces-) $(extensions-n) $(extensions-) $(vnet-n) $(vnet-) $(modules-n) $(modules-))))")) nil [16718 16961])
            ("core-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(core-y))")) nil [16964 17015])
            ("devices-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(devices-y))")) nil [17015 17071])
            ("interfaces-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(interfaces-y))")) nil [17071 17136])
            ("extensions-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(extensions-y))")) nil [17136 17201])
            ("libs-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(libs-y))")) nil [17201 17252])
            ("vnet-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(vnet-y))")) nil [17252 17311])
            ("modules-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(modules-y))")) nil [17311 17373])
            ("palacios" variable (:default-value ("$(core-y)" "$(devices-y)" "$(interfaces-y)" "$(extensions-y)" "$(vnet-y)" "$(libs-y)" "$(modules-y)")) nil [18035 18135])
            ("quiet_cmd_palacios_version" variable (:default-value ("GEN" ".version")) nil [18349 18395])
            ("libv3vee.a" function (:arguments ("$(palacios)")) nil [19096 19156])
            ("palacios" function (:arguments ("libv3vee.a")) nil [19157 19178])
            ("user/libv3vee_user.a" function (:arguments ("user/*.c" "user/*.h")) nil [19180 19238])
            ("user" function (:arguments ("user/libv3vee_user.a")) nil [19239 19266])
            ("linux_module/v3vee.ko" function (:arguments ("linux_module/*.c" "linux_module/*.h" "libv3vee.a")) nil [19268 19397])
            ("linux_module" function (:arguments ("linux_module/v3vee.ko")) nil [19399 19436])
            ("kitten_module/v3vee.ko" function (:arguments ("kitten_module/*.c" "kitten_module/*.h" "libv3vee.a")) nil [19438 19536])
            ("kitten_module" function (:arguments ("kitten_module/v3vee.ko")) nil [19537 19575])
            ("palacios.asm" function (:arguments ("palacios")) nil [19577 19634])
            ("$(sort  $(palacios))" function (:arguments ("$(palacios-dirs)" ";")) nil [19726 19768])
            ("PHONY" variable (:default-value ("$(palacios-dirs)")) nil [20054 20080])
            ("$(palacios-dirs)" function (:arguments ("prepare" "scripts")) nil [20080 20139])
            ("PHONY" variable (:default-value ("prepare" "archprepare" "prepare0" "prepare1" "prepare2" "prepare3")) nil [20489 20554])
            ("PHONY" variable (:default-value ("prepare-all")) nil [20617 20638])
            ("prepare3" function nil nil [20806 20817])
            ("prepare2" function (:arguments ("prepare3" "outputmakefile")) nil [21135 21169])
            ("prepare1" function (:arguments ("prepare2" "palacios/include/autoconf.h")) nil [21170 21217])
            ("archprepare" function (:arguments ("prepare1" "scripts_basic")) nil [21218 21254])
            ("prepare0" function (:arguments ("archprepare" "FORCE")) nil [21255 21307])
            ("prepare-all" function (:arguments ("prepare0")) nil [21330 21360])
            ("prepare" function (:arguments ("prepare0")) nil [21330 21360])
            ("PHONY" variable (:default-value ("depend" "dep")) nil [21710 21730])
            ("dep" function nil nil [21730 21792])
            ("depend" function nil nil [21730 21792])
            ("CLEAN_DIRS" variable (:default-value ("$(MODVERDIR)")) nil [22139 22167])
            ("CLEAN_FILES" variable (:default-value ("v3vee.asm" ".tmp_version" ".tmp_palacios*")) nil [22167 22240])
            ("MRPROPER_DIRS" variable (:default-value ("palacios/include/config")) nil [22292 22335])
            ("MRPROPER_FILES" variable (:default-value (".config" ".config.old" ".version" ".old_version" "palacios/include/autoconf.h" "tags" "TAGS" "cscope*")) nil [22335 22469])
            ("clean" function (:arguments ("rm-dirs" ":=" "$(CLEAN_DIRS)")) nil [22600 22633])
            ("clean" function (:arguments ("rm-files" ":=" "$(CLEAN_FILES)")) nil [22633 22667])
            ("clean-dirs" variable (:default-value ("$(addprefix _clean_,$(srctree) $(palacios-cleandirs))")) nil [22667 22740])
            ("PHONY" variable (:default-value ("$(clean-dirs)" "clean" "archclean")) nil [22741 22780])
            ("$(clean-dirs)" function nil nil [22780 22843])
            ("clean" function (:arguments ("archclean" "$(clean-dirs)")) nil [22845 23128])
            ("mrproper" function (:arguments ("rm-dirs" ":=" "$(wildcard $(MRPROPER_DIRS))")) nil [23190 23241])
            ("mrproper" function (:arguments ("rm-files" ":=" "$(wildcard $(MRPROPER_FILES))")) nil [23241 23293])
            ("mrproper-dirs" variable (:default-value ("$(addprefix _mrproper_, scripts)")) nil [23370 23425])
            ("PHONY" variable (:default-value ("$(mrproper-dirs)" "mrproper" "archmrproper")) nil [23426 23474])
            ("$(mrproper-dirs)" function nil nil [23474 23543])
            ("mrproper" function (:arguments ("clean" "archmrproper" "$(mrproper-dirs)")) nil [23544 23631])
            ("PHONY" variable (:default-value ("distclean")) nil [23646 23665])
            ("distclean" function (:arguments ("mrproper")) nil [23666 23954])
            ("package-dir" variable (:default-value ("$(srctree)/scripts/package")) nil [24124 24166])
            ("%pkg" function (:arguments ("FORCE")) nil [24167 24219])
            ("rpm" function (:arguments ("FORCE")) nil [24219 24270])
            ("help" function nil nil [24402 25989])
            ("%docs" function (:arguments ("scripts_basic" "FORCE")) nil [26093 26167])
            ("__srctree" variable nil nil [26529 26541])
            ("__srctree" variable (:default-value ("$(srctree)/")) nil [26546 26570])
            ("ALLINCLUDE_ARCHS" variable (:default-value ("$(ARCH)" "$(SUBARCH)")) nil [26622 26661])
            ("ALLINCLUDE_ARCHS" variable (:default-value ("$(ARCH)")) nil [26666 26694])
            ("ALLINCLUDE_ARCHS" variable (:default-value ("$(ALLSOURCE_ARCHS)")) nil [26798 26837])
            ("ALLSOURCE_ARCHS" variable (:default-value ("$(ARCH)")) nil [26844 26871])
            ("quiet_cmd_cscope-file" variable (:default-value ("FILELST" "cscope.files")) nil [27018 27063])
            ("quiet_cmd_cscope" variable (:default-value ("MAKE" "cscope.out")) nil [27140 27178])
            ("cscope" function (:arguments ("FORCE")) nil [27208 27267])
            ("quiet_cmd_TAGS" variable (:default-value ("MAKE" "$@")) nil [27268 27295])
            ("TAGS" function (:arguments ("FORCE")) nil [27669 27699])
            ("quiet_cmd_tags" variable (:default-value ("MAKE" "$@")) nil [27701 27728])
            ("tags" function (:arguments ("FORCE")) nil [28102 28132])
            ("build-dir" variable (:default-value ("$(patsubst %/,%,$(dir $@))")) nil [28678 28718])
            ("target-dir" variable (:default-value ("$(dir $@)")) nil [28718 28741])
            ("%.s" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [28743 28835])
            ("%.i" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [28835 28927])
            ("%.o" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [28927 29019])
            ("%.lst" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [29019 29113])
            ("%.s" function (:arguments ("%.S" "prepare" "scripts" "FORCE")) nil [29113 29205])
            ("%.o" function (:arguments ("%.S" "prepare" "scripts" "FORCE")) nil [29205 29297])
            ("%/" function (:arguments ("prepare" "scripts" "FORCE")) nil [29308 29416])
            ("%.ko" function (:arguments ("prepare" "scripts" "FORCE")) nil [29416 29596])
            ("quiet_cmd_rmdirs" variable (:default-value ("$(if $(wildcard $(rm-dirs)),CLEAN   $(wildcard $(rm-dirs)))")) nil [29724 29803])
            ("quiet_cmd_rmfiles" variable (:default-value ("$(if $(wildcard $(rm-files)),CLEAN   $(wildcard $(rm-files)))")) nil [29841 29923])
            ("a_flags" variable (:default-value ("-Wp,-MD,$(depfile)" "$(V3_AFLAGS)" "$(AFLAGS_KERNEL)" "$(NOSTDINC_FLAGS)" "$(V3_CPPFLAGS)" "$(modkern_aflags)" "$(EXTRA_AFLAGS)" "$(AFLAGS_$(*F).o)")) nil [29963 30117])
            ("quiet_cmd_as_o_S" variable (:default-value ("AS" "$@")) nil [30118 30148])
            ("cmd_as_o_S" variable (:default-value ("$(CC)" "$(a_flags)" "-c" "-o" "$@" "$<")) nil [30148 30196])
            ("targets" variable (:default-value ("$(wildcard $(sort $(targets)))")) nil [30229 30271])
            ("cmd_files" variable (:default-value ("$(wildcard .*.cmd $(foreach f,$(targets),$(dir $(f)).$(notdir $(f)).cmd))")) nil [30271 30358])
            ("clean" variable (:default-value ("-f" "$(if $(KBUILD_SRC),$(srctree)/)scripts/Makefile.clean" "obj")) nil [30576 30646])
            ("PHONY" variable (:default-value ("FORCE")) nil [30980 30995])
            ("FORCE" function nil nil [30995 31002]))          
      :file "Makefile~"
      :pointmax 31163
      :fsize 31162
      :lastmodtime '(24280 269)
      :unmatched-syntax '((semantic-list 31155 . 31162) (punctuation 31154 . 31155) (punctuation 31152 . 31153) (symbol 31146 . 31152) (bol 31146 . 31146) (ENDIF 30647 . 30652) (bol 30647 . 30647) (semantic-list 30459 . 30470) (punctuation 30458 . 30459) (INCLUDE 30450 . 30457) (bol 30448 . 30448) (punctuation 30397 . 30398) (punctuation 30395 . 30396) (semantic-list 30384 . 30395) (punctuation 30383 . 30384) (bol 30381 . 30381) (semantic-list 29950 . 29960) (punctuation 29949 . 29950) (symbol 29946 . 29948) (symbol 29943 . 29945) (punctuation 29941 . 29942) (symbol 29929 . 29940) (bol 29923 . 29923) (semantic-list 29830 . 29839) (punctuation 29829 . 29830) (symbol 29825 . 29828) (symbol 29822 . 29824) (punctuation 29820 . 29821) (symbol 29809 . 29819) (bol 29803 . 29803) (ENDIF 28297 . 28302) (bol 28297 . 28297) (ENDIF 28263 . 28268) (bol 28263 . 28263) (symbol 28095 . 28100) (bol 28095 . 28095) (shell-command 27745 . 28094) (bol 27744 . 27744) (symbol 27735 . 27743) (symbol 27728 . 27734) (bol 27728 . 27728) (symbol 27662 . 27667) (bol 27662 . 27662) (shell-command 27312 . 27661) (bol 27311 . 27311) (symbol 27302 . 27310) (symbol 27295 . 27301) (bol 27295 . 27295) (symbol 27204 . 27206) (symbol 27197 . 27203) (punctuation 27195 . 27196) (symbol 27184 . 27194) (bol 27178 . 27178) (symbol 27126 . 27138) (symbol 27124 . 27125) (semantic-list 27087 . 27123) (punctuation 27085 . 27086) (symbol 27069 . 27084) (bol 27063 . 27063) (symbol 27011 . 27016) (bol 27011 . 27011) (shell-command 26892 . 27010) (bol 26891 . 26891) (symbol 26879 . 26890) (symbol 26872 . 26878) (bol 26872 . 26872) (shell-command 20890 . 21060) (bol 20889 . 20889) (shell-command 20841 . 20888) (bol 20840 . 20840) (symbol 19036 . 19041) (bol 19036 . 19036) (shell-command 18976 . 19033) (bol 18975 . 18975) (shell-command 18952 . 18974) (bol 18951 . 18951) (shell-command 18949 . 18950) (bol 18948 . 18948) (symbol 18932 . 18947) (symbol 18925 . 18931) (bol 18925 . 18925) (punctuation 18634 . 18635) (symbol 18632 . 18634) (punctuation 18627 . 18628) (symbol 18618 . 18627) (symbol 18616 . 18617) (punctuation 18614 . 18615) (semantic-list 18595 . 18613) (punctuation 18594 . 18595) (punctuation 18593 . 18594) (symbol 18592 . 18593) (symbol 18587 . 18591) (punctuation 18578 . 18579) (symbol 18566 . 18578) (symbol 18557 . 18565) (symbol 18554 . 18556) (ELSE 18539 . 18543) (punctuation 18531 . 18532) (symbol 18522 . 18531) (symbol 18520 . 18521) (symbol 18515 . 18519) (punctuation 18505 . 18506) (symbol 18497 . 18505) (symbol 18494 . 18496) (symbol 18491 . 18493) (symbol 18479 . 18483) (punctuation 18477 . 18478) (semantic-list 18460 . 18477) (IF 18457 . 18459) (punctuation 18430 . 18431) (symbol 18428 . 18430) (symbol 18424 . 18427) (punctuation 18422 . 18423) (symbol 18401 . 18421) (bol 18395 . 18395) (punctuation 18312 . 18313) (punctuation 18311 . 18312) (punctuation 18309 . 18310) (punctuation 18308 . 18309) (symbol 18304 . 18307) (semantic-list 18299 . 18303) (punctuation 18298 . 18299) (punctuation 18296 . 18297) (punctuation 18295 . 18296) (symbol 18280 . 18294) (bol 18274 . 18274) (punctuation 18271 . 18272) (punctuation 18270 . 18271) (symbol 18267 . 18269) (punctuation 18265 . 18266) (punctuation 18264 . 18265) (symbol 18243 . 18263) (bol 18243 . 18243) (symbol 16392 . 16398) (punctuation 16390 . 16391) (punctuation 16389 . 16390) (symbol 16376 . 16388) (symbol 16369 . 16375) (bol 16369 . 16369) (symbol 16220 . 16228) (punctuation 16218 . 16219) (punctuation 16217 . 16218) (symbol 16204 . 16216) (symbol 16197 . 16203) (bol 16197 . 16197) (symbol 14085 . 14095) (symbol 14076 . 14084) (bol 14076 . 14076) (symbol 12834 . 12850) (symbol 12827 . 12833) (bol 12827 . 12827) (ENDIF 12135 . 12140) (bol 12127 . 12127) (ENDIF 12121 . 12126) (bol 12105 . 12105) (symbol 12103 . 12104) (punctuation 12101 . 12102) (punctuation 12100 . 12101) (symbol 12086 . 12099) (bol 12062 . 12062) (semantic-list 12021 . 12061) (IFNEQ 12015 . 12020) (bol 11999 . 11999) (symbol 11997 . 11998) (punctuation 11995 . 11996) (punctuation 11994 . 11995) (symbol 11979 . 11993) (bol 11963 . 11963) (semantic-list 11926 . 11962) (IFNEQ 11920 . 11925) (bol 11912 . 11912) (shell-command 11874 . 11879) (bol 11873 . 11873) (shell-command 11856 . 11872) (bol 11855 . 11855) (shell-command 11791 . 11854) (bol 11790 . 11790) (shell-command 11032 . 11135) (bol 11031 . 11031) (symbol 9900 . 9913) (symbol 9890 . 9899) (symbol 9883 . 9889) (bol 9883 . 9883) (symbol 9868 . 9881) (symbol 9858 . 9867) (symbol 9851 . 9857) (bol 9851 . 9851) (symbol 9840 . 9850) (symbol 9827 . 9839) (symbol 9816 . 9826) (symbol 9801 . 9815) (symbol 9789 . 9800) (symbol 9782 . 9788) (bol 9782 . 9782) (symbol 9775 . 9780) (symbol 9762 . 9774) (symbol 9754 . 9761) (symbol 9739 . 9750) (symbol 9734 . 9738) (symbol 9725 . 9733) (symbol 9721 . 9724) (symbol 9716 . 9720) (symbol 9708 . 9715) (symbol 9700 . 9707) (symbol 9694 . 9699) (symbol 9691 . 9693) (symbol 9688 . 9690) (symbol 9684 . 9687) (symbol 9678 . 9680) (symbol 9675 . 9677) (symbol 9672 . 9674) (symbol 9658 . 9671) (symbol 9647 . 9657) (symbol 9640 . 9646) (symbol 9627 . 9639) (symbol 9622 . 9626) (symbol 9605 . 9618) (symbol 9591 . 9604) (symbol 9582 . 9590) (symbol 9571 . 9581) (symbol 9563 . 9570) (symbol 9556 . 9562) (bol 9556 . 9556) (symbol 7860 . 7874) (symbol 7858 . 7859) (symbol 7852 . 7857) (symbol 7845 . 7851) (bol 7845 . 7845) (symbol 7830 . 7837) (punctuation 7829 . 7830) (symbol 7824 . 7829) (bol 7822 . 7822) (punctuation 7695 . 7696) (punctuation 7693 . 7694) (symbol 7691 . 7692) (bol 7689 . 7689) (symbol 7682 . 7688) (punctuation 7681 . 7682) (symbol 7676 . 7681) (bol 7674 . 7674) (punctuation 7667 . 7668) (symbol 7665 . 7666) (bol 7663 . 7663) (punctuation 7661 . 7662) (symbol 7655 . 7660) (bol 7653 . 7653) (symbol 6682 . 6695) (symbol 6671 . 6681) (symbol 6655 . 6670) (symbol 6648 . 6654) (bol 6648 . 6648) (symbol 6633 . 6647) (symbol 6618 . 6632) (symbol 6611 . 6617) (bol 6611 . 6611) (symbol 6602 . 6603) (punctuation 6600 . 6601) (punctuation 6599 . 6600) (symbol 6584 . 6598) (bol 6582 . 6582) (symbol 6549 . 6550) (punctuation 6547 . 6548) (punctuation 6546 . 6547) (symbol 6531 . 6545) (bol 6529 . 6529) (semantic-list 6288 . 6316) (punctuation 6287 . 6288) (punctuation 6285 . 6286) (punctuation 6284 . 6285) (symbol 6269 . 6283) (bol 6267 . 6267) (punctuation 5452 . 5453) (punctuation 5451 . 5452) (symbol 5437 . 5450) (bol 5437 . 5437) (semantic-list 5427 . 5436) (punctuation 5426 . 5427) (punctuation 5424 . 5425) (punctuation 5423 . 5424) (symbol 5417 . 5421) (bol 5417 . 5417) (symbol 4112 . 4118) (symbol 4106 . 4111) (symbol 4098 . 4105) (symbol 4090 . 4097) (symbol 4083 . 4089) (bol 4083 . 4083) (ENDIF 3566 . 3571) (bol 3566 . 3566) (ENDIF 3532 . 3537) (bol 3532 . 3532) (semantic-list 3165 . 3254) (punctuation 3164 . 3165) (bol 3164 . 3164) (ENDIF 2821 . 2826) (bol 2819 . 2819) (semantic-list 2815 . 2818) (punctuation 2814 . 2815) (punctuation 2812 . 2813) (punctuation 2811 . 2812) (symbol 2797 . 2810) (bol 2793 . 2793) (semantic-list 2761 . 2792) (IFEQ 2756 . 2760) (bol 2754 . 2754) (ENDIF 1915 . 1920) (bol 1913 . 1913) (semantic-list 1909 . 1912) (punctuation 1908 . 1909) (punctuation 1906 . 1907) (punctuation 1905 . 1906) (symbol 1891 . 1904) (bol 1887 . 1887) (semantic-list 1855 . 1886) (IFEQ 1850 . 1854) (bol 1848 . 1848) (semantic-list 1824 . 1833) (punctuation 1823 . 1824) (punctuation 1821 . 1822) (punctuation 1820 . 1821) (symbol 1806 . 1819) (bol 1804 . 1804) (symbol 1596 . 1597) (punctuation 1594 . 1595) (symbol 1578 . 1593) (bol 1576 . 1576) (ENDIF 1541 . 1546) (bol 1539 . 1539) (semantic-list 1535 . 1538) (punctuation 1534 . 1535) (punctuation 1532 . 1533) (symbol 1516 . 1531) (bol 1512 . 1512) (semantic-list 1480 . 1511) (IFEQ 1475 . 1479) (bol 1473 . 1473) (symbol 1364 . 1365) (punctuation 1362 . 1363) (symbol 1347 . 1361) (bol 1345 . 1345) (ENDIF 1311 . 1316) (bol 1309 . 1309) (semantic-list 1305 . 1308) (punctuation 1304 . 1305) (punctuation 1302 . 1303) (symbol 1287 . 1301) (bol 1283 . 1283) (semantic-list 1251 . 1282) (IFEQ 1246 . 1250) (bol 1244 . 1244))))
  :file "!ssh:nmg@trappist:!home!nmg!lev-native!palacios!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
