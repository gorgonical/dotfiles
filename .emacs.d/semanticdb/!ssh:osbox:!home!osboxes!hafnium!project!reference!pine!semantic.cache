;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("hf/io.h" include nil nil [1 19])
            ("hf/mm.h" include nil nil [20 38])
            ("hf/mpool.h" include nil nil [39 60])
            ("hf/plat/console.h" include nil nil [61 89])
            ("UART_RBR" variable (:constant-flag t) nil [157 165])
            ("UART_THR" variable (:constant-flag t) nil [199 207])
            ("UART_DLL" variable (:constant-flag t) nil [241 249])
            ("UART_IER" variable (:constant-flag t) nil [283 291])
            ("UART_DLM" variable (:constant-flag t) nil [325 333])
            ("UART_FCR" variable (:constant-flag t) nil [367 375])
            ("UART_LCR" variable (:constant-flag t) nil [409 417])
            ("UART_MCR" variable (:constant-flag t) nil [451 459])
            ("UART_LSR" variable (:constant-flag t) nil [493 501])
            ("UART_MSR" variable (:constant-flag t) nil [535 543])
            ("UART_SCR" variable (:constant-flag t) nil [577 585])
            ("plat_console_init" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [657 662]))                  
                :type "void")
                nil [634 666])
            ("plat_console_mm_init" function
               (:arguments 
                  ( ("stage1_locked" variable (:type ("mm_stage1_locked" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) [694 732])
                    ("ppool" variable
                       (:pointer 1
                        :type ("mpool" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [738 758]))                  
                :type "void")
                nil [668 943])
            ("plat_console_putchar" function
               (:arguments 
                  ( ("c" variable (:type "char") (reparse-symbol arg-sub-list) [971 978]))                  
                :type "void")
                nil [945 1303])
            ("plat_console_getchar" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1331 1336]))                  
                :type "char")
                nil [1305 1534]))          
      :file "uart.c"
      :pointmax 1536
      :fsize 1535
      :lastmodtime '(24849 56771)
      :unmatched-syntax nil
      :lexical-table 
        '(("UART_THR" . ((symbol "IO32_C" 208 . 214) (semantic-list "(UART_BASE + 0x00)" 214 . 232)))
          ("UART_MCR" . ((symbol "IO32_C" 460 . 466) (semantic-list "(UART_BASE + 0x10)" 466 . 484)))
          ("UART_LSR" . ((symbol "IO32_C" 502 . 508) (semantic-list "(UART_BASE + 0x14)" 508 . 526)))
          ("UART_FCR" . ((symbol "IO32_C" 376 . 382) (semantic-list "(UART_BASE + 0x08)" 382 . 400)))
          ("UART_SCR" . ((symbol "IO32_C" 586 . 592) (semantic-list "(UART_BASE + 0x1C)" 592 . 610)))
          ("UART_RBR" . ((symbol "IO32_C" 166 . 172) (semantic-list "(UART_BASE + 0x00)" 172 . 190)))
          ("UART_LCR" . ((symbol "IO32_C" 418 . 424) (semantic-list "(UART_BASE + 0x0C)" 424 . 442)))
          ("UART_DLL" . ((symbol "IO32_C" 250 . 256) (semantic-list "(UART_BASE + 0x00)" 256 . 274)))
          ("UART_DLM" . ((symbol "IO32_C" 334 . 340) (semantic-list "(UART_BASE + 0x04)" 340 . 358)))
          ("UART_IER" . ((symbol "IO32_C" 292 . 298) (semantic-list "(UART_BASE + 0x04)" 298 . 316)))
          ("UART_MSR" . ((symbol "IO32_C" 544 . 550) (semantic-list "(UART_BASE + 0x18)" 550 . 568)))
          )
))
  :file "!ssh:osbox:!home!osboxes!hafnium!project!reference!pine!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
