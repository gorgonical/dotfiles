;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("sys/types.h" include (:system-flag t) nil [1685 1707])
            ("sys/syscall.h" include (:system-flag t) nil [1708 1732])
            ("unistd.h" include (:system-flag t) nil [1733 1752])
            ("__fork" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1765 1770]))                  
                :type "int")
                nil [1754 1771])
            ("NULL" variable (:type "int") nil [1800 1805])
            ("NULL" variable (:type "int") nil [1832 1837])
            ("NULL" variable (:type "int") nil [1863 1868])
            ("__fork" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1881 1886]))                  
                :type "int")
                nil [1870 2070])
            ("__weak_reference" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("__fork" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2088 2095])
                    ("" variable (:type ("fork" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2096 2101]))                  
                :type "int")
                nil [2071 2102]))          
      :file "fork.c"
      :pointmax 2103
      :fsize 2102
      :lastmodtime '(24114 2741 169475 81000)
      :unmatched-syntax '((punctuation 1861 . 1862) (semantic-list 1854 . 1860) (semantic-list 1843 . 1854) (VOID 1838 . 1842) (punctuation 1830 . 1831) (semantic-list 1823 . 1829) (semantic-list 1811 . 1823) (VOID 1806 . 1810) (punctuation 1798 . 1799) (semantic-list 1791 . 1797) (semantic-list 1778 . 1791) (VOID 1773 . 1777))))
  :file "!home!nmg!Code!C!dragonflybsd!lib!libc!sys!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
