;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("stdnoreturn.h" include (:system-flag t) nil [607 631])
            ("hf/arch/barriers.h" include nil nil [633 662])
            ("hf/arch/init.h" include nil nil [663 688])
            ("hf/arch/mm.h" include nil nil [689 712])
            ("hf/arch/plat/smc.h" include nil nil [713 742])
            ("hf/api.h" include nil nil [744 763])
            ("hf/check.h" include nil nil [764 785])
            ("hf/cpu.h" include nil nil [786 805])
            ("hf/dlog.h" include nil nil [806 826])
            ("hf/ffa.h" include nil nil [827 846])
            ("hf/panic.h" include nil nil [847 868])
            ("hf/vm.h" include nil nil [869 887])
            ("vmapi/hf/call.h" include nil nil [889 915])
            ("debug_el1.h" include nil nil [917 939])
            ("feature_id.h" include nil nil [940 963])
            ("msr.h" include nil nil [964 980])
            ("perfmon.h" include nil nil [981 1001])
            ("psci.h" include nil nil [1002 1019])
            ("psci_handler.h" include nil nil [1020 1045])
            ("smc.h" include nil nil [1046 1062])
            ("sysregs.h" include nil nil [1063 1083])
            ("GET_NEXT_PC_INC" variable (:constant-flag t) nil [1220 1235])
            ("CLIENT_ID_MASK" variable (:constant-flag t) nil [1336 1350])
            ("current" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1461 1466]))                  
                :type ("vcpu" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [1433 1514])
            ("complete_saving_state" function
               (:arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1699 1717]))                  
                :type "void")
                nil [1672 2564])
            ("begin_restoring_state" function
               (:arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2675 2693]))                  
                :type "void")
                nil [2648 3396])
            ("invalidate_vm_tlb" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3529 3534]))                  
                :type "void")
                nil [3499 4023])
            ("maybe_invalidate_tlb" function
               (:arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4444 4462]))                  
                :type "void")
                nil [4418 4946])
            ("irq_current_exception_noreturn" function
               (:arguments 
                  ( ("elr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4993 5007])
                    ("spsr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5008 5023]))                  
                :type "void")
                nil [4957 5098])
            ("fiq_current_exception_noreturn" function
               (:arguments 
                  ( ("elr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5145 5159])
                    ("spsr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5160 5175]))                  
                :type "void")
                nil [5109 5250])
            ("serr_current_exception_noreturn" function
               (:arguments 
                  ( ("elr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5298 5312])
                    ("spsr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5313 5328]))                  
                :type "void")
                nil [5261 5406])
            ("sync_current_exception_noreturn" function
               (:arguments 
                  ( ("elr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5454 5468])
                    ("spsr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5469 5484]))                  
                :type "void")
                nil [5417 6054])
            ("set_virtual_interrupt" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("r" variable
                       (:pointer 1
                        :type ("arch_regs" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6184 6204])
                    ("enable" variable (:type "bool") (reparse-symbol arg-sub-list) [6205 6217]))                  
                :type "void")
                nil [6150 6316])
            ("set_virtual_interrupt_current" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("enable" variable (:type "bool") (reparse-symbol arg-sub-list) [6422 6434]))                  
                :type "void")
                nil [6380 6588])
            ("smc_is_blocked" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vm" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("vm" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6686 6706])
                    ("func" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6707 6721]))                  
                :type "bool")
                nil [6659 7089])
            ("smc_forwarder" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vm" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("vm" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7224 7244])
                    ("args" variable
                       (:pointer 1
                        :type ("ffa_value" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [7245 7268]))                  
                :type "void")
                nil [7198 8155])
            ("ffa_handler" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("args" variable
                       (:pointer 1
                        :type ("ffa_value" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [8181 8204])
                    ("next" variable
                       (:pointer 2
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [8205 8224]))                  
                :type "bool")
                nil [8157 10496])
            ("update_vi" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("next" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [10584 10602]))                  
                :type "void")
                nil [10562 11183])
            ("smc_handler" function
               (:pointer 1
                :typemodifiers ("static")
                :arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [11261 11279]))                  
                :type ("vcpu" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [11229 12019])
            ("OFFSET_CURRENT_SPX" variable (:constant-flag t) nil [12194 12212])
            ("OFFSET_LOWER_EL_64" variable (:constant-flag t) nil [12310 12328])
            ("OFFSET_LOWER_EL_32" variable (:constant-flag t) nil [12426 12444])
            ("get_el1_exception_handler_addr" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [12575 12599]))                  
                :type ("uintreg_t" type (:type "class") nil nil))
                nil [12527 12989])
            ("inject_el1_exception" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [13345 13363])
                    ("esr_el1_value" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13364 13388]))                  
                :type "void")
                nil [13312 14093])
            ("inject_el1_data_abort_exception" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [14205 14223])
                    ("esr_el2" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14233 14251]))                  
                :type "void")
                nil [14161 14689])
            ("inject_el1_instruction_abort_exception" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [14808 14826])
                    ("esr_el2" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14836 14854]))                  
                :type "void")
                nil [14757 15304])
            ("inject_el1_unknown_exception" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [15416 15434])
                    ("esr_el2" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15435 15453]))                  
                :type "void")
                nil [15375 16015])
            ("hvc_handler" function
               (:pointer 1
                :arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [16042 16060]))                  
                :type ("vcpu" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [16017 17450])
            ("irq_lower" function
               (:pointer 1
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [17475 17480]))                  
                :type ("vcpu" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [17452 17832])
            ("fiq_lower" function
               (:pointer 1
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [17857 17862]))                  
                :type ("vcpu" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [17834 17887])
            ("serr_lower" function
               (:pointer 1
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [17922 17927]))                  
                :type ("vcpu" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [17898 18266])
            ("fault_info_init" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("esr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18633 18647])
                    ("vcpu" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [18659 18683])
                    ("mode" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18695 18709]))                  
                :type ("vcpu_fault_info" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [18587 19220])
            ("sync_lower_exception" function
               (:pointer 1
                :arguments 
                  ( ("esr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19256 19270]))                  
                :type ("vcpu" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [19222 21226])
            ("handle_system_register_access" function
               (:arguments 
                  ( ("esr_el2" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21395 21413]))                  
                :type "void")
                nil [21360 22360]))          
      :file "handler.c"
      :pointmax 22361
      :fsize 22360
      :lastmodtime '(24807 46999)
      :unmatched-syntax '((symbol 17889 . 17897) (symbol 5408 . 5416) (symbol 5252 . 5260) (symbol 5100 . 5108) (symbol 4948 . 4956))
      :lexical-table 
        '(("OFFSET_LOWER_EL_32" . ((symbol "UINT64_C" 12445 . 12453) (semantic-list "(0x600)" 12453 . 12460)))
          ("GET_NEXT_PC_INC" (spp-arg-list ("esr") 1235 . 1240) . ((semantic-list "(GET_ESR_IL(esr) ? 4 : 2)" 1241 . 1266)))
          ("CLIENT_ID_MASK" . ((symbol "UINT64_C" 1351 . 1359) (semantic-list "(0xffff)" 1359 . 1367)))
          ("OFFSET_CURRENT_SPX" . ((symbol "UINT64_C" 12213 . 12221) (semantic-list "(0x200)" 12221 . 12228)))
          ("OFFSET_LOWER_EL_64" . ((symbol "UINT64_C" 12329 . 12337) (semantic-list "(0x400)" 12337 . 12344)))
          )
)
    (semanticdb-table "semanticdb-table"
      :file "debug_el1.h"
      :fsize 848
      :lastmodtime '(24807 46999))
    (semanticdb-table "semanticdb-table"
      :file "feature_id.h"
      :fsize 1660
      :lastmodtime '(24807 46999))
    (semanticdb-table "semanticdb-table"
      :file "perfmon.h"
      :fsize 1824
      :lastmodtime '(24807 46999))
    (semanticdb-table "semanticdb-table"
      :file "psci_handler.h"
      :fsize 835
      :lastmodtime '(24807 46999))
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("debug_el1.h" include nil nil [607 629])
            ("hf/check.h" include nil nil [631 652])
            ("hf/dlog.h" include nil nil [653 673])
            ("hf/types.h" include nil nil [674 695])
            ("msr.h" include nil nil [697 713])
            ("sysregs.h" include nil nil [714 734])
            ("EL1_DEBUG_REGISTERS_READ" variable (:constant-flag t) nil [922 946])
            ("EL1_DEBUG_REGISTERS_WRITE" variable (:constant-flag t) nil [1234 1259])
            ("EL1_DEBUG_REGISTERS_READ_WRITE" variable (:constant-flag t) nil [1481 1511])
            ("debug_el1_is_register_access" function
               (:arguments 
                  ( ("esr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4617 4631]))                  
                :type "bool")
                nil [4583 4836])
            ("debug_el1_process_access" function
               (:arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5010 5028])
                    ("vm_id" variable (:type ("ffa_vm_id_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5029 5047])
                    ("esr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5057 5071]))                  
                :type "bool")
                nil [4980 6801]))          
      :file "debug_el1.c"
      :pointmax 6802
      :fsize 6801
      :lastmodtime '(24816 36400)
      :unmatched-syntax nil
      :lexical-table 
        '(("EL1_DEBUG_REGISTERS_READ_WRITE" . 
              ((symbol "X" 1522 . 1523) (semantic-list "(OSDTRRX_EL1	    , 2, 0, 0,  0, 2)" 1523 . 1557) (symbol "X" 1561 . 1562) (semantic-list "(MDCCINT_EL1	    , 2, 0, 0,  2, 0)" 1562 . 1596) (symbol "X" 1600 . 1601) (semantic-list "(MDSCR_EL1	    , 2, 0, 0,  2, 2)" 1601 . 1633) (symbol "X" 1637 . 1638) (semantic-list "(OSDTRTX_EL1	    , 2, 0, 0,  3, 2)" 1638 . 1672) (symbol "X" 1676 . 1677) (semantic-list "(OSECCR_EL1	    , 2, 0, 0,  6, 2)" 1677 . 1710) (symbol "X" 1714 . 1715) (semantic-list "(DBGBVR0_EL1	    , 2, 0, 0,  0, 4)" 1715 . 1749) (symbol "X" 1753 . 1754) (semantic-list "(DBGBVR1_EL1	    , 2, 0, 0,  1, 4)" 1754 . 1788) (symbol "X" 1792 . 1793) (semantic-list "(DBGBVR2_EL1	    , 2, 0, 0,  2, 4)" 1793 . 1827) (symbol "X" 1831 . 1832) (semantic-list "(DBGBVR3_EL1	    , 2, 0, 0,  3, 4)" 1832 . 1866) (symbol "X" 1870 . 1871) (semantic-list "(DBGBVR4_EL1	    , 2, 0, 0,  4, 4)" 1871 . 1905) (symbol "X" 1909 . 1910) (semantic-list "(DBGBVR5_EL1	    , 2, 0, 0,  5, 4)" 1910 . 1944) (symbol "X" 1948 . 1949) (semantic-list "(DBGBVR6_EL1	    , 2, 0, 0,  6, 4)" 1949 . 1983) (symbol "X" 1987 . 1988) (semantic-list "(DBGBVR7_EL1	    , 2, 0, 0,  7, 4)" 1988 . 2022) (symbol "X" 2026 . 2027) (semantic-list "(DBGBVR8_EL1	    , 2, 0, 0,  8, 4)" 2027 . 2061) (symbol "X" 2065 . 2066) (semantic-list "(DBGBVR9_EL1	    , 2, 0, 0,  9, 4)" 2066 . 2100) (symbol "X" 2104 . 2105) (semantic-list "(DBGBVR10_EL1	    , 2, 0, 0, 10, 4)" 2105 . 2140) (symbol "X" 2144 . 2145) (semantic-list "(DBGBVR11_EL1	    , 2, 0, 0, 11, 4)" 2145 . 2180) (symbol "X" 2184 . 2185) (semantic-list "(DBGBVR12_EL1	    , 2, 0, 0, 12, 4)" 2185 . 2220) (symbol "X" 2224 . 2225) (semantic-list "(DBGBVR13_EL1	    , 2, 0, 0, 13, 4)" 2225 . 2260) (symbol "X" 2264 . 2265) (semantic-list "(DBGBVR14_EL1	    , 2, 0, 0, 14, 4)" 2265 . 2300) (symbol "X" 2304 . 2305) (semantic-list "(DBGBVR15_EL1	    , 2, 0, 0, 15, 4)" 2305 . 2340) (symbol "X" 2344 . 2345) (semantic-list "(DBGBCR0_EL1       , 2, 0, 0,  0, 5)" 2345 . 2381) (symbol "X" 2385 . 2386) (semantic-list "(DBGBCR1_EL1       , 2, 0, 0,  1, 5)" 2386 . 2422) (symbol "X" 2426 . 2427) (semantic-list "(DBGBCR2_EL1       , 2, 0, 0,  2, 5)" 2427 . 2463) (symbol "X" 2467 . 2468) (semantic-list "(DBGBCR3_EL1       , 2, 0, 0,  3, 5)" 2468 . 2504) (symbol "X" 2508 . 2509) (semantic-list "(DBGBCR4_EL1       , 2, 0, 0,  4, 5)" 2509 . 2545) (symbol "X" 2549 . 2550) (semantic-list "(DBGBCR5_EL1       , 2, 0, 0,  5, 5)" 2550 . 2586) (symbol "X" 2590 . 2591) (semantic-list "(DBGBCR6_EL1       , 2, 0, 0,  6, 5)" 2591 . 2627) (symbol "X" 2631 . 2632) (semantic-list "(DBGBCR7_EL1       , 2, 0, 0,  7, 5)" 2632 . 2668) (symbol "X" 2672 . 2673) (semantic-list "(DBGBCR8_EL1       , 2, 0, 0,  8, 5)" 2673 . 2709) (symbol "X" 2713 . 2714) (semantic-list "(DBGBCR9_EL1       , 2, 0, 0,  9, 5)" 2714 . 2750) (symbol "X" 2754 . 2755) (semantic-list "(DBGBCR10_EL1      , 2, 0, 0, 10, 5)" 2755 . 2791) (symbol "X" 2795 . 2796) (semantic-list "(DBGBCR11_EL1      , 2, 0, 0, 11, 5)" 2796 . 2832) (symbol "X" 2836 . 2837) (semantic-list "(DBGBCR12_EL1      , 2, 0, 0, 12, 5)" 2837 . 2873) (symbol "X" 2877 . 2878) (semantic-list "(DBGBCR13_EL1      , 2, 0, 0, 13, 5)" 2878 . 2914) (symbol "X" 2918 . 2919) (semantic-list "(DBGBCR14_EL1      , 2, 0, 0, 14, 5)" 2919 . 2955) (symbol "X" 2959 . 2960) (semantic-list "(DBGBCR15_EL1      , 2, 0, 0, 15, 5)" 2960 . 2996) (symbol "X" 3000 . 3001) (semantic-list "(DBGWVR0_EL1       , 2, 0, 0,  0, 6)" 3001 . 3037) (symbol "X" 3041 . 3042) (semantic-list "(DBGWVR1_EL1       , 2, 0, 0,  1, 6)" 3042 . 3078) (symbol "X" 3082 . 3083) (semantic-list "(DBGWVR2_EL1       , 2, 0, 0,  2, 6)" 3083 . 3119) (symbol "X" 3123 . 3124) (semantic-list "(DBGWVR3_EL1       , 2, 0, 0,  3, 6)" 3124 . 3160) (symbol "X" 3164 . 3165) (semantic-list "(DBGWVR4_EL1       , 2, 0, 0,  4, 6)" 3165 . 3201) (symbol "X" 3205 . 3206) (semantic-list "(DBGWVR5_EL1       , 2, 0, 0,  5, 6)" 3206 . 3242) (symbol "X" 3246 . 3247) (semantic-list "(DBGWVR6_EL1       , 2, 0, 0,  6, 6)" 3247 . 3283) (symbol "X" 3287 . 3288) (semantic-list "(DBGWVR7_EL1       , 2, 0, 0,  7, 6)" 3288 . 3324) (symbol "X" 3328 . 3329) (semantic-list "(DBGWVR8_EL1       , 2, 0, 0,  8, 6)" 3329 . 3365) (symbol "X" 3369 . 3370) (semantic-list "(DBGWVR9_EL1       , 2, 0, 0,  9, 6)" 3370 . 3406) (symbol "X" 3410 . 3411) (semantic-list "(DBGWVR10_EL1      , 2, 0, 0, 10, 6)" 3411 . 3447) (symbol "X" 3451 . 3452) (semantic-list "(DBGWVR11_EL1      , 2, 0, 0, 11, 6)" 3452 . 3488) (symbol "X" 3492 . 3493) (semantic-list "(DBGWVR12_EL1      , 2, 0, 0, 12, 6)" 3493 . 3529) (symbol "X" 3533 . 3534) (semantic-list "(DBGWVR13_EL1      , 2, 0, 0, 13, 6)" 3534 . 3570) (symbol "X" 3574 . 3575) (semantic-list "(DBGWVR14_EL1      , 2, 0, 0, 14, 6)" 3575 . 3611) (symbol "X" 3615 . 3616) (semantic-list "(DBGWVR15_EL1      , 2, 0, 0, 15, 6)" 3616 . 3652) (symbol "X" 3656 . 3657) (semantic-list "(DBGWCR0_EL1       , 2, 0, 0,  0, 7)" 3657 . 3693) (symbol "X" 3697 . 3698) (semantic-list "(DBGWCR1_EL1       , 2, 0, 0,  1, 7)" 3698 . 3734) (symbol "X" 3738 . 3739) (semantic-list "(DBGWCR2_EL1       , 2, 0, 0,  2, 7)" 3739 . 3775) (symbol "X" 3779 . 3780) (semantic-list "(DBGWCR3_EL1       , 2, 0, 0,  3, 7)" 3780 . 3816) (symbol "X" 3820 . 3821) (semantic-list "(DBGWCR4_EL1       , 2, 0, 0,  4, 7)" 3821 . 3857) (symbol "X" 3861 . 3862) (semantic-list "(DBGWCR5_EL1       , 2, 0, 0,  5, 7)" 3862 . 3898) (symbol "X" 3902 . 3903) (semantic-list "(DBGWCR6_EL1       , 2, 0, 0,  6, 7)" 3903 . 3939) (symbol "X" 3943 . 3944) (semantic-list "(DBGWCR7_EL1       , 2, 0, 0,  7, 7)" 3944 . 3980) (symbol "X" 3984 . 3985) (semantic-list "(DBGWCR8_EL1       , 2, 0, 0,  8, 7)" 3985 . 4021) (symbol "X" 4025 . 4026) (semantic-list "(DBGWCR9_EL1       , 2, 0, 0,  9, 7)" 4026 . 4062) (symbol "X" 4066 . 4067) (semantic-list "(DBGWCR10_EL1      , 2, 0, 0, 10, 7)" 4067 . 4103) (symbol "X" 4107 . 4108) (semantic-list "(DBGWCR11_EL1      , 2, 0, 0, 11, 7)" 4108 . 4144) (symbol "X" 4148 . 4149) (semantic-list "(DBGWCR12_EL1      , 2, 0, 0, 12, 7)" 4149 . 4185) (symbol "X" 4189 . 4190) (semantic-list "(DBGWCR13_EL1      , 2, 0, 0, 13, 7)" 4190 . 4226) (symbol "X" 4230 . 4231) (semantic-list "(DBGWCR14_EL1      , 2, 0, 0, 14, 7)" 4231 . 4267) (symbol "X" 4271 . 4272) (semantic-list "(DBGWCR15_EL1      , 2, 0, 0, 15, 7)" 4272 . 4308) (symbol "X" 4312 . 4313) (semantic-list "(OSDLR_EL1         , 2, 0, 1,  3, 4)" 4313 . 4349) (symbol "X" 4353 . 4354) (semantic-list "(DBGPRCR_EL1       , 2, 0, 1,  4, 4)" 4354 . 4390) (symbol "X" 4394 . 4395) (semantic-list "(DBGCLAIMSET_EL1   , 2, 0, 7,  8, 6)" 4395 . 4431) (symbol "X" 4435 . 4436) (semantic-list "(DBGCLAIMCLR_EL1   , 2, 0, 7,  9, 6)" 4436 . 4472)))
          ("EL1_DEBUG_REGISTERS_READ" . 
              ((symbol "X" 956 . 957) (semantic-list "(MDRAR_EL1	    , 2, 0, 1,  0, 0)" 957 . 989) (symbol "X" 993 . 994) (semantic-list "(OSLSR_EL1	    , 2, 0, 1,  1, 4)" 994 . 1026) (symbol "X" 1030 . 1031) (semantic-list "(DBGAUTHSTATUS_EL1 , 2, 0, 7, 14, 6)" 1031 . 1067)))
          ("EL1_DEBUG_REGISTERS_WRITE" . ((symbol "X" 1269 . 1270) (semantic-list "(OSLAR_EL1	    , 2, 0, 1,  0, 4)" 1270 . 1302)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("perfmon.h" include nil nil [607 627])
            ("hf/check.h" include nil nil [629 650])
            ("hf/dlog.h" include nil nil [651 671])
            ("hf/types.h" include nil nil [672 693])
            ("msr.h" include nil nil [695 711])
            ("sysregs.h" include nil nil [712 732])
            ("PERFMON_REGISTERS_READ" variable (:constant-flag t) nil [936 958])
            ("PERFMON_REGISTERS_WRITE" variable (:constant-flag t) nil [2543 2566])
            ("PERFMON_REGISTERS_READ_WRITE" variable (:constant-flag t) nil [2818 2846])
            ("perfmon_is_register_access" function
               (:arguments 
                  ( ("esr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4859 4873]))                  
                :type "bool")
                nil [4827 5470])
            ("perfmon_process_access" function
               (:arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5651 5669])
                    ("vm_id" variable (:type ("ffa_vm_id_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5670 5688])
                    ("esr" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5689 5703]))                  
                :type "bool")
                nil [5623 7467])
            ("perfmon_get_pmccfiltr_el0_init_value" function
               (:arguments 
                  ( ("vm_id" variable (:type ("ffa_vm_id_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7599 7617]))                  
                :type ("uintreg_t" type (:type "class") nil nil))
                nil [7552 7794]))          
      :file "perfmon.c"
      :pointmax 7795
      :fsize 7794
      :lastmodtime '(24816 36432)
      :unmatched-syntax nil
      :lexical-table 
        '(("PERFMON_REGISTERS_READ_WRITE" . 
              ((symbol "X" 2860 . 2861) (semantic-list "(PMINTENSET_EL1    , 3, 0,  9, 14, 1)" 2861 . 2898) (symbol "X" 2902 . 2903) (semantic-list "(PMINTENCLR_EL1    , 3, 0,  9, 14, 2)" 2903 . 2940) (symbol "X" 2944 . 2945) (semantic-list "(PMCR_EL0          , 3, 3,  9, 12, 0)" 2945 . 2982) (symbol "X" 2986 . 2987) (semantic-list "(PMCNTENSET_EL0    , 3, 3,  9, 12, 1)" 2987 . 3024) (symbol "X" 3028 . 3029) (semantic-list "(PMCNTENCLR_EL0    , 3, 3,  9, 12, 2)" 3029 . 3066) (symbol "X" 3070 . 3071) (semantic-list "(PMOVSCLR_EL0      , 3, 3,  9, 12, 3)" 3071 . 3108) (symbol "X" 3112 . 3113) (semantic-list "(PMSELR_EL0        , 3, 3,  9, 12, 5)" 3113 . 3150) (symbol "X" 3154 . 3155) (semantic-list "(PMCCNTR_EL0       , 3, 3,  9, 13, 0)" 3155 . 3192) (symbol "X" 3196 . 3197) (semantic-list "(PMXEVTYPER_EL0    , 3, 3,  9, 13, 1)" 3197 . 3234) (symbol "X" 3238 . 3239) (semantic-list "(PMXEVCNTR_EL0     , 3, 3,  9, 13, 2)" 3239 . 3276) (symbol "X" 3280 . 3281) (semantic-list "(PMUSERENR_EL0     , 3, 3,  9, 14, 0)" 3281 . 3318) (symbol "X" 3322 . 3323) (semantic-list "(PMOVSSET_EL0      , 3, 3,  9, 14, 3)" 3323 . 3360) (symbol "X" 3364 . 3365) (semantic-list "(PMEVTYPER0_EL0    , 3, 3, 14, 12, 0)" 3365 . 3402) (symbol "X" 3406 . 3407) (semantic-list "(PMEVTYPER1_EL0    , 3, 3, 14, 12, 1)" 3407 . 3444) (symbol "X" 3448 . 3449) (semantic-list "(PMEVTYPER2_EL0    , 3, 3, 14, 12, 2)" 3449 . 3486) (symbol "X" 3490 . 3491) (semantic-list "(PMEVTYPER3_EL0    , 3, 3, 14, 12, 3)" 3491 . 3528) (symbol "X" 3532 . 3533) (semantic-list "(PMEVTYPER4_EL0    , 3, 3, 14, 12, 4)" 3533 . 3570) (symbol "X" 3574 . 3575) (semantic-list "(PMEVTYPER5_EL0    , 3, 3, 14, 12, 5)" 3575 . 3612) (symbol "X" 3616 . 3617) (semantic-list "(PMEVTYPER6_EL0    , 3, 3, 14, 12, 6)" 3617 . 3654) (symbol "X" 3658 . 3659) (semantic-list "(PMEVTYPER7_EL0    , 3, 3, 14, 12, 7)" 3659 . 3696) (symbol "X" 3700 . 3701) (semantic-list "(PMEVTYPER8_EL0    , 3, 3, 14, 13, 0)" 3701 . 3738) (symbol "X" 3742 . 3743) (semantic-list "(PMEVTYPER9_EL0    , 3, 3, 14, 13, 1)" 3743 . 3780) (symbol "X" 3784 . 3785) (semantic-list "(PMEVTYPER10_EL0   , 3, 3, 14, 13, 2)" 3785 . 3822) (symbol "X" 3826 . 3827) (semantic-list "(PMEVTYPER11_EL0   , 3, 3, 14, 13, 3)" 3827 . 3864) (symbol "X" 3868 . 3869) (semantic-list "(PMEVTYPER12_EL0   , 3, 3, 14, 13, 4)" 3869 . 3906) (symbol "X" 3910 . 3911) (semantic-list "(PMEVTYPER13_EL0   , 3, 3, 14, 13, 5)" 3911 . 3948) (symbol "X" 3952 . 3953) (semantic-list "(PMEVTYPER14_EL0   , 3, 3, 14, 13, 6)" 3953 . 3990) (symbol "X" 3994 . 3995) (semantic-list "(PMEVTYPER15_EL0   , 3, 3, 14, 13, 7)" 3995 . 4032) (symbol "X" 4036 . 4037) (semantic-list "(PMEVTYPER16_EL0   , 3, 3, 14, 14, 0)" 4037 . 4074) (symbol "X" 4078 . 4079) (semantic-list "(PMEVTYPER17_EL0   , 3, 3, 14, 14, 1)" 4079 . 4116) (symbol "X" 4120 . 4121) (semantic-list "(PMEVTYPER18_EL0   , 3, 3, 14, 14, 2)" 4121 . 4158) (symbol "X" 4162 . 4163) (semantic-list "(PMEVTYPER19_EL0   , 3, 3, 14, 14, 3)" 4163 . 4200) (symbol "X" 4204 . 4205) (semantic-list "(PMEVTYPER20_EL0   , 3, 3, 14, 14, 4)" 4205 . 4242) (symbol "X" 4246 . 4247) (semantic-list "(PMEVTYPER21_EL0   , 3, 3, 14, 14, 5)" 4247 . 4284) (symbol "X" 4288 . 4289) (semantic-list "(PMEVTYPER22_EL0   , 3, 3, 14, 14, 6)" 4289 . 4326) (symbol "X" 4330 . 4331) (semantic-list "(PMEVTYPER23_EL0   , 3, 3, 14, 14, 7)" 4331 . 4368) (symbol "X" 4372 . 4373) (semantic-list "(PMEVTYPER24_EL0   , 3, 3, 14, 15, 0)" 4373 . 4410) (symbol "X" 4414 . 4415) (semantic-list "(PMEVTYPER25_EL0   , 3, 3, 14, 15, 1)" 4415 . 4452) (symbol "X" 4456 . 4457) (semantic-list "(PMEVTYPER26_EL0   , 3, 3, 14, 15, 2)" 4457 . 4494) (symbol "X" 4498 . 4499) (semantic-list "(PMEVTYPER27_EL0   , 3, 3, 14, 15, 3)" 4499 . 4536) (symbol "X" 4540 . 4541) (semantic-list "(PMEVTYPER28_EL0   , 3, 3, 14, 15, 4)" 4541 . 4578) (symbol "X" 4582 . 4583) (semantic-list "(PMEVTYPER29_EL0   , 3, 3, 14, 15, 5)" 4583 . 4620) (symbol "X" 4624 . 4625) (semantic-list "(PMEVTYPER30_EL0   , 3, 3, 14, 15, 6)" 4625 . 4662) (symbol "X" 4666 . 4667) (semantic-list "(PMCCFILTR_EL0     , 3, 3, 14, 15, 7)" 4667 . 4704)))
          ("PERFMON_REGISTERS_READ" . 
              ((symbol "X" 978 . 979) (semantic-list "(PMCEID0_EL0       , 3, 3,  9, 12, 6)" 979 . 1016) (symbol "X" 1020 . 1021) (semantic-list "(PMCEID1_EL0       , 3, 3,  9, 12, 7)" 1021 . 1058) (symbol "X" 1062 . 1063) (semantic-list "(PMEVCNTR0_EL0     , 3, 3, 14,  8, 0)" 1063 . 1100) (symbol "X" 1104 . 1105) (semantic-list "(PMEVCNTR1_EL0     , 3, 3, 14,  8, 1)" 1105 . 1142) (symbol "X" 1146 . 1147) (semantic-list "(PMEVCNTR2_EL0     , 3, 3, 14,  8, 2)" 1147 . 1184) (symbol "X" 1188 . 1189) (semantic-list "(PMEVCNTR3_EL0     , 3, 3, 14,  8, 3)" 1189 . 1226) (symbol "X" 1230 . 1231) (semantic-list "(PMEVCNTR4_EL0     , 3, 3, 14,  8, 4)" 1231 . 1268) (symbol "X" 1272 . 1273) (semantic-list "(PMEVCNTR5_EL0     , 3, 3, 14,  8, 5)" 1273 . 1310) (symbol "X" 1314 . 1315) (semantic-list "(PMEVCNTR6_EL0     , 3, 3, 14,  8, 6)" 1315 . 1352) (symbol "X" 1356 . 1357) (semantic-list "(PMEVCNTR7_EL0     , 3, 3, 14,  8, 7)" 1357 . 1394) (symbol "X" 1398 . 1399) (semantic-list "(PMEVCNTR8_EL0     , 3, 3, 14,  9, 0)" 1399 . 1436) (symbol "X" 1440 . 1441) (semantic-list "(PMEVCNTR9_EL0     , 3, 3, 14,  9, 1)" 1441 . 1478) (symbol "X" 1482 . 1483) (semantic-list "(PMEVCNTR10_EL0    , 3, 3, 14,  9, 2)" 1483 . 1520) (symbol "X" 1524 . 1525) (semantic-list "(PMEVCNTR11_EL0    , 3, 3, 14,  9, 3)" 1525 . 1562) (symbol "X" 1566 . 1567) (semantic-list "(PMEVCNTR12_EL0    , 3, 3, 14,  9, 4)" 1567 . 1604) (symbol "X" 1608 . 1609) (semantic-list "(PMEVCNTR13_EL0    , 3, 3, 14,  9, 5)" 1609 . 1646) (symbol "X" 1650 . 1651) (semantic-list "(PMEVCNTR14_EL0    , 3, 3, 14,  9, 6)" 1651 . 1688) (symbol "X" 1692 . 1693) (semantic-list "(PMEVCNTR15_EL0    , 3, 3, 14,  9, 7)" 1693 . 1730) (symbol "X" 1734 . 1735) (semantic-list "(PMEVCNTR16_EL0    , 3, 3, 14, 10, 0)" 1735 . 1772) (symbol "X" 1776 . 1777) (semantic-list "(PMEVCNTR17_EL0    , 3, 3, 14, 10, 1)" 1777 . 1814) (symbol "X" 1818 . 1819) (semantic-list "(PMEVCNTR18_EL0    , 3, 3, 14, 10, 2)" 1819 . 1856) (symbol "X" 1860 . 1861) (semantic-list "(PMEVCNTR19_EL0    , 3, 3, 14, 10, 3)" 1861 . 1898) (symbol "X" 1902 . 1903) (semantic-list "(PMEVCNTR20_EL0    , 3, 3, 14, 10, 4)" 1903 . 1940) (symbol "X" 1944 . 1945) (semantic-list "(PMEVCNTR21_EL0    , 3, 3, 14, 10, 5)" 1945 . 1982) (symbol "X" 1986 . 1987) (semantic-list "(PMEVCNTR22_EL0    , 3, 3, 14, 10, 6)" 1987 . 2024) (symbol "X" 2028 . 2029) (semantic-list "(PMEVCNTR23_EL0    , 3, 3, 14, 10, 7)" 2029 . 2066) (symbol "X" 2070 . 2071) (semantic-list "(PMEVCNTR24_EL0    , 3, 3, 14, 11, 0)" 2071 . 2108) (symbol "X" 2112 . 2113) (semantic-list "(PMEVCNTR25_EL0    , 3, 3, 14, 11, 1)" 2113 . 2150) (symbol "X" 2154 . 2155) (semantic-list "(PMEVCNTR26_EL0    , 3, 3, 14, 11, 2)" 2155 . 2192) (symbol "X" 2196 . 2197) (semantic-list "(PMEVCNTR27_EL0    , 3, 3, 14, 11, 3)" 2197 . 2234) (symbol "X" 2238 . 2239) (semantic-list "(PMEVCNTR28_EL0    , 3, 3, 14, 11, 4)" 2239 . 2276) (symbol "X" 2280 . 2281) (semantic-list "(PMEVCNTR29_EL0    , 3, 3, 14, 11, 5)" 2281 . 2318) (symbol "X" 2322 . 2323) (semantic-list "(PMEVCNTR30_EL0    , 3, 3, 14, 11, 6)" 2323 . 2360)))
          ("PERFMON_REGISTERS_WRITE" . ((symbol "X" 2585 . 2586) (semantic-list "(PMSWINC_EL0       , 3, 3,  9, 12, 4)" 2586 . 2623)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("hf/arch/cpu.h" include nil nil [607 631])
            ("stdbool.h" include (:system-flag t) nil [633 653])
            ("stddef.h" include (:system-flag t) nil [654 673])
            ("stdint.h" include (:system-flag t) nil [674 693])
            ("hf/arch/plat/psci.h" include nil nil [695 725])
            ("hf/addr.h" include nil nil [727 747])
            ("hf/ffa.h" include nil nil [748 767])
            ("hf/std.h" include nil nil [768 787])
            ("hf/vm.h" include nil nil [788 806])
            ("feature_id.h" include nil nil [808 831])
            ("msr.h" include nil nil [832 848])
            ("perfmon.h" include nil nil [849 869])
            ("sysregs.h" include nil nil [870 890])
            ("ID_AA64MMFR1_EL1_LO" variable (:constant-flag t) nil [967 986])
            ("lor_disable" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1032 1037]))                  
                :type "void")
                nil [1008 1211])
            ("gic_regs_reset" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("r" variable
                       (:pointer 1
                        :type ("arch_regs" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1240 1260])
                    ("is_primary" variable (:type "bool") (reparse-symbol arg-sub-list) [1261 1277]))                  
                :type "void")
                nil [1213 1776])
            ("arch_regs_reset" function
               (:arguments 
                  ( ("vcpu" variable
                       (:pointer 1
                        :type ("vcpu" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [1799 1817]))                  
                :type "void")
                nil [1778 3358])
            ("arch_regs_set_pc_arg" function
               (:arguments 
                  ( ("r" variable
                       (:pointer 1
                        :type ("arch_regs" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3386 3406])
                    ("pc" variable (:type ("ipaddr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3407 3419])
                    ("arg" variable (:type ("uintreg_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3420 3434]))                  
                :type "void")
                nil [3360 3477])
            ("arch_regs_set_retval" function
               (:arguments 
                  ( ("r" variable
                       (:pointer 1
                        :type ("arch_regs" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [3505 3525])
                    ("v" variable (:type ("ffa_value" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol arg-sub-list) [3526 3545]))                  
                :type "void")
                nil [3479 3701])
            ("arch_cpu_init" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3722 3727]))                  
                :type "void")
                nil [3703 4049]))          
      :file "cpu.c"
      :pointmax 4050
      :fsize 4049
      :lastmodtime '(24807 46999)
      :unmatched-syntax nil
      :lexical-table 
        '(("ID_AA64MMFR1_EL1_LO" . ((semantic-list "(UINT64_C(1) << 16)" 987 . 1006)))
          )
))
  :file "!ssh:nmg@desktop:!home!nmg!vm-shared!hafnium!hafnium!src!arch!aarch64!hypervisor!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
